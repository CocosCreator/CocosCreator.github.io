[1,["1brw/JvvpFnIvdrxpFCgMZ","2fPqC0sdJIsYm5vNRCTvlQ@b219a","9enYjG2QNJGJNllHxhNxBp","a57M9PRhZFW5rTaSQtqaXB@f9941","12Y9dMgWdJKJGmTiZyQR9H@8abdc","12Y9dMgWdJKJGmTiZyQR9H@fc873","9eRyEeDfxGs4mNXecrUo5M","43HtsUte9FBY4dJEzlCr1O@f9941","d3x4IMKphEKYvHuEU7yaxB","12Y9dMgWdJKJGmTiZyQR9H@a804a","12Y9dMgWdJKJGmTiZyQR9H@38fd2","4bmIt8cFpC1YRU8Ec/L/Ds","bbPDQlErRMEKFo9+sqFFna@f9941","f1KiPEuSRDIqJgPZgkKPHo@f9941","2cY86SeSRNxLcM6M+5Z2XC@f9941","3fp6n1ojxH1buTNrK/nTG3","3e6frB+nlN/YFwGed8D1aY","53KKTvffJLiLVYteOIsTrz@f9941","d1NGQ2rJZCcbhjH0/erZWw","b3VwaEwq1Ce6ejnTdg5lSF","2fPqC0sdJIsYm5vNRCTvlQ@e4014","2fPqC0sdJIsYm5vNRCTvlQ@938e8","55+4VO7eVCxLi63Kp6xPKy","12Y9dMgWdJKJGmTiZyQR9H@40ece","98NQEH+MNJrrQ/6B5NKLlJ","7e69cvzwJK7JIR1OVG2PJq@3577b","7e69cvzwJK7JIR1OVG2PJq@53398","e8XEmFEBJCcITmxuTBh/na@9ccfa","2btT6HdVdB/Z1nhOgtacVY@84e40","19IMmooJxMJb+vKh8UW6Xg","dfmof9YydEy5jMzHkJhfGc","8dxYQXk59K0pWpHvIp9TYB@6c48a","69K2eWy79ElJ3iiI/j+dCo","c6VkzqhMNDcYGZUG4CK8Zt@6c48a","fcq7Ouo31Al6SX6GxpPBVu@6c48a","12Y9dMgWdJKJGmTiZyQR9H@17020","a2U+za4lxEG5S2XgA2Sco2","158syD9mJOzbyFtXbmjnPS@6c48a","f3XPRJ8NlMraWzwGPzjxWP@276c1","2btT6HdVdB/Z1nhOgtacVY@938e8","2btT6HdVdB/Z1nhOgtacVY@e4014","2btT6HdVdB/Z1nhOgtacVY@7a2c9","2cY86SeSRNxLcM6M+5Z2XC@6c48a","2fPqC0sdJIsYm5vNRCTvlQ@4de10","2fPqC0sdJIsYm5vNRCTvlQ@29812","2fPqC0sdJIsYm5vNRCTvlQ@8437c","3c0iGnKmRCm7uYwNmOSB63@e4014","3c0iGnKmRCm7uYwNmOSB63@938e8","3c0iGnKmRCm7uYwNmOSB63@3639e","12Y9dMgWdJKJGmTiZyQR9H@2e76e","1c58FmChVOEZaRUkczlkW4","76zfs/JDNJ8ZvavexOPHUG","7e69cvzwJK7JIR1OVG2PJq@68caa","62uGFYFHdEoIbe0ewFe1E5@5770e","a1EEGVcHtEMKE1iHO89Clj@17fcd","86os11tMpNK4f9RQ8LruKn@751cd","41ERwfLrVMW4mYTCw8KzLP@03963","704At+1sxOAZefcMW+db1r@7721b","e0u8n6dTNOYr+DEUUvDbPZ@1f49f","a6I5p8IRNNrZPcK3D6fMgT@c87c6","4c7dJLRUVEOJZCPksElJ2M@2245a","3c0iGnKmRCm7uYwNmOSB63@67cdc","f3G5jmAOZIhYHekk9QZgsy","5b0Vs2xetO04BdbvQhQ04d","49vAsCl5hLJqRLM9mKsQMF","fco4lIFntE07fSwzhrYvXL","639rRHAT5Hw5yfjbU9P1g8","d0MqyYBeFAkIi762QNy1/B@b47c0","6fAc9/gb9Kfr1dCvwZaWSA@b47c0","57UgcWSMhKGYrPQcn4d3+w@f9941","41ERwfLrVMW4mYTCw8KzLP@4d07d","41ERwfLrVMW4mYTCw8KzLP@48823","41ERwfLrVMW4mYTCw8KzLP@84dd8","43HtsUte9FBY4dJEzlCr1O@6c48a","174AAQEMlBhZVMXsyLxAfl","4c7dJLRUVEOJZCPksElJ2M@11bfd","4c7dJLRUVEOJZCPksElJ2M@af578","4c7dJLRUVEOJZCPksElJ2M@7aa81","53KKTvffJLiLVYteOIsTrz@6c48a","57UgcWSMhKGYrPQcn4d3+w@6c48a","62uGFYFHdEoIbe0ewFe1E5@5353c","62uGFYFHdEoIbe0ewFe1E5@4de10","62uGFYFHdEoIbe0ewFe1E5@7bf00","ac+IiLhB9IeJnIBxZ16iKJ","c7vvK/yA9B7bkLyMovWF3q","56xj9doiJBbIamcZbyUy9f","704At+1sxOAZefcMW+db1r@11bfd","704At+1sxOAZefcMW+db1r@af578","704At+1sxOAZefcMW+db1r@84da2","7e69cvzwJK7JIR1OVG2PJq@97a71","86os11tMpNK4f9RQ8LruKn@4d07d","86os11tMpNK4f9RQ8LruKn@48823","86os11tMpNK4f9RQ8LruKn@95300","d19dECsh1MUKaV8OM16Qy7@6c48a","e9StezXmJAOpXr2xQ2CqI6","54rVjd+I9CDZxFanpEhnH7","a1EEGVcHtEMKE1iHO89Clj@af578","a1EEGVcHtEMKE1iHO89Clj@11bfd","a1EEGVcHtEMKE1iHO89Clj@0f7e6","a57M9PRhZFW5rTaSQtqaXB@6c48a","a6I5p8IRNNrZPcK3D6fMgT@11bfd","a6I5p8IRNNrZPcK3D6fMgT@af578","a6I5p8IRNNrZPcK3D6fMgT@41d94","bbPDQlErRMEKFo9+sqFFna@6c48a","e0u8n6dTNOYr+DEUUvDbPZ@af578","e0u8n6dTNOYr+DEUUvDbPZ@11bfd","e0u8n6dTNOYr+DEUUvDbPZ@0ee4f","e0u8n6dTNOYr+DEUUvDbPZ@90496","e8XEmFEBJCcITmxuTBh/na@e4014","e8XEmFEBJCcITmxuTBh/na@938e8","e8XEmFEBJCcITmxuTBh/na@0ee4f","e8XEmFEBJCcITmxuTBh/na@8d18c","f1KiPEuSRDIqJgPZgkKPHo@6c48a","6aFUaSeyJAG77dRuhWxA63","c0WJlddtpLI7MmcHvv3M5F","45x0MNMehFFJ7RuKS4XZJ4","a0cOu/hxZEWoYaUyVUsAXD","f3XPRJ8NlMraWzwGPzjxWP@4de10","f3XPRJ8NlMraWzwGPzjxWP@5353c","f3XPRJ8NlMraWzwGPzjxWP@f08fe"],["node","root","_mesh","_effectAsset","asset","_spriteFrame","data","targetInfo","_parent","_local_video_source","value","_textureSource","_material","_normalSprite","mainTexture","target","source","_checkMark","_target","_defaultClip","_particleSystem","_mainTexture","prefab","_backgroundImage","_cameraComponent","GL_Sprite","label","scene","bulletExplosionPrefab","_envmapHDR","_envmapLDR","firePoint","pitchAxis","yawAxis","bulletPrefab"],[["cc.Node",["_name","_layer","_id","_objFlags","_active","__editorExtras__","_parent","_components","_lpos","_prefab","_children","_lscale","_lrot","_euler"],-3,1,9,5,4,2,5,5,5],["ea824WSRWRD3LJUSBgXeN5B",["mutedOpenBool","_remote_video_url","videoPlaybackRateNum","videoVolumeNum","_previewVideo","loopVideoPlay","reFlashSpeed","_select_video_type","openLook3dVideoNodeBool","pausePlayVideo","_showVideoDomView","_enabled","node","_local_video_source","_setDefaultWh","__prefab"],-9,1,6,5,4],"cc.ImageAsset",["cc.Node",["_name","_layer","_active","_components","_lpos","_parent","_children","_lrot","_euler","_lscale"],0,12,5,1,2,5,5,5],["cc.Widget",["_alignFlags","_top","_originalWidth","_left","_bottom","_right","_enabled","_alignMode","_originalHeight","node"],-6,1],"cc.SpriteFrame",["cc.Node",["_name","_id","_parent","_components","_lpos","_lrot","_euler","_prefab","_children"],1,1,2,5,5,5,4,2],["cc.MeshRenderer",["_name","_shadowCastingMode","_enabled","_shadowReceivingMode","node","_materials","lightmapSettings","_mesh","__prefab"],-1,1,3,4,6,4],["cc.Sprite",["_sizeMode","_isTrimmedMode","_type","node","_spriteFrame","_color"],0,1,6,5],["cc.Label",["_string","_actualFontSize","_cacheMode","_fontSize","_lineHeight","_horizontalAlign","_isBold","_overflow","_enableWrapText","node","_color"],-6,1,5],["cc.CurveRange",["mode","constant","multiplier","constantMin","constantMax","spline"],-2,4],["cc.RealKeyframeValue",["value","rightTangentWeight","leftTangentWeight","interpolationMode","rightTangent","leftTangent"],-3],["cc.Layout",["_resizeMode","_layoutType","_affectedByScale","_spacingY","_isAlign","_paddingBottom","_paddingLeft","_paddingRight","node"],-5,1],["cc.GradientRange",["_mode","color","gradient","colorMin","colorMax"],2,5,4,5,5],["cc.ColorKey",["time","color"],2,5],["cc.PrefabInfo",["fileId","root","asset","nestedPrefabInstanceRoots","targetOverrides"],2,1,1,2,9],["cc.PrefabInstance",["fileId","propertyOverrides","prefabRootNode","mountedComponents"],2,9,1,9],["cc.Toggle",["_isChecked","node","_normalColor","_target","_checkMark","_normalSprite","checkEvents"],2,1,5,1,1,6,9],["cc.BoxCollider",["node","_material","_size","__prefab"],3,1,6,5,4],"cc.TextureCube",["cc.Material",["_name","_states","_defines","_techIdx","_props"],-1,12],["cc.Material",["_name","_props","_defines","_states"],-1],["cc.Prefab",["_name"],2],["cc.PrefabInstance",["fileId","prefabRootNode","propertyOverrides","removedComponents"],1,9,9],["cc.TargetOverrideInfo",["propertyPath","source","target","targetInfo","sourceInfo"],2,1,1,4,4],["cc.UITransform",["node","_contentSize","_anchorPoint"],3,1,5,5],["cc.ConeCollider",["_radius","_height","_enabled","node","_material"],0,1,6],["cc.Camera",["_visibility","_projection","_priority","_orthoHeight","_far","_clearFlags","node","_color"],-3,1,5],["01c94oOie9EDZDjFFfzDe9j",["node","prefab"],3,1,6],["cc.ColorOvertimeModule",["_enable","color"],2,4],["cc.Gradient",["colorKeys","alphaKeys"],3,9,9],["cc.AlphaKey",["alpha","time"],1],["cc.ShapeModule",["_enable","radius","_shapeType","emitFrom","_angle","arcSpeed","_rotation"],-2,4,5],["cc.VelocityOvertimeModule",["_enable","x","y","z","speedModifier"],2,4,4,4,4],["cc.ParticleSystemRenderer",["_renderMode","_mainTexture"],2,6],["cc.Mesh",["_native","_hash","_struct"],1,11],["cc.TargetInfo",["localID"],2],["cc.PrefabInfo",["fileId","root","instance","asset"],2,1,4,6],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,1],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,8],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,4],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,8],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,1],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,6],["cc.PhysicsMaterial",["_friction","_rollingFriction","_restitution"],0],["cc.CompPrefabInfo",["fileId"],2],["cc.ModelLightmapSettings",[],3],["cc.SceneAsset",["_name"],2],["cc.Scene",["_name","autoReleaseAssets","_children","_prefab","_globals"],1,12,4,4],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree"],3,4,4,4,4,4],["cc.AmbientInfo",["_skyIllumLDR","_skyColorHDR","_groundAlbedoHDR","_skyColorLDR","_groundAlbedoLDR"],2,5,5,5,5],["cc.ShadowsInfo",["_enabled","_shadowColor","_size"],2,5,5],["cc.SkyboxInfo",["_enabled","_envmapHDR","_envmapLDR"],2,6,6],["cc.FogInfo",[],3],["cc.OctreeInfo",["_enabled"],2],["cc.BlockInputEvents",["node"],3,1],["cc.Canvas",["node","_cameraComponent"],3,1,1],["a48dbUuDTJPDp+LzPEDK4rA",["_enabled","url","node"],1,1],["8d90ax9dDlNL5GpGoJYpjmB",["node","label","GL_Sprite"],3,1,1,1],["cc.CylinderCollider",["node","_material"],3,1,6],["cc.MeshCollider",["node","_material","_mesh"],3,1,6,6],["cc.MountedComponentsInfo",["targetInfo","components"],3,4,9],["3e784wgXb5FD6qDmQMPWi5v",["node"],3,1],["cc.DirectionalLight",["_shadowEnabled","_shadowBias","_shadowDistance","_csmLevel","node","_staticSettings"],-1,1,4],["cc.StaticLightSettings",["_castShadow"],2],["cc.ToggleContainer",["node","checkEvents"],3,1,9],["cc.ClickEvent",["_componentId","handler","target"],1,1],["cc.EditBox",["_returnType","_string","_inputMode","_maxLength","node","textChanged","_textLabel","_placeholderLabel"],-1,1,9,1,1],["1b4097H5s5E1YZkd5DJRPR9",["node","content","arrow","cannonModeToggleContainer","cannonAngleEditBox","cannonVelocityEditBox","cannonTrajectoryToggle","bulletExplodeToggle","cursorAdaptToggle","cursor"],3,1,1,1,1,1,1,1,1,1,1],["ee594FJk7xOGo9n2U0Qsd54",["smoothTime","node","cameraNode","targetNode"],2,1,1,1],["d2389mgGgZJDLpcE79+q1I8",["node","camera","cursor"],3,1,1,1],["b1385xAyyhPB6TsvEBSW4MY",["node","bulletExplosionPrefab"],3,1,6],["cc.Animation",["playOnLoad","node","__prefab","_clips","_defaultClip"],2,1,4,3,6],["cc.VideoClip",["_name","_native","_duration"],0],["cc.ParticleSystem",["duration","loop","_capacity","node","__prefab","_materials","startColor","startSizeX","startSizeY","startSizeZ","startSpeed","startRotationX","startRotationY","startRotationZ","startDelay","startLifetime","gravityModifier","rateOverTime","rateOverDistance","_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_trailModule","renderer"],0,1,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],["cc.ParticleSystem",["duration","loop","_capacity","node","__prefab","_materials","startColor","startSizeX","startSizeY","startSizeZ","startSpeed","startRotationX","startRotationY","startRotationZ","startDelay","startLifetime","gravityModifier","rateOverTime","rateOverDistance","_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_trailModule","renderer"],0,1,4,12,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],["cc.SizeOvertimeModule",["_enable","size","x","y","z"],2,4,4,4,4],["cc.RealCurve",["_times","_values"],2,9],["cc.ForceOvertimeModule",["x","y","z"],3,4,4,4],["cc.LimitVelocityOvertimeModule",["limitX","limitY","limitZ","limit"],3,4,4,4,4],["cc.RotationOvertimeModule",["x","y","z"],3,4,4,4],["cc.TextureAnimationModule",["frameOverTime","startFrame"],3,4,4],["cc.TrailModule",["lifeTime","widthRatio","colorOverTrail","colorOvertime","_particleSystem"],3,4,4,4,4,1],["cc.SphereCollider",["node","__prefab","_center","_material"],3,1,4,5,6],["cc.RigidBody",["_group","_linearDamping","node","__prefab"],1,1,4],["be613BiyadMYYQcjSzr/JtE",["node","__prefab"],3,1,4],["cc.EffectAsset",["_name","shaders","techniques"],0],["af3dac0xL5BLrK8YABTwvI2",["mode","node","__prefab","yawAxis","pitchAxis","firePoint","bulletPrefab"],2,1,4,1,1,1,6]],[[39,0,1,2,2],[10,1],[36,0,2],[38,0,1,2,3],[15,0,1,2,2],[45,0,2],[46,1],[25,0,1,1],[20,0,1,2,4,4],[0,3,5,6,9,3],[37,0,1,2,3,2],[16,0,1,2],[35,0,1,2,3],[41,0,1,2,2],[0,0,1,6,10,7,8,3],[0,0,10,9,2],[7,4,8,5,6,7,1],[25,0,1,2,1],[10,1,2],[22,1],[0,0,1,6,7,8,11,3],[0,0,6,7,9,8,2],[7,0,4,8,5,6,7,2],[40,0,1,2,3],[7,0,3,4,8,5,6,7,3],[13,1],[22,0,2],[0,0,6,7,9,8,12,11,13,2],[0,0,2,6,3],[43,0,1,2,2],[8,0,1,3,3],[3,0,1,6,3,4,3],[9,0,5,1,3,4,6,2,9,8],[66,0,1,2,3],[8,0,1,3,5,4,3],[8,0,1,3,4,3],[77,0,1,2],[20,0,3,1,2,4,5],[0,0,3,6,7,9,8,12,11,13,3],[3,0,1,5,3,3],[44,0,1,2,4],[7,0,1,4,5,6,7,3],[8,0,3,4,2],[4,0,2,8,9,4],[9,0,5,1,3,4,2,9,7],[9,0,5,1,3,4,7,8,9,10,8],[73,0,1,2,4],[10,0,5,2],[11,3,0,4,1,5,2,7],[0,0,1,6,7,8,3],[0,0,2,6,7,3],[0,0,10,7,9,2],[0,0,6,7,9,12,11,13,2],[3,0,2,1,5,3,4],[23,0,1,2,3],[24,0,1,4,2,3,2],[4,0,9,2],[55,0,1],[17,0,1,2,3,4,5,2],[17,1,2,3,6,4,1],[72,0,1,2,3,4,2],[76,0,1,2,3,4,2],[78,0,1,2,1],[79,0,1,2,3,1],[80,0,1,2,1],[81,0,1,1],[82,0,1,2,3,4,1],[21,0,1,3,2,5],[0,0,4,1,6,7,8,11,4],[0,0,1,6,7,8,12,13,3],[0,0,3,10,9,3],[0,0,1,6,7,9,8,11,3],[0,0,1,6,7,9,8,12,11,13,3],[0,0,3,6,10,7,9,8,11,3],[0,0,3,6,7,9,8,11,3],[3,0,1,5,3,4,3],[3,0,2,1,5,3,4,4],[6,0,1,2,3,3],[6,0,2,3,7,2],[7,0,4,5,6,7,2],[24,0,1,2,3,2],[8,2,0,1,3,4,4],[1,4,1,0,2,3,12,14,13,6],[1,6,12,15,2],[1,0,3,12,15,3],[67,0,1,2,3,4,5,6,7,5],[75,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,4],[13,0,2,2],[10,0,3,4,4],[29,0,1,2],[31,0,1,3],[32,0,3,1,4,5,6,5],[11,0,4,1,5,2,6],[11,3,0,3],[33,0,1,2,3,4,2],[34,1,1],[21,0,1,2,4],[0,0,6,10,7,9,8,2],[0,0,10,8,2],[0,0,1,10,7,8,3],[0,0,10,2],[0,0,1,2,6,10,7,8,4],[0,0,2,6,10,3],[0,0,4,1,6,10,7,8,4],[0,0,1,2,6,7,11,4],[0,0,1,6,7,8,12,11,13,3],[0,0,1,6,7,11,3],[0,0,2,6,7,8,12,13,3],[0,0,1,7,9,12,11,13,3],[0,0,6,10,9,8,2],[0,0,6,10,9,8,12,13,2],[0,0,6,9,8,2],[0,0,10,7,9,8,2],[3,0,2,1,6,3,4,4],[3,0,1,5,3,4,7,8,3],[3,0,1,5,3,4,9,3],[6,0,1,2,8,3,4,3],[6,0,1,2,3,4,5,6,3],[6,0,2,3,4,2],[6,0,2,3,7,5,6,2],[15,0,1,2,3,2],[15,0,4,3,2],[16,0,2,1,2],[16,0,3,1,2],[23,0,1,2,3,3],[42,0,1,2,2],[7,0,2,1,4,5,6,7,4],[47,0,2],[48,0,1,2,3,4,3],[49,0,1,2,3,4,1],[50,0,1,2,3,4,2],[51,0,1,2,2],[52,0,1,2,2],[53,1],[54,0,2],[8,0,3,5,2],[12,0,1,5,3,2,8,6],[12,0,1,3,2,4,8,6],[12,0,1,6,7,2,4,8,7],[12,0,1,3,2,8,5],[4,0,1,2,9,4],[4,0,3,5,1,4,9,6],[4,0,2,9,3],[4,6,0,3,4,9,5],[4,0,1,7,9,4],[4,0,3,9,3],[56,0,1,1],[57,0,1,2,3],[1,7,4,1,10,8,5,0,2,12,14,9],[1,4,1,6,5,2,12,14,13,6],[1,7,4,1,0,2,3,12,13,7],[1,11,1,9,0,3,12,13,6],[1,1,9,0,3,12,13,5],[1,4,1,5,0,2,14,13,6],[1,4,1,2,12,14,13,4],[1,4,1,8,0,2,3,12,15,14,13,7],[1,6,0,2,3,12,15,5],[1,6,5,0,2,3,12,15,6],[58,0,1,2,1],[17,1,2,3,4,5,1],[18,0,2,1,1],[18,0,1,1],[18,0,3,1],[26,0,1,3,4,3],[26,2,0,1,3,4,4],[59,0,1,1],[60,0,1,2,1],[61,0,1,1],[62,0,1],[9,0,1,2,9,4],[9,0,1,9,3],[9,0,1,3,4,2,9,10,6],[63,0,1,2,3,4,5,5],[64,0,2],[27,0,6,2],[27,1,2,3,4,5,0,6,7,7],[28,1],[28,0,1,1],[65,0,1,1],[68,0,1,2,3,4,5,6,7,8,9,1],[69,0,1,2,3,2],[70,0,1,2,1],[71,0,1,1],[74,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,4],[13,1,1],[13,0,3,4,2],[10,0,2,5,3],[29,1,1],[30,0,1,1],[30,0,1],[14,1],[14,0,2],[14,1,1],[14,0,1,2],[31,0,2],[32,0,2,1,5,4],[11,3,0,1,2,5],[11,3,1,2,4],[33,1,2,3,4,1],[34,0,1,2],[83,0,1,2,3,1],[84,0,1,2,3,3],[85,0,1,1],[86,0,1,2,4],[87,0,1,2,3,4,5,6,2]],[[[[12,".bin",3429205708,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":72464,"length":28560,"count":7140,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":72464,"count":1294,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.49748557806015015,-0.5,-0.4989933371543884],"maxPosition",8,[1,0.49949654936790466,0.5,0.49899348616600037]]],-1],0,0,[],[],[]],[[[12,".bin",3219909449,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":6776,"length":2400,"count":600,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":6776,"count":121,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-5,0,-5],"maxPosition",8,[1,5,0,5]]],-1],0,0,[],[],[]],[[[12,".bin",3767419795,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":7280,"length":864,"count":216,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":7280,"count":130,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-0.5000000596046448,-0.4999999701976776],"maxPosition",8,[1,0.5,0.5,0.5000000596046448]]],-1],0,0,[],[],[]],[[[12,".bin",1338612902,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":72632,"length":24576,"count":6144,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":72632,"count":1297,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-0.10000000149011612,-0.5],"maxPosition",8,[1,0.5,0.10000000149011612,0.5]]],-1],0,0,[],[],[]],[[[12,".bin",850226558,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":14560,"length":1536,"count":384,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":14560,"count":260,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-1,-0.5],"maxPosition",8,[1,0.5,1,0.5]]],-1],0,0,[],[],[]],[[[12,".bin",3434579268,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1344,"length":144,"count":36,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":1344,"count":24,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-0.5,-0.5],"maxPosition",8,[1,0.5,0.5,0.5]]],-1],0,0,[],[],[]],[[[12,".bin",3383603168,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":224,"length":24,"count":6,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":224,"count":4,"stride":56},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false},{"name":"a_texCoord1","format":21,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,-0.5,0],"maxPosition",8,[1,0.5,0.5,0]]],-1],0,0,[],[],[]],[[[37,"circle","1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_ALBEDO_MAP":true},{},{}],[[[{},"mainTexture",6,0],{},{}],11,0,0]]],0,0,[0,0],[14,3],[37,0]],[[[26,"TrajectoryPoint"],[2,["356QVp4N1UHLDFAVd+oJ8S"]],[15,"TrajectoryPoint",[-3],[120,"c46/YsCPVOJYA4mWEpNYRx",-2,0,[-1]]],[9,0,null,2,[10,"356QVp4N1UHLDFAVd+oJ8S",-4,[122,"89vA72L/JJ67QYPBaKcOnq",2,[[3,"statue_block",["_name"],1],[0,["_lpos"],1,[1,0,0,0]],[0,["_lrot"],1,[3,0,0,0,1]],[0,["_euler"],1,[1,0,0,0]],[0,["_lscale"],1,[1,0.331,0.225,0.638]]]],0]]],0,[0,-1,3,0,1,2,0,-1,3,0,1,3,0,6,2,4],[0],[4],[38]],[[[40,0.5,0.2,0.5]],0,0,[],[],[]],[[[12,".bin",694934576,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":9216,"length":1152,"count":288,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":18432,"length":1728,"count":432,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":9216,"count":192,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":10368,"length":8064,"count":168,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,0,-0.5],"maxPosition",8,[1,0.5,0.34502729773521423,0.5]]],-1],0,0,[],[],[]],[[[19],[15,"fence_bend",[-2],[4,"b03/wlwdVZ6ZTnCzuMt1Hh",-1,0]],[21,"fence_bend",1,[[16,-3,[5,"521W1LcWFdnII2WbTYaIlf"],[0,1],[6],2]],[4,"50030Gb15b8q3sMHRY0uZR",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0],[-1,-2,2],[39,40,41]],[[[8,"woodDark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.7686275243759155,0.4274510145187378,0.29411768913269043]]],11]]],0,0,[0],[3],[0]],[[[8,"wood",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,1,0.5568627715110779,0.384313702583313]]],11]]],0,0,[0],[3],[0]],[[{"name":"radio_button_on","rect":{"x":1,"y":1,"width":30,"height":30},"offset":{"x":0,"y":0},"originalSize":{"width":32,"height":32},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-15,-15,0,15,-15,0,-15,15,0,15,15,0],"indexes":[0,1,2,2,1,3],"uv":[1,31,31,31,1,1,31,1],"nuv":[0.03125,0.03125,0.96875,0.03125,0.03125,0.96875,0.96875,0.96875],"minPos":{"x":-15,"y":-15,"z":0},"maxPos":{"x":15,"y":15,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[11],[42]],[[[12,".bin",1344091142,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":17472,"length":3336,"count":834,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":21960,"length":144,"count":36,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[2],"indexView":{"offset":27192,"length":1272,"count":318,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":17472,"count":364,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":20808,"length":1152,"count":24,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":22104,"length":5088,"count":106,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.01875000074505806,-0.17028120160102844,2.8876460667477634e-15],"maxPosition",8,[1,0.01875000074505806,0.19471879303455353,0.4000000059604645]]],-1],0,0,[],[],[]],[[[8,"stone",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.7215685844421387,0.886274516582489,0.9098039269447327]]],11]]],0,0,[0],[3],[0]],[[[12,".bin",2559308554,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":7104,"length":1176,"count":294,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":10392,"length":360,"count":90,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":7104,"count":148,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":8280,"length":2112,"count":44,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,0,0.4300000071525574],"maxPosition",8,[1,0.5,0.34502729773521423,0.5]]],-1],0,0,[],[],[]],[[[8,"woodDark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.7686275243759155,0.4274510145187378,0.29411768913269043]]],11]]],0,0,[0],[3],[0]],[[[19],[15,"fence_gate",[-2],[4,"97e7H0ou9fFboVQSrXQzeQ",-1,0]],[97,"fence_gate",1,[-4],[[16,-3,[5,"514CF3aMVSLIUUnCVpm9zM"],[4,5],[6],6]],[4,"c9prw9PwBQkY74qKOFYEVn",1,0],[1,0,-0.05000000074505806,0]],[27,"gate",2,[[16,-5,[5,"58iKACALFSMJut7L4dUnTv"],[0,1,2],[6],3]],[4,"15ij/MOyJdpYyG+MmFhhMC",1,0],[1,0.15000000596046448,0.1725136935710907,0.4650000035762787],[3,0,-0.7071067811865476,0,0.7071067811865476],[1,1.8666670322418213,0.75,0.75],[1,0,-90.00000000000003,0]]],0,[0,1,1,0,-1,2,0,0,2,0,-1,3,0,0,3,0,6,1,5],[0,0,0,0,0,0,0],[-1,-2,-3,2,-1,-2,2],[20,43,21,44,20,21,45]],[[[8,"wood",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,1,0.5568627715110779,0.384313702583313]]],11]]],0,0,[0],[3],[0]],[[[12,".bin",3794407356,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":3840,"length":672,"count":168,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":5280,"length":96,"count":24,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":3840,"count":80,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":4512,"length":768,"count":16,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,0,0.4300000071525574],"maxPosition",8,[1,0.5,0.34502729773521423,0.5]]],-1],0,0,[],[],[]],[[[19],[15,"fence_simple",[-2],[4,"9fuji3m2dR+oGc/dVvT4/+",-1,0]],[21,"fence_simple",1,[[16,-3,[5,"13VqVSRRpUj5TxIjbxMfu5"],[0,1],[6],2]],[4,"9cTBqHJGdZkKcm7aP4u7by",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0],[-1,-2,2],[46,47,48]],[[[8,"woodDark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.7686275243759155,0.4274510145187378,0.29411768913269043]]],11]]],0,0,[0],[3],[0]],[[[8,"wood",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,1,0.5568627715110779,0.384313702583313]]],11]]],0,0,[0],[3],[0]],[[[40,0.1,0.1,0.1]],0,0,[],[],[]],[[[8,"clamp",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_BATCHING":true},{},{}],[[[{},"mainColor",8,[4,4285822068]],{},{}],11,0,0]]],0,0,[0],[3],[0]],[[[127,"projectile2"],[128,"projectile2",true,[[[28,"- - - - - - - - - - - - - - - - - - - -","6c0NQC2FNDxKCPXGuH56fH",-43],-44,[28,"- - - - - - - - - - - - - - - - - - - -","6eJq6kKJZMH6y5utlXrMoI",-45],-46,[28,"- - - - - - - - - - - - - - - - - - - -","1eA8rQ7npM4ZhRtF6/lcrg",-47],-48,-49,[28,"- - - - - - - - - - - - - - - - - - - -","63200BCmtLj4vVpzNAUdWw",-50],-51,-52,-53,[28,"- - - - - - - - - - - - - - - - - - - -","fe28UT5eRDza/UbK/n4kSj",-54],-55,[28,"- - - - - - - - - - - - - - - - - - - -","e5uu1lXehGpq6gG9HPSesJ",-56],-57,-58,-59,[28,"- - - - - - - - - - - - - - - - - - - -","0cxyh7HI5C06oG8xE4orgL",-60],-61],4,1,4,1,4,1,1,4,1,1,1,4,1,4,1,1,1,4,1],[121,"40b67bfb-6fa1-4b50-ae45-10a32c43b74c",[[55,["firePoint"],-34,[2,["79UvwdIxhIhZUjNo34nYzc"]],-33,[2,["22TkR06QZB/bHEs+DNyNQ2"]]],[80,["cannon"],-36,-35,[2,["79UvwdIxhIhZUjNo34nYzc"]]],[80,["cannon"],-38,-37,[2,["79UvwdIxhIhZUjNo34nYzc"]]],[55,["yawAxis"],-40,[2,["79UvwdIxhIhZUjNo34nYzc"]],-39,[2,["20y2IventHjo/sZ87eGSDk"]]],[55,["pitchAxis"],-42,[2,["79UvwdIxhIhZUjNo34nYzc"]],-41,[2,["789ilRHdlNS5HIfnnS0qdv"]]]],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32]],[129,[130,0.5208,[2,0.242613,0.362617,0.798746,0.520833125],[2,0.241814,0.361945,0.798799,0],[2,0.519964,0.630786,0.905039,0.5208],[2,0.519544,0.630484,0.905069,0]],[131,true,[4,3356759060],[0,256,256]],[132,true,90,91],[133],[134,true]]],[98,"fences",[-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78],[1,0,0,7.55]],[99,"Content",33554432,[-84,-85,-86,-87,-88,-89,-90,-91,-92],[[17,-79,[5,200,429.05],[0,0.5,1]],[34,0,false,-80,[4,4278190080],88],[136,1,2,10,5,true,-81],[140,41,40,200,-82],[57,-83]],[1,0,-15,0]],[100,"test_floor_group",[-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,2,-103,-104]],[113,"HUD Options",false,33554432,[-109,3],[[[7,-105,[5,200,50]],-106,[57,-107],[56,33,-108]],4,1,4,4],[1,380,295,0]],[9,0,null,1,[10,"04NJEohgBAgqq3wbHUvO/H",-123,[124,"adMluj6zFDoI4LTiS0Y9DD",null,[[23,"Cannon",["_name"],[2,["04NJEohgBAgqq3wbHUvO/H"]]],[13,["_lpos"],[2,["04NJEohgBAgqq3wbHUvO/H"]],[1,0,0,0]],[13,["_lrot"],[2,["04NJEohgBAgqq3wbHUvO/H"]],[3,0,0,0,1]],[13,["_euler"],[2,["04NJEohgBAgqq3wbHUvO/H"]],[1,0,0,0]],[125,["trajectoryDrawer"],[2,["79UvwdIxhIhZUjNo34nYzc"]],-110],[29,["_local_video_source"],-111,61],[3,false,["pausePlayVideo"],-112],[3,true,["_previewVideo"],-113],[29,["_local_video_source"],-114,62],[3,false,["pausePlayVideo"],-115],[3,true,["_previewVideo"],-116],[0,["_setDefaultWh"],-117,[5,428,240]],[3,true,["mutedOpenBool"],-118],[3,1.4,["videoPlaybackRateNum"],-119],[23,"GL_Muzzle",["_name"],[2,["52F2tBEBJCOarrd9PHhasV"]]],[23,"GL_Base",["_name"],[2,["1egu5hczlOfb6EskRHiqFC"]]],[0,["_setDefaultWh"],-120,[5,428,240]],[3,false,["loopVideoPlay"],-121],[3,false,["loopVideoPlay"],-122]],[[2,["7bPr0l/k1HAbjuK6J7N45j"]],[2,["feovPfYZxBiKZbk3ztArCU"]]]],60]],[101,"Canvas",33554432,"4bUCJ3t4tMYYaLfWw+McSr",1,[-128,-129,-130,5,-131],[[7,-124,[5,960,640]],[146,-126,-125],[141,45,5.684341886080802e-14,5.684341886080802e-14,5.684341886080802e-14,5.684341886080802e-14,-127]],[1,480.00000000000006,320.00000000000006,0]],[31,"ToggleContainer",33554432,[-135,-136,-137,-138],[[[7,-132,[5,250,146]],-133,[137,1,2,2,true,true,-134]],4,1,4],[1,0,-13.525000000000006,0]],[102,"Items","f11YQTywZNgqkaDMzpNDAe",1,[-139,-140,-141,-142,-143,4]],[2,["8apdJLpslAWZp0MVHRkNO9"]],[103,"SourceCode",false,33554432,7,[-149],[[7,-144,[5,133.01999999999998,50]],[147,false,"https://gitee.com/ifaswind/cocos-case-projectile",-145],[57,-146],[138,1,1,10,10,true,true,-147],[56,36,-148]],[1,413.49,-295,0]],[2,["012jXyF1dZ4aBCiSCeCruB"]],[2,["9fuji3m2dR+oGc/dVvT4/+"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["97e7H0ou9fFboVQSrXQzeQ"]],[2,["b5kz0xstpC3ICjnZ6oTJY0"]],[14,"Header",33554432,5,[-153,-154],[[7,-150,[5,200,40]],[34,0,false,-151,[4,4278190080],71],[142,41,250,-152]],[1,0,5,0]],[14,"Arrow",33554432,29,[-157,-158],[[7,-155,[5,50,50]],[56,32,-156]],[1,75,0,0]],[31,"EditBox",33554432,[-162,-163],[[[7,-159,[5,100,30]],[81,1,0,false,-160,81],-161],4,4,1],[1,30,0,0]],[31,"EditBox",33554432,[-167,-168],[[[7,-164,[5,100,30]],[81,1,0,false,-165,82],-166],4,4,1],[1,30,0,0]],[31,"Toggle",33554432,[-172],[[[7,-169,[5,28,28]],[35,0,false,-170,83],-171],4,4,1],[1,60,0,0]],[31,"Toggle",33554432,[-176],[[[7,-173,[5,28,28]],[35,0,false,-174,85],-175],4,4,1],[1,60,0,0]],[31,"Toggle",33554432,[-180],[[[7,-177,[5,28,28]],[35,0,false,-178,87],-179],4,4,1],[1,60,0,0]],[2,["61cFpWpxddtaOpdBkAasLn"]],[2,["0dPBJ9ilVY2IV1Wpbf2+qT"]],[2,["90q5LLm05Y1YZ+Rh/2J5aw"]],[2,["dbOxskBOZcoLEMJZRwO3xS"]],[2,["82xuGUwTxc3574qlxf+c1y"]],[2,["d4kz3Oi/lflIBiB2K5MrNZ"]],[2,["037WooqZNfE5NVyRc4KgfI"]],[2,["2fP621bk5FUo9fvPo6J5T0"]],[116,"Cursor","38Zumn+BtCEaf6a5/VrQYe",1,[-182,-183,-184],[-181],[1,0,0,2]],[2,["54qAwyDp1OiaN4lOHCZFzw"]],[2,["54qAwyDp1OiaN4lOHCZFzw"]],[2,["2f+eW8yXdHZbGVvG5/eQaW"]],[114,"GL_Sprite",33554432,7,[[[7,-185,[5,517,310]],-186,[148,1,true,"http://download.cocos.org/CocosTest/test-case/movie.mp4",true,true,false,true,1.8,-187,[5,320,240]],[143,false,8,-48.369,-48.82699999999997,-188]],4,1,4,4],[1,-269.869,188.95,0],[3,-0.5084802152667337,-0.43289107776584457,-0.5371029338694765,-0.515338358655575],[1,147.8743333282021,-64.25133334359542,83.62299998460642]],[14,"HUD Tips",33554432,7,[-194],[[7,-189,[5,800,80]],[158,-192,-191,-190],[144,17,30,1,-193]],[1,0,250,0]],[14,"Cannon Mode",33554432,3,[-197,8],[[7,-195,[5,200,173.05]],[139,1,2,5,true,-196]],[1,0,-93.525,0]],[14,"FIXED_ALL",33554432,8,[-202,-203],[[7,-198,[5,200,35]],[159,-201,[4,4292269782],-200,-199,74]],[1,0,55.5,0]],[14,"Toggle",33554432,51,[-206],[[7,-204,[5,15,15]],[42,0,-205,73]],[1,-60,0,0]],[14,"FIXED_PITCH_ANGLE",33554432,8,[-211,-212],[[7,-207,[5,200,35]],[58,false,-210,[4,4292269782],-209,-208,76]],[1,0,18.5,0]],[14,"Toggle",33554432,53,[-215],[[7,-213,[5,15,15]],[42,0,-214,75]],[1,-60,0,0]],[14,"FIXED_VELOCITY",33554432,8,[-220,-221],[[7,-216,[5,200,35]],[58,false,-219,[4,4292269782],-218,-217,78]],[1,0,-18.5,0]],[14,"Toggle",33554432,55,[-224],[[7,-222,[5,15,15]],[42,0,-223,77]],[1,-60,0,0]],[14,"UNFIXED",33554432,8,[-229,-230],[[7,-225,[5,200,35]],[58,false,-228,[4,4292269782],-227,-226,80]],[1,0,-55.5,0]],[14,"Toggle",33554432,57,[-233],[[7,-231,[5,15,15]],[42,0,-232,79]],[1,-60,0,0]],[104,"GL_Ground",8388608,"e1cZaHPuFKerJa5Wt2BXSj",1,[[79,"Plane<ModelComponent>",-234,[0],[6],1],[160,-235,[1,10,0.001,10],2],[149,true,"http://vfx.mtime.cn/Video/2019/03/14/mp4/190314102306987969.mp4",1106,false,2,-236,[5,428,240],3]],[1,20,1,20]],[20,"GL_Cube",8388608,9,[[41,"Cube<ModelComponent>",1,-237,[4],[6],5],[161,-238,6],[82,true,"http://vfx.mtime.cn/Video/2019/03/14/mp4/190314102306987969.mp4",true,1.9,0,-239,[5,428,240],7]],[1,-2,0.25,-2],[1,3,0.5,2]],[20,"GL_Cone",8388608,9,[[41,"Cone<ModelComponent>",1,-240,[8],[6],9],[163,0.5000000149011612,1.0000000596046448,-241,10],[150,1,true,"http://wxsnsdy.tc.qq.com/105/20210/snsdyvideodownload?filekey=30280201010421301f0201690402534804102ca905ce620b1241b726bc41dcff44e00204012882540400&bizid=1023&hy=SH&fileparam=302c020101042530230204136ffd93020457e3c4ff02024ef202031e8d7f02030f42400204045a320a0201000400",true,5.3,0,-242,11]],[1,2,2.5,-2],[1,3,5,3]],[20,"GL_Cylinder",8388608,9,[[41,"Cylinder<ModelComponent>",1,-243,[12],[6],13],[165,-244,14],[82,true,"http://vfx.mtime.cn/Video/2019/03/14/mp4/190314102306987969.mp4",true,2.7,0,-245,[5,490,272],15]],[1,-2,0.3,2],[1,2.5,0.3,2.5]],[68,"GL_Cone-001",false,8388608,9,[[126,"Cone<ModelComponent>",false,1,-246,[16],[6],17],[164,false,0.5000000149011612,1.0000000596046448,-247,18],[151,false,"http://vfx.mtime.cn/Video/2019/03/14/mp4/190314102306987969.mp4",true,true,0,-248,19]],[1,2,2.5,-2],[1,3,5,3]],[68,"GL_Torus",false,8388608,9,[[41,"Torus<ModelComponent>",1,-249,[20],[6],21],[166,-250,22,23],[152,"http://vfx.mtime.cn/Video/2019/03/14/mp4/190314102306987969.mp4",true,true,0,-251,24]],[1,2,3.683,2],[1,3,3,3]],[2,["2cINyLsuNf/JmxzylqxyPy"]],[2,["ce2picvZZNy4YzSfrgsXZj"]],[115,"Label",33554432,49,[[[7,-252,[5,910,88.2]],-253,[145,17,10,-254]],4,1,4],[1,0,17.95,0],[1,0.5,0.5,1]],[39,"Checkmark",33554432,52,[[[7,-255,[5,15,15]],-256,[43,45,20,20,-257]],4,1,4]],[53,"Checkmark",false,33554432,54,[[[7,-258,[5,20,20]],-259,[43,45,20,20,-260]],4,1,4]],[53,"Checkmark",false,33554432,56,[[[7,-261,[5,20,20]],-262,[43,45,20,20,-263]],4,1,4]],[53,"Checkmark",false,33554432,58,[[[7,-264,[5,20,20]],-265,[43,45,20,20,-266]],4,1,4]],[14,"Cannon Angle",33554432,3,[-268,31],[[7,-267,[5,200,40]]],[1,0,-205.05,0]],[14,"Cannon Velocity",33554432,3,[-270,32],[[7,-269,[5,200,40]]],[1,0,-250.05,0]],[14,"Cannon Trajectory",33554432,3,[-272,33],[[7,-271,[5,200,40]]],[1,0,-295.05,0]],[14,"Bullet Explode",33554432,3,[-274,34],[[7,-273,[5,200,40]]],[1,0,-347.05,0]],[14,"Cursor Adapt",33554432,3,[-276,35],[[7,-275,[5,200,40]]],[1,0,-399.05,0]],[117,"Main Camera","c9DMICJLFO5IeO07EPon7U",1,[-277],[1,-6.06249935794417,14.840515251464824,18.765287017848863],[3,-0.25490338221672704,-0.1854910735265111,-0.04989183330301662,0.9476962236635323],[1,-30.10928455119109,-22.148818789764448,-3.975693351829396e-15]],[9,0,null,4,[10,"61cFpWpxddtaOpdBkAasLn",-281,[123,"dcRRWj/EZPBJEkeUXK3Mgz",[[167,[2,["f045ZgWaNbpoQ3rlCoRLPG"]],[[153,true,"http://wxsnsdy.tc.qq.com/105/20210/snsdyvideodownload?filekey=30280201010421301f0201690402534804102ca905ce620b1241b726bc41dcff44e00204012882540400&bizid=1023&hy=SH&fileparam=302c020101042530230204136ffd93020457e3c4ff02024ef202031e8d7f02030f42400204045a320a0201000400",false,true,3,[5,480,320],26]]]],[[3,"cliff_blockQuarter_rock",["_name"],36],[0,["_lpos"],36,[1,0,-1.338,0]],[0,["_lrot"],36,[3,0,0,0,1]],[0,["_euler"],36,[1,0,0,0]],[0,["_lscale"],36,[1,50,7,50]],[3,true,["_active"],-278],[3,"GL_cliff_blockQuarter_rock",["_name"],-279],[3,8388608,["_layer"],-280],[3,3,["_materials","length"],65],[29,["_materials","2"],65,27],[29,["_materials","0"],65,28],[29,["_materials","1"],65,29]]],25]],[2,["f045ZgWaNbpoQ3rlCoRLPG"]],[9,0,null,4,[10,"012jXyF1dZ4aBCiSCeCruB",-282,[11,"f75zEM7KhDA5qKwYAxe5a3",[[3,"statue_obelisk",["_name"],12],[0,["_lpos"],12,[1,3.375,0,3.099]],[0,["_lrot"],12,[3,0,-0.24050757879075682,0,0.9706472606174747]],[0,["_euler"],12,[1,0,-27.833,0]],[0,["_lscale"],12,[1,15,15,15]],[3,true,["_active"],12]]],30]],[9,0,null,4,[10,"2cYrFm7+JURr1Quy8ofxRB",-283,[54,"f2FUAOJGpOCJQlSwGIs4EP",null,[[23,"sign",["_name"],[2,["2cYrFm7+JURr1Quy8ofxRB"]]],[13,["_lpos"],[2,["2cYrFm7+JURr1Quy8ofxRB"]],[1,17.375,0,-13.531]],[13,["_lrot"],[2,["2cYrFm7+JURr1Quy8ofxRB"]],[3,0,-0.27241459536288815,0,0.9621799666555493]],[13,["_euler"],[2,["2cYrFm7+JURr1Quy8ofxRB"]],[1,0,-31.616,0]],[13,["_lscale"],[2,["2cYrFm7+JURr1Quy8ofxRB"]],[1,30,30,30]]]],31]],[9,0,null,4,[10,"0dPBJ9ilVY2IV1Wpbf2+qT",-284,[11,"bbngv6EDFLcrc9Bzfuy1qI",[[3,"tree_thin",["_name"],37],[0,["_lpos"],37,[1,6.469,0,-10.292]],[0,["_lrot"],37,[3,0,0,0,1]],[0,["_euler"],37,[1,0,0,0]],[0,["_lscale"],37,[1,7,7,7]]]],32]],[9,0,null,4,[10,"90q5LLm05Y1YZ+Rh/2J5aw",-285,[11,"35KRuxcVtIN7eGvPKyAjXz",[[3,"tree_pineSmallA",["_name"],38],[0,["_lpos"],38,[1,9.297,0,-1.079]],[0,["_lrot"],38,[3,0,0,0,1]],[0,["_euler"],38,[1,0,0,0]],[0,["_lscale"],38,[1,7,7,7]]]],33]],[9,0,null,4,[10,"dbOxskBOZcoLEMJZRwO3xS",-286,[11,"a1/osgBGdOh6163+E5bV1n",[[3,"tree_pineDefaultA",["_name"],39],[0,["_lpos"],39,[1,-8.35,0,3.835]],[0,["_lrot"],39,[3,0,0,0,1]],[0,["_euler"],39,[1,0,0,0]],[0,["_lscale"],39,[1,7,7,7]]]],34]],[9,0,null,4,[10,"82xuGUwTxc3574qlxf+c1y",-287,[11,"9cqvpi5L5CEZol3b5BXwxY",[[3,"tree_palm",["_name"],40],[0,["_lpos"],40,[1,17.499,0,2.032]],[0,["_lrot"],40,[3,0,0,0,1]],[0,["_euler"],40,[1,0,0,0]],[0,["_lscale"],40,[1,7,7,7]]]],35]],[9,0,null,4,[10,"d4kz3Oi/lflIBiB2K5MrNZ",-288,[11,"9bdF/ueKpDorSo6Vj6Am36",[[3,"tree_detailed",["_name"],41],[0,["_lpos"],41,[1,-3.067,0,-7.716]],[0,["_lrot"],41,[3,0,0,0,1]],[0,["_euler"],41,[1,0,0,0]],[0,["_lscale"],41,[1,7,7,7]]]],36]],[9,0,null,4,[10,"037WooqZNfE5NVyRc4KgfI",-289,[11,"71sLzB5gZOvrdMeM6CUzYp",[[3,"tree_cone",["_name"],42],[0,["_lpos"],42,[1,2.407,0,-15.512]],[0,["_lrot"],42,[3,0,0,0,1]],[0,["_euler"],42,[1,0,0,0]],[0,["_lscale"],42,[1,7,7,7]]]],37]],[9,0,null,4,[10,"25AC2KwXRYr7COX4h6ygbD",-292,[54,"9f60hV1bRIgYvdJjfd4ugO",null,[[23,"tree_blocks",["_name"],[2,["25AC2KwXRYr7COX4h6ygbD"]]],[13,["_lpos"],[2,["25AC2KwXRYr7COX4h6ygbD"]],[1,8.563,0,8.948]],[13,["_lrot"],[2,["25AC2KwXRYr7COX4h6ygbD"]],[3,0,0,0,1]],[0,["_euler"],-290,[1,0,0,0]],[0,["_lscale"],-291,[1,7,7,7]]]],38]],[9,0,null,2,[10,"9fuji3m2dR+oGc/dVvT4/+",-293,[11,"c9u3kZUrFGgZVFWrjfefJN",[[3,"fence_simple",["_name"],13],[0,["_lpos"],13,[1,0.453,0,0.637]],[0,["_lrot"],13,[3,0,0,0,1]],[0,["_euler"],13,[1,0,0,0]],[0,["_lscale"],13,[1,7,7,7]],[3,true,["_active"],13]]],39]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-294,[11,"a00DeiHbZCKKe5GJmxiQBG",[[3,"fence_gate",["_name"],14],[0,["_lpos"],14,[1,7.238,0,0.637]],[0,["_lrot"],14,[3,0,0,0,1]],[0,["_euler"],14,[1,0,0,0]],[0,["_lscale"],14,[1,7,7,7]],[3,true,["_active"],14]]],40]],[9,0,null,2,[10,"b03/wlwdVZ6ZTnCzuMt1Hh",-297,[54,"75nFah48BL662Zkfnkr+NB",null,[[23,"fence_bend",["_name"],[2,["b03/wlwdVZ6ZTnCzuMt1Hh"]]],[13,["_lpos"],[2,["b03/wlwdVZ6ZTnCzuMt1Hh"]],[1,-6.512,0,0.637]],[13,["_lrot"],[2,["b03/wlwdVZ6ZTnCzuMt1Hh"]],[3,0,0,0,1]],[13,["_euler"],[2,["b03/wlwdVZ6ZTnCzuMt1Hh"]],[1,0,0,0]],[0,["_lscale"],-295,[1,7,7,7]],[3,true,["_active"],-296]]],41]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-298,[11,"b3/ETix+tEtbOVaHjluE1a",[[3,"fence_gate-001",["_name"],15],[0,["_lpos"],15,[1,-6.475,0,-5.931]],[0,["_lrot"],15,[3,0,0.7071067811865476,0,-0.7071067811865475]],[0,["_euler"],15,[1,0,270,0]],[0,["_lscale"],15,[1,7,7,7]],[3,true,["_active"],15]]],42]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-299,[11,"26m1U1mtlP9o8AipVTW6RQ",[[3,"fence_gate-002",["_name"],16],[0,["_lpos"],16,[1,-6.475,0,-12.521]],[0,["_lrot"],16,[3,0,0.7071067811865476,0,-0.7071067811865475]],[0,["_euler"],16,[1,0,270,0]],[0,["_lscale"],16,[1,7,7,7]],[3,true,["_active"],16]]],43]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-300,[11,"04QeRl/G1Kg58EprXsKDO2",[[3,"fence_gate-003",["_name"],17],[0,["_lpos"],17,[1,-6.475,0,-18.886]],[0,["_lrot"],17,[3,0,-0.7071067811865476,0,0.7071067811865475]],[0,["_euler"],17,[1,0,-90.00000000000003,0]],[0,["_lscale"],17,[1,7,7,7]],[3,true,["_active"],17]]],44]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-301,[11,"3cPo71bEhOAZ0WhEiYbO74",[[3,"fence_gate-004",["_name"],18],[0,["_lpos"],18,[1,-6.475,0,-25.402]],[0,["_lrot"],18,[3,0,-0.7071067811865476,0,0.7071067811865475]],[0,["_euler"],18,[1,0,-90.00000000000003,0]],[0,["_lscale"],18,[1,7,7,7]],[3,true,["_active"],18]]],45]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-302,[11,"c752e4ggBN74wbeMrH47U5",[[3,"fence_gate-005",["_name"],19],[0,["_lpos"],19,[1,-6.577,0,-31.916]],[0,["_lrot"],19,[3,0,0,0,1]],[0,["_euler"],19,[1,0,0,0]],[0,["_lscale"],19,[1,7,7,7]],[3,true,["_active"],19]]],46]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-303,[11,"faA9ptiz9CKof3+AjvQJXc",[[3,"fence_gate-006",["_name"],20],[0,["_lpos"],20,[1,-0.114,0,-31.916]],[0,["_lrot"],20,[3,0,0,0,1]],[0,["_euler"],20,[1,0,0,0]],[0,["_lscale"],20,[1,7,7,7]],[3,true,["_active"],20]]],47]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-304,[11,"06EAHt2BtOVpMAj6YnqJPC",[[3,"fence_gate-007",["_name"],21],[0,["_lpos"],21,[1,6.266,0,-31.916]],[0,["_lrot"],21,[3,0,0,0,1]],[0,["_euler"],21,[1,0,0,0]],[0,["_lscale"],21,[1,7,7,7]],[3,true,["_active"],21]]],48]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-305,[11,"c0RUjGw8NOqL7Ir4XfdELA",[[3,"fence_gate-008",["_name"],22],[0,["_lpos"],22,[1,12.761,0,-31.916]],[0,["_lrot"],22,[3,0,0,0,1]],[0,["_euler"],22,[1,0,0,0]],[0,["_lscale"],22,[1,7,7,7]],[3,true,["_active"],22]]],49]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-306,[11,"9fw+LzGAROTqsjWKGXy7hi",[[3,"fence_gate-009",["_name"],23],[0,["_lpos"],23,[1,19.579,0,-31.916]],[0,["_lrot"],23,[3,0,0,0,1]],[0,["_euler"],23,[1,0,0,0]],[0,["_lscale"],23,[1,7,7,7]],[3,true,["_active"],23]]],50]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-307,[11,"48Y3bGcPVGrLoKULfeh2kp",[[3,"fence_gate-010",["_name"],24],[0,["_lpos"],24,[1,26.107,0,-25.48]],[0,["_lrot"],24,[3,0,-0.7071067811865476,0,0.7071067811865475]],[0,["_euler"],24,[1,0,-90.00000000000003,0]],[0,["_lscale"],24,[1,7,7,7]],[3,true,["_active"],24]]],51]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-308,[11,"0fqhEd00NO65jynSQA3t1N",[[3,"fence_gate-011",["_name"],25],[0,["_lpos"],25,[1,26.107,0,-18.785]],[0,["_lrot"],25,[3,0,-0.7071067811865476,0,0.7071067811865475]],[0,["_euler"],25,[1,0,-90.00000000000003,0]],[0,["_lscale"],25,[1,7,7,7]],[3,true,["_active"],25]]],52]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-309,[11,"af6rSZu4JBloscygnaVeUt",[[3,"fence_gate-012",["_name"],26],[0,["_lpos"],26,[1,26.107,0,-12.091]],[0,["_lrot"],26,[3,0,-0.7071067811865476,0,0.7071067811865475]],[0,["_euler"],26,[1,0,-90.00000000000003,0]],[0,["_lscale"],26,[1,7,7,7]],[3,true,["_active"],26]]],53]],[9,0,null,2,[10,"97e7H0ou9fFboVQSrXQzeQ",-310,[11,"93xOVt6uxHLJv7GUF42EyN",[[3,"fence_gate-013",["_name"],27],[0,["_lpos"],27,[1,26.107,0,-5.513]],[0,["_lrot"],27,[3,0,-0.7071067811865476,0,0.7071067811865475]],[0,["_euler"],27,[1,0,-90.00000000000003,0]],[0,["_lscale"],27,[1,7,7,7]],[3,true,["_active"],27]]],54]],[9,0,null,2,[10,"b03/wlwdVZ6ZTnCzuMt1Hh",-313,[11,"e11uABUyBKLLI5NV2PX4TB",[[23,"fence_bend-001",["_name"],[2,["b03/wlwdVZ6ZTnCzuMt1Hh"]]],[13,["_lpos"],[2,["b03/wlwdVZ6ZTnCzuMt1Hh"]],[1,19.612,0,1.154]],[13,["_lrot"],[2,["b03/wlwdVZ6ZTnCzuMt1Hh"]],[3,0,0.7071067811865475,0,0.7071067811865476]],[13,["_euler"],[2,["b03/wlwdVZ6ZTnCzuMt1Hh"]],[1,0,90,0]],[0,["_lscale"],-311,[1,7,7,7]],[3,true,["_active"],-312]]],55]],[9,0,null,4,[10,"2cYrFm7+JURr1Quy8ofxRB",-314,[11,"f9+41+EaNDBolNult4Xcqe",[[23,"sign-001",["_name"],[2,["2cYrFm7+JURr1Quy8ofxRB"]]],[13,["_lpos"],[2,["2cYrFm7+JURr1Quy8ofxRB"]],[1,-12.901,-4.729,-17.714]],[13,["_lrot"],[2,["2cYrFm7+JURr1Quy8ofxRB"]],[3,0,0.18688411034993452,0,0.9823819671078625]],[13,["_euler"],[2,["2cYrFm7+JURr1Quy8ofxRB"]],[1,0,21.542,0]],[13,["_lscale"],[2,["2cYrFm7+JURr1Quy8ofxRB"]],[1,96,64,30]]]],56]],[105,"GL_videoQuad",8388608,4,[[79,"Quad<ModelComponent>",-315,[57],[6],58],[154,true,"http://vfx.mtime.cn/Video/2019/03/14/mp4/190314102306987969.mp4",1.6,-316,[5,480,320],59]],[1,-12.47,10.786,-16.153],[3,0,0.18688411034993452,0,0.9823819671078625],[1,27.492,10.373,1],[1,0,21.542,0]],[9,0,null,44,[10,"54qAwyDp1OiaN4lOHCZFzw",-317,[11,"b4bpBrsVBBwocbTcGm/0Va",[[3,"Crosshair-Line",["_name"],45],[0,["_lpos"],45,[1,0,0.01,0]],[0,["_lrot"],45,[3,0,0,0,1]],[0,["_euler"],45,[1,0,0,0]],[3,true,["_active"],45]]],63]],[9,0,{},44,[10,"54qAwyDp1OiaN4lOHCZFzw",-318,[11,"457CMVxWNFvqhbV4Fd+KF7",[[3,"Crosshair-Circle",["_name"],46],[0,["_lpos"],46,[1,0,0.01,0]],[0,["_lrot"],46,[3,0,0,0,1]],[0,["_euler"],46,[1,0,0,0]],[3,false,["_active"],46]]],64]],[9,0,null,44,[10,"ce2picvZZNy4YzSfrgsXZj",-319,[11,"00nEsE1UxKW6CRNuzD/m1T",[[3,"Arrow",["_name"],66],[0,["_lpos"],66,[1,0,0.2,0]],[0,["_lrot"],66,[3,0,0,0,1]],[0,["_euler"],66,[1,0,0,0]],[29,["_local_video_source"],47,66],[3,false,["pausePlayVideo"],47],[3,true,["_previewVideo"],47],[0,["_setDefaultWh"],47,[5,428,240]],[3,1.6,["videoPlaybackRateNum"],47],[3,true,["_previewVideo"],28],[3,1.6,["videoPlaybackRateNum"],28],[29,["_local_video_source"],28,67],[3,false,["pausePlayVideo"],28],[23,"GL_Head",["_name"],[2,["c0yyoJKZRJO47eQBbtPgV5"]]],[23,"GL_Body",["_name"],[2,["cbbSJVs5BPHqYSiK+9vrui"]]],[0,["_setDefaultWh"],28,[5,428,240]],[3,false,["loopVideoPlay"],28]]],65]],[168,44],[20,"Title",33554432,29,[[7,-320,[5,80,50.4]],[169,"选项",40,1,-321]],[1,0,1,0],[1,0.5,0.5,1]],[69,"Left",33554432,30,[[7,-322,[5,15,2]],[35,0,false,-323,69]],[1,-4.6,0,0],[3,0,0,-0.3826834323650898,0.9238795325112867],[1,0,0,-45]],[69,"Right",33554432,30,[[7,-324,[5,15,2]],[35,0,false,-325,70]],[1,4.6,0,0],[3,0,0,0.3826834323650898,0.9238795325112867],[1,0,0,45]],[49,"Line",33554432,3,[[7,-326,[5,180,2]],[34,0,false,-327,[4,846361202],72]],[1,0,-1,0]],[20,"Title",33554432,50,[[17,-328,[5,105,44.1],[0,0,0.5]],[32,"模式：",0,35,35,35,true,1,-329]],[1,-80,75.5,0],[1,0.5,0.5,1]],[20,"Label",33554432,51,[[17,-330,[5,210,37.8],[0,0,0.5]],[44,"固定角度和速度",0,30,30,30,1,-331]],[1,-45,0,0],[1,0.5,0.5,1]],[20,"Label",33554432,53,[[17,-332,[5,120,37.8],[0,0,0.5]],[44,"固定角度",0,30,30,30,1,-333]],[1,-45,0,0],[1,0.5,0.5,1]],[20,"Label",33554432,55,[[17,-334,[5,120,37.8],[0,0,0.5]],[44,"固定速度",0,30,30,30,1,-335]],[1,-45,0,0],[1,0.5,0.5,1]],[20,"Label",33554432,57,[[17,-336,[5,240,37.8],[0,0,0.5]],[44,"不固定角度和速度",0,30,30,30,1,-337]],[1,-45,0,0],[1,0.5,0.5,1]],[20,"Title",33554432,72,[[17,-338,[5,105,44.1],[0,0,0.5]],[32,"角度：",0,35,35,35,true,1,-339]],[1,-80,0,0],[1,0.5,0.5,1]],[75,"TEXT_LABEL",33554432,31,[[[17,-340,[5,98,30],[0,0,1]],-341],4,1],[1,-48,15,0]],[76,"PLACEHOLDER_LABEL",false,33554432,31,[[[17,-342,[5,98,30],[0,0,1]],-343],4,1],[1,-48,15,0]],[20,"Title",33554432,73,[[17,-344,[5,105,44.1],[0,0,0.5]],[32,"速度：",0,35,35,35,true,1,-345]],[1,-80,0,0],[1,0.5,0.5,1]],[75,"TEXT_LABEL",33554432,32,[[[17,-346,[5,98,30],[0,0,1]],-347],4,1],[1,-48,15,0]],[76,"PLACEHOLDER_LABEL",false,33554432,32,[[[17,-348,[5,98,30],[0,0,1]],-349],4,1],[1,-48,15,0]],[20,"Title",33554432,74,[[17,-350,[5,175,44.1],[0,0,0.5]],[32,"绘制弹道：",0,35,35,35,true,1,-351]],[1,-80,0,0],[1,0.5,0.5,1]],[39,"Checkmark",33554432,33,[[[7,-352,[5,26,26]],-353],4,1]],[49,"Line",33554432,3,[[7,-354,[5,180,2]],[34,0,false,-355,[4,846361202],84]],[1,0,-321.05,0]],[20,"Title",33554432,75,[[17,-356,[5,245,44.1],[0,0,0.5]],[32,"炮弹触发爆炸：",0,35,35,35,true,1,-357]],[1,-80,0,0],[1,0.5,0.5,1]],[39,"Checkmark",33554432,34,[[[7,-358,[5,26,26]],-359],4,1]],[49,"Line",33554432,3,[[7,-360,[5,180,2]],[34,0,false,-361,[4,846361202],86]],[1,0,-373.05,0]],[20,"Title",33554432,76,[[17,-362,[5,245,44.1],[0,0,0.5]],[32,"光标适应表面：",0,35,35,35,true,1,-363]],[1,-80,0,0],[1,0.5,0.5,1]],[39,"Checkmark",33554432,35,[[[7,-364,[5,26,26]],-365],4,1]],[106,"Label",33554432,11,[[7,-366,[5,226.04,50.4]],[170,"🔗 项目源码",40,-367]],[1,0.5,0.5,1]],[107,"Main Light","c0y6F5f+pAvI805TdmxIjx",1,[[172,true,0.0001,100,1,-368,[173,true]]],[1,14.029157865933147,22.28412434447555,9.811538001287596],[3,-0.4009800728756898,0.45046394715657767,0.18602201107699826,0.7756887422565778],[1,-52.35,58.241,-4.167]],[174,1822425087,77],[2,["25AC2KwXRYr7COX4h6ygbD"]],[2,["b03/wlwdVZ6ZTnCzuMt1Hh"]],[2,["b03/wlwdVZ6ZTnCzuMt1Hh"]],[176],[77,"TrajectoryDrawer","6e11JmmINAna8hdynnWxE+",1,[141]],[50,"TrajectoryDrawer","48RSG38m1Kg5SP4OSFFJmR",1,[[177,-369,68]]],[118,"Camera",7,[-370],[1,0,0,1000]],[175,0,1073741824,385.00875656742556,2000,6,41943040,144,[4,4278190080]],[135,0,48,[4,3036676351]],[171,"鼠标滚轮可以调整摄像机距离",70,70,70,1,67,[4,4294956544]],[30,0,false,68],[30,0,false,69],[30,0,false,70],[30,0,false,71],[178,8,[[33,"1b4097H5s5E1YZkd5DJRPR9","onCannonModeToggleChanged",5]]],[45,"-45",0,20,20,20,1,false,122,[4,4278190080]],[45,"",0,15,20,30,1,false,123,[4,1677721600]],[85,1,"-45",6,8,31,[[33,"1b4097H5s5E1YZkd5DJRPR9","onCannonAngleEditBoxChanged",5]],153,154],[45,"5",0,20,20,20,1,false,125,[4,4278190080]],[45,"",0,15,20,30,1,false,126,[4,1677721600]],[85,1,"5",6,8,32,[[33,"1b4097H5s5E1YZkd5DJRPR9","onCannonVelocityEditBoxChanged",5]],156,157],[30,0,false,128],[59,33,[4,4292269782],33,[[33,"1b4097H5s5E1YZkd5DJRPR9","onCannonTrajectoryToggleChanged",5]],159],[30,0,false,131],[59,34,[4,4292269782],34,[[33,"1b4097H5s5E1YZkd5DJRPR9","onBulletExplodeToggleChanged",5]],161],[30,0,false,134],[59,35,[4,4292269782],35,[[33,"1b4097H5s5E1YZkd5DJRPR9","onCursorAdaptToggleChanged",5]],163],[179,5,3,30,152,155,158,160,162,164,111],[50,"CameraController","faFB7ZJNxD94Ymfx7CM889",1,[[180,0.2,-371,77,6]]],[77,"GameController","d9S2wJD6pGCbvUQRBZ4OZA",1,[-372]],[181,167,137,111],[50,"EffectManger","feOUOl+NdLK5cQTCvGwZ9e",1,[[182,-373,89]]]],0,[0,-1,78,0,-2,80,0,-3,81,0,-4,82,0,-5,83,0,-6,84,0,-7,85,0,-8,86,0,-9,87,0,-10,88,0,-11,89,0,-12,90,0,-13,91,0,-14,92,0,-15,93,0,-16,94,0,-17,95,0,-18,96,0,-19,97,0,-20,98,0,-21,99,0,-22,100,0,-23,101,0,-24,102,0,-25,103,0,-26,104,0,-27,105,0,-28,106,0,-29,6,0,-30,108,0,-31,109,0,-32,110,0,15,6,0,16,6,0,15,6,0,16,165,0,15,6,0,16,168,0,15,6,0,16,6,0,15,6,0,16,6,0,8,1,0,-2,136,0,8,1,0,-4,77,0,8,1,0,-6,59,0,-7,9,0,8,1,0,-9,6,0,-10,44,0,-11,143,0,8,1,0,-13,7,0,8,1,0,-15,166,0,-16,167,0,-17,169,0,8,1,0,-19,142,0,-1,89,0,-2,90,0,-3,91,0,-4,92,0,-5,93,0,-6,94,0,-7,95,0,-8,96,0,-9,97,0,-10,98,0,-11,99,0,-12,100,0,-13,101,0,-14,102,0,-15,103,0,-16,104,0,-17,105,0,0,3,0,0,3,0,0,3,0,0,3,0,0,3,0,-1,115,0,-2,50,0,-3,72,0,-4,73,0,-5,74,0,-6,129,0,-7,75,0,-8,132,0,-9,76,0,-1,78,0,-2,80,0,-3,81,0,-4,82,0,-5,83,0,-6,84,0,-7,85,0,-8,86,0,-9,87,0,-10,88,0,-12,106,0,-13,107,0,0,5,0,-2,165,0,0,5,0,0,5,0,-1,29,0,10,141,0,7,43,0,7,43,0,7,43,0,7,10,0,7,10,0,7,10,0,7,10,0,7,10,0,7,10,0,7,43,0,7,43,0,7,10,0,1,6,0,0,7,0,24,145,0,0,7,0,0,7,0,-1,144,0,-2,48,0,-3,49,0,-5,11,0,0,8,0,-2,152,0,0,8,0,-1,51,0,-2,53,0,-3,55,0,-4,57,0,-1,60,0,-2,61,0,-3,62,0,-4,63,0,-5,64,0,0,11,0,0,11,0,0,11,0,0,11,0,0,11,0,-1,135,0,0,29,0,0,29,0,0,29,0,-1,112,0,-2,30,0,0,30,0,0,30,0,-1,113,0,-2,114,0,0,31,0,0,31,0,-3,155,0,-1,122,0,-2,123,0,0,32,0,0,32,0,-3,158,0,-1,125,0,-2,126,0,0,33,0,0,33,0,-3,160,0,-1,128,0,0,34,0,0,34,0,-3,162,0,-1,131,0,0,35,0,0,35,0,-3,164,0,-1,134,0,-1,111,0,-1,108,0,-2,109,0,-3,110,0,0,48,0,-2,146,0,0,48,0,0,48,0,0,49,0,25,146,0,26,147,0,0,49,0,0,49,0,-1,67,0,0,50,0,0,50,0,-1,116,0,0,51,0,17,148,0,18,52,0,0,51,0,-1,52,0,-2,117,0,0,52,0,0,52,0,-1,68,0,0,53,0,17,149,0,18,54,0,0,53,0,-1,54,0,-2,118,0,0,54,0,0,54,0,-1,69,0,0,55,0,17,150,0,18,56,0,0,55,0,-1,56,0,-2,119,0,0,56,0,0,56,0,-1,70,0,0,57,0,17,151,0,18,58,0,0,57,0,-1,58,0,-2,120,0,0,58,0,0,58,0,-1,71,0,0,59,0,0,59,0,0,59,0,0,60,0,0,60,0,0,60,0,0,61,0,0,61,0,0,61,0,0,62,0,0,62,0,0,62,0,0,63,0,0,63,0,0,63,0,0,64,0,0,64,0,0,64,0,0,67,0,-2,147,0,0,67,0,0,68,0,-2,148,0,0,68,0,0,69,0,-2,149,0,0,69,0,0,70,0,-2,150,0,0,70,0,0,71,0,-2,151,0,0,71,0,0,72,0,-1,121,0,0,73,0,-1,124,0,0,74,0,-1,127,0,0,75,0,-1,130,0,0,76,0,-1,133,0,-1,137,0,7,79,0,7,79,0,7,79,0,1,78,0,1,80,0,1,81,0,1,82,0,1,83,0,1,84,0,1,85,0,1,86,0,1,87,0,7,138,0,7,138,0,1,88,0,1,89,0,1,90,0,7,139,0,7,139,0,1,91,0,1,92,0,1,93,0,1,94,0,1,95,0,1,96,0,1,97,0,1,98,0,1,99,0,1,100,0,1,101,0,1,102,0,1,103,0,1,104,0,7,140,0,7,140,0,1,105,0,1,106,0,0,107,0,0,107,0,1,108,0,1,109,0,1,110,0,0,112,0,0,112,0,0,113,0,0,113,0,0,114,0,0,114,0,0,115,0,0,115,0,0,116,0,0,116,0,0,117,0,0,117,0,0,118,0,0,118,0,0,119,0,0,119,0,0,120,0,0,120,0,0,121,0,0,121,0,0,122,0,-2,153,0,0,123,0,-2,154,0,0,124,0,0,124,0,0,125,0,-2,156,0,0,126,0,-2,157,0,0,127,0,0,127,0,0,128,0,-2,159,0,0,129,0,0,129,0,0,130,0,0,130,0,0,131,0,-2,161,0,0,132,0,0,132,0,0,133,0,0,133,0,0,134,0,-2,163,0,0,135,0,0,135,0,0,136,0,0,143,0,-1,145,0,0,166,0,-1,168,0,0,169,0,27,1,2,8,4,3,8,5,4,8,9,5,8,7,8,8,50,31,8,72,32,8,73,33,8,74,34,8,75,35,8,76,141,0,142,373],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,146,148,149,150,151,155,158,159,160,161,162,163,164],[-1,2,12,9,-1,2,12,9,-1,2,12,9,-1,2,12,9,-1,2,12,9,-1,2,12,2,9,4,9,10,10,10,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-1,2,9,4,10,10,4,4,4,10,10,22,5,5,5,5,5,13,5,13,5,13,5,13,5,5,5,5,5,5,5,5,28,29,30,22,5,5,5,5,5,23,23,5,13,5,13,5,13],[2,49,50,6,2,9,22,6,2,10,16,11,2,4,22,11,2,10,16,51,2,23,16,23,11,52,24,25,2,26,53,27,54,55,56,57,58,59,60,61,1,28,1,1,1,1,1,1,1,1,1,1,1,1,1,28,27,2,5,24,62,6,6,63,64,65,6,6,29,3,3,3,3,12,13,12,13,12,13,12,13,3,3,7,3,7,3,7,3,66,67,68,29,69,14,14,14,14,3,3,17,7,17,7,17,7]],[[[19],[15,"tree_pineDefaultA",[-2],[4,"dbOxskBOZcoLEMJZRwO3xS",-1,0]],[21,"tree_pineDefaultA",1,[[16,-3,[5,"67LaUAfABagpL8Ci5j02V+"],[0,1],[6],2]],[4,"a1VkKsD/RVSYIJlsQUsbu9",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0],[-1,-2,2],[70,71,72]],[[[8,"woodBarkDark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.800000011920929,0.4627451002597809,0.36862748861312866]]],11]]],0,0,[0],[3],[0]],[[[8,"leafsDark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.16862750053405762,0.6509804129600525,0.6666666865348816]]],11]]],0,0,[0],[3],[0]],[[[12,".bin",1217634089,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":14784,"length":2160,"count":540,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":20976,"length":600,"count":150,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":14784,"count":308,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":16944,"length":4032,"count":84,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.2659800052642822,0,-0.2659800052642822],"maxPosition",8,[1,0.2659800052642822,1.5458359718322754,0.2659800052642822]]],-1],0,0,[],[],[]],[[{"name":"toggle_disabled","rect":{"x":0,"y":0,"width":28,"height":28},"offset":{"x":0,"y":0},"originalSize":{"width":28,"height":28},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-14,-14,0,14,-14,0,-14,14,0,14,14,0],"indexes":[0,1,2,2,1,3],"uv":[0,28,28,28,0,0,28,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-14,"y":-14,"z":0},"maxPos":{"x":14,"y":14,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[11],[73]],[[[8,"fire-hole",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{},{},{}],[[[{},"mainColor",8,[4,4278190080]],{},{}],11,0,0]]],0,0,[0],[3],[0]],[[[26,"Crosshair-Circle"],[51,"Crosshair-Circle",[-3,-4],[[60,true,-2,[5,"73Li9NSdZAaJdEIYW9Cm0q"],[4],5]],[4,"54qAwyDp1OiaN4lOHCZFzw",-1,0]],[52,"Circle",1,[[24,"Quad<ModelComponent>",0,-5,[5,"21KHHvTQBLpqDSMHJAV9Kq"],[0],[6],1]],[4,"9bf13U55FMsZ6CdJChDgbZ",1,0],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.5,0.5,1],[1,-89.99999999999999,0,0]],[52,"Dot",1,[[24,"Quad<ModelComponent>",0,-6,[5,"8c2jJZC1xIqaH3FSgiyJZM"],[2],[6],3]],[4,"c5zmqaFgFM2p6mmd/tJuVT",1,0],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.05,0.05,1],[1,-90,0,0]]],0,[0,1,1,0,0,1,0,-1,2,0,-2,3,0,0,2,0,0,3,0,6,1,6],[0,0,0,0,0,0],[-1,2,-1,2,-1,19],[74,5,8,5,30,30]],[[[46,"video_sphere",".mp4",7.501],-1],0,0,[],[],[]],[[[8,"woodBark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.886274516582489,0.5137255191802979,0.34117650985717773]]],11]]],0,0,[0],[3],[0]],[[[19],[15,"tree_blocks",[-2],[4,"25AC2KwXRYr7COX4h6ygbD",-1,0]],[21,"tree_blocks",1,[[16,-3,[5,"39xw3Wf1lairbCafpeSy1q"],[0,1],[6],2]],[4,"c4Nmt3/shRvJGAYORT2sLn",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0],[-1,-2,2],[75,76,77]],[[[12,".bin",21984407,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1728,"length":216,"count":54,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":10200,"length":1368,"count":342,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":1728,"count":36,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":1944,"length":8256,"count":172,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.30000001192092896,0,-0.30000001192092896],"maxPosition",8,[1,0.30000001192092896,1.184999942779541,0.30000001192092896]]],-1],0,0,[],[],[]],[[[8,"leafsGreen",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.1607843041419983,0.7882353067398071,0.6705883145332336]]],11]]],0,0,[0],[3],[0]],[[{"name":"toggle_checkmark","rect":{"x":4,"y":5,"width":20,"height":18},"offset":{"x":0,"y":0},"originalSize":{"width":28,"height":28},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-10,-9,0,10,-9,0,-10,9,0,10,9,0],"indexes":[0,1,2,2,1,3],"uv":[4,23,24,23,4,5,24,5],"nuv":[0.14285714285714285,0.17857142857142858,0.8571428571428571,0.17857142857142858,0.14285714285714285,0.8214285714285714,0.8571428571428571,0.8214285714285714],"minPos":{"x":-10,"y":-9,"z":0},"maxPos":{"x":10,"y":9,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[11],[78]],[[[40,0.1,0.1,0.5]],0,0,[],[],[]],[[[40,0.5,0.5,0.1]],0,0,[],[],[]],[[[37,"bullet-explosion-smoke","4",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[14,3],[31,18]],[[{"name":"default_sprite","rect":{"x":0,"y":2,"width":40,"height":36},"offset":{"x":0,"y":0},"originalSize":{"width":40,"height":40},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-20,-18,0,20,-18,0,-20,18,0,20,18,0],"indexes":[0,1,2,2,1,3],"uv":[0,38,40,38,0,2,40,2],"nuv":[0,0.05,1,0.05,0,0.95,1,0.95],"minPos":{"x":-20,"y":-18,"z":0},"maxPos":{"x":20,"y":18,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[11],[79]],[[[26,"Crosshair-Line"],[51,"Crosshair-Line",[-3,-4,-5,-6,-7],[[60,true,-2,[5,"73Li9NSdZAaJdEIYW9Cm0q"],[10],11]],[4,"54qAwyDp1OiaN4lOHCZFzw",-1,0]],[27,"Line 1",1,[[24,"Quad<ModelComponent>",0,-8,[5,"21KHHvTQBLpqDSMHJAV9Kq"],[0],[6],1]],[4,"9bf13U55FMsZ6CdJChDgbZ",1,0],[1,0,0,-0.2],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.05,0.2,1],[1,-89.99999999999999,0,0]],[27,"Line 2",1,[[24,"Quad<ModelComponent>",0,-9,[5,"d2QwB/jLZAYYHOgs6TMUaj"],[2],[6],3]],[4,"b4nP44OehOPLWYozmisxoW",1,0],[1,0.2,0,0],[3,-0.5,0.5,0.4999999999999999,0.5000000000000001],[1,0.05,0.2,1],[1,-89.99999999999999,89.99999999999999,0]],[27,"Line 3",1,[[24,"Quad<ModelComponent>",0,-10,[5,"a7r96VNHROQ4Hr+KJ4y5KC"],[4],[6],5]],[4,"07/5Pk81VNeI4W4KlcRBhH",1,0],[1,-0.2,0,0],[3,-0.5,0.5,0.4999999999999999,0.5000000000000001],[1,0.05,0.2,1],[1,-89.99999999999999,89.99999999999999,0]],[27,"Line 4",1,[[24,"Quad<ModelComponent>",0,-11,[5,"5aEq+tgTxEdqnYIQJRTIwo"],[6],[6],7]],[4,"45aqcc8DZCJrB88ygyFoUj",1,0],[1,0,0,0.2],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.05,0.2,1],[1,-89.99999999999999,0,0]],[52,"Dot",1,[[24,"Quad<ModelComponent>",0,-12,[5,"8c2jJZC1xIqaH3FSgiyJZM"],[8],[6],9]],[4,"c5zmqaFgFM2p6mmd/tJuVT",1,0],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.05,0.05,1],[1,-90,0,0]]],0,[0,1,1,0,0,1,0,-1,2,0,-2,3,0,-3,4,0,-4,5,0,-5,6,0,0,2,0,0,3,0,0,4,0,0,5,0,0,6,0,6,1,12],[0,0,0,0,0,0,0,0,0,0,0,0],[-1,2,-1,2,-1,2,-1,2,-1,2,-1,19],[8,5,8,5,8,5,8,5,8,5,32,32]],[[[8,"stone",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.7215685844421387,0.886274516582489,0.9098039269447327]]],11]]],0,0,[0],[3],[0]],[[[8,"stoneDark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.6039215922355652,0.7098038792610168,0.729411780834198]]],11]]],0,0,[0],[3],[0]],[[[19],[15,"statue_obelisk",[-2],[4,"012jXyF1dZ4aBCiSCeCruB",-1,0]],[21,"statue_obelisk",1,[[16,-3,[5,"0bFrLy56RV0qBtpJO3ZjiF"],[0,1],[6],2]],[4,"e93UF73fpf17qmjY/V0ucG",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0],[-1,-2,2],[80,81,82]],[[[12,".bin",3259277758,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1152,"length":192,"count":48,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":3648,"length":264,"count":66,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":1152,"count":24,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":1344,"length":2304,"count":48,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.15350930392742157,0,-0.15350930392742157],"maxPosition",8,[1,0.15350930392742157,0.8753970861434937,0.15350930392742157]]],-1],0,0,[],[],[]],[[[26,"BulletExplosion"],[15,"BulletExplosion",[-2,-3,-4],[4,"c46/YsCPVOJYA4mWEpNYRx",-1,0]],[119,"Shockwave",1,[-5],[4,"70yGk/yJNFCLJH0u0+mAAK",1,0],[3,0.7071067811865475,0,0,0.7071067811865476],[1,90,0,0]],[183,0.1,false,1,2,[5,"54aQmkAL1HuoS/qvYm+g9A"],[0],[184,[4,4288342015]],[18,1],[1],[1],[1],[1],[1],[1],[1],[18,0.1],[1],[18,20],[1],[89,true,[87,1,[188,[[190],[191,1]],[[194,255],[90,255,0.3303571428571429],[90,0,1]]]]],[195,true,3,0.01,[18,1]],[61,true,[186,1,2,[36,[0,1],[[92,0.13333333333333333,1,1,1,1],[92,0.7444444444444445,0.6111111111111112,1,0.6111111111111112,1]]]],[1],[1],[1]],[198,[1],[1],[1],[18,1]],[62,[1],[1],[1]],[63,[1],[1],[1],[1]],[64,[1],[1],[1]],[65,[47,1,[36,[0,1],[[93,2,1],[93,2,1]]]],[1]],[66,[18,1],[1],[25],[25],-6],[199,2,1]],[78,"Spark",1,[-7],[4,"3a3rxWgSFHg6zZ+c0hsSEI",1,0]],[86,0.1,false,15,4,[5,"5bzjEHIA9Jx6gXH8eTKu37"],[[2,null],6,0],[25],[18,0.5],[1],[1],[18,0.5],[1],[1],[1],[1],[18,0.5],[1],[18,300],[1],[187,[185,2,[4,4278237439],[4,4278242559]]],[91,true,0,0.2,0.8726646259971648,[1],[1,90,0,0]],[61,true,[47,1,[36,[0,1],[[196,2,1,1,1],[197,2,1,1]]]],[1],[1],[1]],[94,true,[1],[47,1,[36,[0.002564102564102564,0.9923076923076923],[[48,2,0.14074074074074075,3.6378600823045275,1,3.6378600823045275,1],[48,2,-1,-0.8888888888888893,1,-0.8888888888888893,1]]]],[1],[18,1]],[62,[1],[1],[1]],[63,[1],[1],[1],[1]],[64,[1],[1],[1]],[65,[1],[1]],[66,[1],[1],[25],[25],-8],[95,3]],[78,"Smoke",1,[-9],[4,"e0LtLxGRlArr5n1nGAhmPP",1,0]],[86,0.1,false,500,6,[5,"78qi+UdtFGmrxTtWMt8VPp"],[[4,null],6,0],[25],[88,3,0.2,0.5],[1],[1],[18,0.5],[1],[1],[1],[1],[18,0.5],[1],[18,200],[1],[89,true,[87,1,[189,[[192,[4,4292730333]],[193,1,[4,4285493103]]]]]],[91,true,0,0.2,0.8726646259971648,[1],[1,90,0,0]],[61,true,[47,1,[36,[0,1],[[48,2,1,-0.023297491039426205,1,-0.023297491039426205,1],[48,2,0.007407407407407408,-2.9738562091503296,1,-2.9738562091503296,1]]]],[1],[1],[1]],[94,true,[1],[88,3,0.5,0.7],[1],[18,1]],[62,[1],[1],[1]],[63,[1],[1],[1],[1]],[64,[1],[1],[1]],[65,[1],[1]],[66,[1],[1],[25],[25],-10],[95,5]]],0,[0,1,1,0,-1,2,0,-2,4,0,-3,6,0,-1,3,0,20,3,0,-1,5,0,20,5,0,-1,7,0,20,7,0,6,1,10],[0,0,0,0,0,0],[-1,21,-1,21,-1,21],[83,33,84,34,85,31]],[[[8,"turnplate",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{},{},{}],[[[{},"mainColor",8,[4,4283321934]],{},{}],11,0,0]]],0,0,[0],[3],[0]],[[{"base":"2,2,0,0,2,0","rgbe":false,"mipmaps":[{"front":"6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0@e9a6d","back":"6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0@40c10","left":"6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0@8fd34","right":"6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0@74afd","top":"6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0@bb97f","bottom":"6f01cf7f-81bf-4a7e-bd5d-0afc19696480@b47c0@7d38f"}]}],[19],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[2],0,[],[],[]],[[[8,"woodBark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.886274516582489,0.5137255191802979,0.34117650985717773]]],11]]],0,0,[0],[3],[0]],[[[19],[15,"tree_palm",[-2],[4,"82xuGUwTxc3574qlxf+c1y",-1,0]],[21,"tree_palm",1,[[16,-3,[5,"08Gs0q6jxeuaT2ktK4A2GD"],[0,1],[6],2]],[4,"10E/fmyZVXFLynjiqHLlyC",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0],[-1,-2,2],[86,87,88]],[[[12,".bin",1380073092,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1728,"length":216,"count":54,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":14424,"length":2016,"count":504,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":1728,"count":36,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":1944,"length":12480,"count":260,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.4677448868751526,0,-0.5063818097114563],"maxPosition",8,[1,0.4677448868751526,1.5145909786224365,0.5063818097114563]]],-1],0,0,[],[],[]],[[[8,"leafsGreen",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.1607843041419983,0.7882353067398071,0.6705883145332336]]],11]]],0,0,[0],[3],[0]],[[[46,"video_quad",".mp4",7.57],-1],0,0,[],[],[]],[[[8,"dirt",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.886274516582489,0.5137255191802979,0.34117650985717773]]],11]]],0,0,[0],[3],[0]],[[[8,"grass",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.17254899442195892,0.8470587730407715,0.7215685844421387]]],11]]],0,0,[0],[3],[0]],[[[19],[15,"cliff_blockQuarter_rock",[-2],[4,"61cFpWpxddtaOpdBkAasLn",-1,0]],[21,"cliff_blockQuarter_rock",1,[[16,-3,[5,"2cINyLsuNf/JmxzylqxyPy"],[0,1],[6],2]],[4,"f045ZgWaNbpoQ3rlCoRLPG",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0],[-1,-2,2],[26,25,89]],[[[12,".bin",2156727292,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":192,"length":24,"count":6,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":1176,"length":120,"count":30,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":192,"count":4,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":216,"length":960,"count":20,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.5,0,-0.5],"maxPosition",8,[1,0.5,0.25,0.5]]],-1],0,0,[],[],[]],[[[8,"woodBarkDark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.800000011920929,0.4627451002597809,0.36862748861312866]]],11]]],0,0,[0],[3],[0]],[[[8,"leafsDark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.16862750053405762,0.6509804129600525,0.6666666865348816]]],11]]],0,0,[0],[3],[0]],[[[19],[15,"tree_pineSmallA",[-2],[4,"90q5LLm05Y1YZ+Rh/2J5aw",-1,0]],[21,"tree_pineSmallA",1,[[16,-3,[5,"46nViPIW9THI5eibUblE5v"],[0,1],[6],2]],[4,"e7To4W/0NZFIvrzDorH9p+",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0],[-1,-2,2],[90,91,92]],[[[12,".bin",126962610,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":11712,"length":1752,"count":438,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":15192,"length":216,"count":54,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":11712,"count":244,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":13464,"length":1728,"count":36,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.25,0,-0.25],"maxPosition",8,[1,0.25,0.967199981212616,0.25]]],-1],0,0,[],[],[]],[[[46,"video_plane",".mp4",4.505],-1],0,0,[],[],[]],[[[46,"video_box",".mp4",6.897],-1],0,0,[],[],[]],[[[8,"video_material",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_INSTANCING":true}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[14,3],[93,94]],[[[26,"Bullet"],[108,"Bullet",8388608,[[22,"Sphere<ModelComponent>",-2,[5,"c2nwnZUtZHboKedMf13luF"],[0],[6],1],[200,-3,[5,"8b1ykzaOpMlahMcouK1/Xk"],[1,0.0010054856538772583,0,7.450580596923828e-8],2],[201,4,0,-4,[5,"1fldImC2tDQ4aLzbkI8Kxn"]],[202,-5,[5,"7dVSJcLnlFpqKYeWiPXrBN"]],[155,true,"http://wxsnsdy.tc.qq.com/105/20210/snsdyvideodownload?filekey=30280201010421301f0201690402534804102ca905ce620b1241b726bc41dcff44e00204012882540400&bizid=1023&hy=SH&fileparam=302c020101042530230204136ffd93020457e3c4ff02024ef202031e8d7f02030f42400204045a320a0201000400",true,true,5,0,-6,[5,"daPxx9Mr1PE5ag1LhdTf4i"],[5,490,272],3]],[4,"4aKb0pC0lMuKuYr3wazvPp",-1,0],[3,0.03661193397424378,0.0646295585369711,0.09085478112970655,0.99309012440959],[1,0.25,0.25,0.25],[1,2.5553333337696063,5.110666667538871,7.666000001306316]]],0,[0,1,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,6,1,6],[0,0,0,0],[-1,2,12,9],[2,35,95,11]],[[[12,".bin",1842969518,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":13152,"length":1944,"count":486,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":20760,"length":792,"count":198,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":13152,"count":274,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":15096,"length":5664,"count":118,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.42298680543899536,0,-0.3650485873222351],"maxPosition",8,[1,0.2574496865272522,1.4902980327606201,0.25147390365600586]]],-1],0,0,[],[],[]],[[[8,"woodBark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.886274516582489,0.5137255191802979,0.34117650985717773]]],11]]],0,0,[0],[3],[0]],[[[19],[15,"tree_thin",[-2],[4,"0dPBJ9ilVY2IV1Wpbf2+qT",-1,0]],[21,"tree_thin",1,[[16,-3,[5,"fbwnzGj0tS0JLyjn0yQhCL"],[0,1],[6],2]],[4,"1cpPG6EtBTNLMKecnM6ere",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0],[-1,-2,2],[96,97,98]],[[[8,"leafsGreen",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.1607843041419983,0.7882353067398071,0.6705883145332336]]],11]]],0,0,[0],[3],[0]],[[{"name":"sprite_splash","rect":{"x":0,"y":0,"width":2,"height":2},"offset":{"x":0,"y":0},"originalSize":{"width":2,"height":2},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-1,-1,0,1,-1,0,-1,1,0,1,1,0],"indexes":[0,1,2,2,1,3],"uv":[0,2,2,2,0,0,2,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-1,"y":-1,"z":0},"maxPos":{"x":1,"y":1,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[11],[99]],[[[8,"woodBark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.886274516582489,0.5137255191802979,0.34117650985717773]]],11]]],0,0,[0],[3],[0]],[[[12,".bin",2120473743,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":4032,"length":600,"count":150,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":11736,"length":984,"count":246,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":4032,"count":84,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":4632,"length":7104,"count":148,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.2648318111896515,0,-0.2648318111896515],"maxPosition",8,[1,0.2648318111896515,1.4303330183029175,0.2648318111896515]]],-1],0,0,[],[],[]],[[[8,"leafsGreen",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.1607843041419983,0.7882353067398071,0.6705883145332336]]],11]]],0,0,[0],[3],[0]],[[[19],[15,"tree_cone",[-2],[4,"037WooqZNfE5NVyRc4KgfI",-1,0]],[21,"tree_cone",1,[[16,-3,[5,"7cPKvq8yVXRLVqvwWYhF/j"],[0,1],[6],2]],[4,"e3xyord1hS7Itm3RUfjhHf",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0],[-1,-2,2],[100,101,102]],[[[37,"bullet-explosion-shockwave","4",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[14,3],[33,18]],[[[8,"barrel",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{"USE_BATCHING":true},{},{}],[[[{},"mainColor",8,[4,4284111450]],{},{}],11,0,0]]],0,0,[0],[3],[0]],[[{"name":"radio_button_off","rect":{"x":3,"y":3,"width":26,"height":26},"offset":{"x":0,"y":0},"originalSize":{"width":32,"height":32},"rotated":false,"capInsets":[13,13,13,13],"vertices":{"rawPosition":[-13,-13,0,13,-13,0,-13,13,0,13,13,0],"indexes":[0,1,2,2,1,3],"uv":[3,29,29,29,3,3,29,3],"nuv":[0.09375,0.09375,0.90625,0.09375,0.09375,0.90625,0.90625,0.90625],"minPos":{"x":-13,"y":-13,"z":0},"maxPos":{"x":13,"y":13,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[11],[103]],[[[8,"roller",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}},{},{}],[{},{},{}],[[[{},"mainColor",8,[4,4289045925]],{},{}],11,0,0]]],0,0,[0],[3],[0]],[[[37,"bullet-explosion-spark","4",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[14,3],[34,18]],[[{"base":"2,2,0,0,2,0","rgbe":true,"mipmaps":[{"front":"d032ac98-05e1-4090-88bb-eb640dcb5fc1@b47c0@e9a6d","back":"d032ac98-05e1-4090-88bb-eb640dcb5fc1@b47c0@40c10","left":"d032ac98-05e1-4090-88bb-eb640dcb5fc1@b47c0@8fd34","right":"d032ac98-05e1-4090-88bb-eb640dcb5fc1@b47c0@74afd","top":"d032ac98-05e1-4090-88bb-eb640dcb5fc1@b47c0@bb97f","bottom":"d032ac98-05e1-4090-88bb-eb640dcb5fc1@b47c0@7d38f"}]}],[19],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[2],0,[],[],[]],[[{"fmt":"0","w":0,"h":0},-1],[2],0,[],[],[]],[[[96,"default-material",[{}],[{}]]],0,0,[0],[3],[0]],[[[67,"_defaultMat",[{"metallic":0.4000000059604645,"roughness":0.30151134729385376}],[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}]]],0,0,[0],[3],[0]],[[[8,"woodBark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.886274516582489,0.5137255191802979,0.34117650985717773]]],11]]],0,0,[0],[3],[0]],[[[19],[15,"tree_detailed",[-2],[4,"d4kz3Oi/lflIBiB2K5MrNZ",-1,0]],[21,"tree_detailed",1,[[16,-3,[5,"a52O1FFmNRibDy6nn3LFm2"],[0,1,2],[6],3]],[4,"a1A75+xRVfGY6aa9v34Nv4",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0,0],[-1,-2,-3,2],[104,105,106,107]],[[[12,".bin",3921630605,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":25248,"length":3360,"count":840,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":39456,"length":1440,"count":360,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[2],"indexView":{"offset":41184,"length":24,"count":6,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":25248,"count":526,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":28608,"length":10848,"count":226,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":40896,"length":288,"count":6,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.4146324098110199,0,-0.3894664943218231],"maxPosition",8,[1,0.43248260021209717,1.3324170112609863,0.3721359968185425]]],-1],0,0,[],[],[]],[[[8,"leafsGreen",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.1607843041419983,0.7882353067398071,0.6705883145332336]]],11]]],0,0,[0],[3],[0]],[[[67,"_defaultMat",[{"metallic":0.4000000059604645,"roughness":0.30151134729385376}],[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}]]],0,0,[0],[3],[0]],[[[12,".bin",2647765715,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1536,"length":216,"count":54,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":3480,"length":288,"count":72,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[2],"indexView":{"offset":4056,"length":24,"count":6,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":1536,"count":32,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":1752,"length":1728,"count":36,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":3768,"length":288,"count":6,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.15000000596046448,0,-0.017500000074505806],"maxPosition",8,[1,0.15000000596046448,0.40877050161361694,0.05249999836087227]]],-1],0,0,[],[],[]],[[[8,"woodDark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.7686275243759155,0.4274510145187378,0.29411768913269043]]],11]]],0,0,[0],[3],[0]],[[[19],[15,"sign",[-2],[4,"2cYrFm7+JURr1Quy8ofxRB",-1,0]],[21,"sign",1,[[16,-3,[5,"ce5z3ci+xUxY69xLnGr5g5"],[0,1,2],[6],3]],[4,"b2/aOECelRYrqxzMq+9wJr",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0,0],[-1,-2,-3,2],[108,109,110,111]],[[[8,"wood",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,1,0.5568627715110779,0.384313702583313]]],11]]],0,0,[0],[3],[0]],[[[203,"../videoPlayRes/effect_res/videogl_effect",[{"hash":1523640920,"name":"../videoPlayRes/effect_res/videogl_effect|legacy/main-functions/general-vs:vert|unlit-fs:frag","blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"mainColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBias","format":21,"isInstanced":true,"location":11,"defines":["USE_INSTANCING","CC_RECEIVE_SHADOW"]},{"name":"a_dyn_batch_id","format":11,"location":12,"defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"a_vertexId","format":11,"location":13,"defines":["CC_USE_MORPH"]},{"name":"a_color","format":44,"location":14,"defines":[]},{"name":"a_texCoord1","format":21,"location":15,"defines":["HAS_SECOND_UV"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_RECEIVE_SHADOW\n    in vec2 a_localShadowBias;\n  #endif\n#elif USE_BATCHING\n  in float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\n#if CC_USE_MORPH\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      layout(std140) uniform CCSkinning {\n        highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n      };\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In.position, In.normal, In.tangent);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In.position, In.normal, In.tangent);\n  #endif\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if !USE_INSTANCING\n  #if USE_BATCHING\n    layout(std140) uniform CCLocalBatched {\n      highp mat4 cc_matWorlds[10];\n    };\n  #else\n    layout(std140) uniform CCLocal {\n      highp mat4 cc_matWorld;\n      highp mat4 cc_matWorldIT;\n      highp vec4 cc_lightingMapUVParam;\n      highp vec4 cc_localShadowBias;\n    };\n  #endif\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #elif USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\n#if CC_USE_FOG != 4\n  float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {\n      vec4 wPos = pos;\n      float cam_dis = distance(cameraPos, wPos.xyz);\n      return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n  }\n  float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * fogDensity);\n      return f;\n  }\n  float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n      return f;\n  }\n  float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {\n      vec4 wPos = pos;\n      vec3 camWorldProj = cameraPos.xyz;\n      camWorldProj.y = 0.;\n      vec3 worldPosProj = wPos.xyz;\n      worldPosProj.y = 0.;\n      float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n      float fDeltaY, fDensityIntegral;\n      if (cameraPos.y > fogTop) {\n          if (wPos.y < fogTop) {\n              fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;\n              fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n          }\n          else {\n              fDeltaY = 0.;\n              fDensityIntegral = 0.;\n          }\n      }\n      else {\n          if (wPos.y < fogTop) {\n              float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;\n              float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;\n              fDeltaY = abs(fDeltaA - fDeltaB);\n              fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n          }\n          else {\n              fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;\n              fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n          }\n      }\n      float fDensity;\n      if (fDeltaY != 0.) {\n          fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n      }\n      else {\n          fDensity = 0.;\n      }\n      float f = exp(-fDensity);\n      return f;\n  }\n#endif\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\n\tfactor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);\n#elif CC_USE_FOG == 1\n\tfactor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 2\n\tfactor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 3\n\tfactor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);\n#else\n\tfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nout float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\n    CC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nout highp vec4 v_shadowPos;\nlayout(std140) uniform CCShadow {\n  highp mat4 cc_matLightView;\n  highp mat4 cc_matLightViewProj;\n  highp vec4 cc_shadowInvProjDepthInfo;\n  highp vec4 cc_shadowProjDepthInfo;\n  highp vec4 cc_shadowProjInfo;\n  mediump vec4 cc_shadowNFLSInfo;\n  mediump vec4 cc_shadowWHPBInfo;\n  mediump vec4 cc_shadowLPNNInfo;\n  lowp vec4 cc_shadowColor;\n  mediump vec4 cc_planarNDInfo;\n};\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  layout(std140) uniform CCCSM {\n    highp vec4 cc_csmViewDir0[4];\n    highp vec4 cc_csmViewDir1[4];\n    highp vec4 cc_csmViewDir2[4];\n    highp vec4 cc_csmAtlas[4];\n    highp mat4 cc_matCSMViewProj[4];\n    highp vec4 cc_csmProjDepthInfo[4];\n    highp vec4 cc_csmProjInfo[4];\n    highp vec4 cc_csmSplitsInfo;\n  };\n#endif\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #else\n  #endif\n#endif\n#if CC_RECEIVE_SHADOW\n#endif\nin vec4 a_color;\n#if HAS_SECOND_UV\n  in vec2 a_texCoord1;\n#endif\nout vec3 v_position;\nout vec3 v_normal;\nout vec3 v_tangent;\nout vec3 v_bitangent;\nout vec2 v_uv;\nout vec2 v_uv1;\nout vec4 v_color;\nvec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n  mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n  v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  v_uv = a_texCoord;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1;\n  #endif\n  v_color = a_color;\n  CC_TRANSFER_FOG(pos);\n  v_shadowPos = cc_matLightViewProj * pos;\n  return cc_matProj * (cc_matView * matWorld) * In.position;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_WORLD_POS CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR CC_SURFACES_DEBUG_VIEW_WORLD_POS + 1\n#define CC_SURFACES_DEBUG_VIEW_FACE_SIDE CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR + 1\n#define CC_SURFACES_DEBUG_VIEW_UV0 CC_SURFACES_DEBUG_VIEW_FACE_SIDE + 1\n#define CC_SURFACES_DEBUG_VIEW_UV1 CC_SURFACES_DEBUG_VIEW_UV0 + 1\n#define CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP CC_SURFACES_DEBUG_VIEW_UV1 + 1\n#define CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP + 1\n#define CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_BASE_COLOR CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR CC_SURFACES_DEBUG_VIEW_BASE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_TRANSPARENCY CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_METALLIC CC_SURFACES_DEBUG_VIEW_TRANSPARENCY + 1\n#define CC_SURFACES_DEBUG_VIEW_ROUGHNESS CC_SURFACES_DEBUG_VIEW_METALLIC + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY CC_SURFACES_DEBUG_VIEW_ROUGHNESS + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_ALL CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE CC_SURFACES_DEBUG_VIEW_DIRECT_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_ALL CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_EMISSIVE CC_SURFACES_DEBUG_VIEW_ENV_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_LIGHT_MAP CC_SURFACES_DEBUG_VIEW_EMISSIVE + 1\n#define CC_SURFACES_DEBUG_VIEW_SHADOW CC_SURFACES_DEBUG_VIEW_LIGHT_MAP + 1\n#define CC_SURFACES_DEBUG_VIEW_AO CC_SURFACES_DEBUG_VIEW_SHADOW + 1\n#define CC_SURFACES_DEBUG_VIEW_FOG CC_SURFACES_DEBUG_VIEW_AO + 1\n#define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#define IS_DEBUG_VIEW_LIGHTING_ENABLE_WITH_ALBEDO (cc_debug_view_mode.y > 0.0)\n#define IS_DEBUG_VIEW_MISC_ENABLE_CSM_LAYER_COLORATION (cc_debug_view_mode.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_DIFFUSE (cc_debug_view_composite_pack_1.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_SPECULAR (cc_debug_view_composite_pack_1.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_DIFFUSE (cc_debug_view_composite_pack_1.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_SPECULAR (cc_debug_view_composite_pack_1.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_EMISSIVE (cc_debug_view_composite_pack_2.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_LIGHT_MAP (cc_debug_view_composite_pack_2.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_SHADOW (cc_debug_view_composite_pack_2.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_AO (cc_debug_view_composite_pack_2.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_NORMAL_MAP (cc_debug_view_composite_pack_3.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_FOG (cc_debug_view_composite_pack_3.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_TONE_MAPPING (cc_debug_view_composite_pack_3.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION (cc_debug_view_composite_pack_3.w > 0.0)\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\n#if CC_USE_FOG != 4\n  float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {\n      vec4 wPos = pos;\n      float cam_dis = distance(cameraPos, wPos.xyz);\n      return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n  }\n  float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * fogDensity);\n      return f;\n  }\n  float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n      return f;\n  }\n  float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {\n      vec4 wPos = pos;\n      vec3 camWorldProj = cameraPos.xyz;\n      camWorldProj.y = 0.;\n      vec3 worldPosProj = wPos.xyz;\n      worldPosProj.y = 0.;\n      float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n      float fDeltaY, fDensityIntegral;\n      if (cameraPos.y > fogTop) {\n          if (wPos.y < fogTop) {\n              fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;\n              fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n          }\n          else {\n              fDeltaY = 0.;\n              fDensityIntegral = 0.;\n          }\n      }\n      else {\n          if (wPos.y < fogTop) {\n              float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;\n              float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;\n              fDeltaY = abs(fDeltaA - fDeltaB);\n              fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n          }\n          else {\n              fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;\n              fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n          }\n      }\n      float fDensity;\n      if (fDeltaY != 0.) {\n          fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n      }\n      else {\n          fDensity = 0.;\n      }\n      float f = exp(-fDensity);\n      return f;\n  }\n#endif\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\n\tfactor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);\n#elif CC_USE_FOG == 1\n\tfactor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 2\n\tfactor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 3\n\tfactor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);\n#else\n\tfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\n\tcolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nin float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\n    CC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\n    float factor;\n    CC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\n    float factor = v_fog_factor;\n#endif\n    CC_APPLY_FOG_BASE(color, factor);\n}\nin vec2 v_uv;\nuniform sampler2D mainTexture;\nlayout(std140) uniform Constant {\n  vec4 mainColor;\n};\nvec4 frag () {\n  vec4 col = mainColor * texture(mainTexture, v_uv);\n  CC_APPLY_FOG(col);\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183f\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_RECEIVE_SHADOW\n    attribute vec2 a_localShadowBias;\n  #endif\n#elif USE_BATCHING\n  attribute float a_dyn_batch_id;\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\n#if CC_USE_MORPH\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout StandardVertInput In)\n{\n    In.position = vec4(a_position, 1.0);\n    In.normal = a_normal;\n    In.tangent = a_tangent;\n  #if CC_USE_MORPH\n    applyMorph(In.position, In.normal, In.tangent);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In.position, In.normal, In.tangent);\n  #endif\n}\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_fogBase;\n  uniform mediump vec4 cc_fogAdd;\n#if !USE_INSTANCING\n  #if USE_BATCHING\n    uniform highp mat4 cc_matWorlds[10];\n  #else\n    uniform highp mat4 cc_matWorld;\n  uniform highp mat4 cc_matWorldIT;\n  #endif\n#endif\nvoid CCGetWorldMatrixFull(out mat4 matWorld, out mat4 matWorldIT)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n    matWorldIT = matWorld;\n  #elif USE_BATCHING\n    matWorld = cc_matWorlds[int(a_dyn_batch_id)];\n    matWorldIT = matWorld;\n  #else\n    matWorld = cc_matWorld;\n    matWorldIT = cc_matWorldIT;\n  #endif\n}\n#if CC_USE_FOG != 4\n  float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {\n      vec4 wPos = pos;\n      float cam_dis = distance(cameraPos, wPos.xyz);\n      return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n  }\n  float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * fogDensity);\n      return f;\n  }\n  float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n      return f;\n  }\n  float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {\n      vec4 wPos = pos;\n      vec3 camWorldProj = cameraPos.xyz;\n      camWorldProj.y = 0.;\n      vec3 worldPosProj = wPos.xyz;\n      worldPosProj.y = 0.;\n      float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n      float fDeltaY, fDensityIntegral;\n      if (cameraPos.y > fogTop) {\n          if (wPos.y < fogTop) {\n              fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;\n              fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n          }\n          else {\n              fDeltaY = 0.;\n              fDensityIntegral = 0.;\n          }\n      }\n      else {\n          if (wPos.y < fogTop) {\n              float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;\n              float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;\n              fDeltaY = abs(fDeltaA - fDeltaB);\n              fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n          }\n          else {\n              fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;\n              fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n          }\n      }\n      float fDensity;\n      if (fDeltaY != 0.) {\n          fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n      }\n      else {\n          fDensity = 0.;\n      }\n      float f = exp(-fDensity);\n      return f;\n  }\n#endif\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\n\tfactor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);\n#elif CC_USE_FOG == 1\n\tfactor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 2\n\tfactor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 3\n\tfactor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);\n#else\n\tfactor = 1.0;\n#endif\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_TRANSFER_FOG(vec4 pos) {\n#if !CC_USE_ACCURATE_FOG\n    CC_TRANSFER_FOG_BASE(pos, v_fog_factor);\n#endif\n}\nvarying highp vec4 v_shadowPos;\nuniform highp mat4 cc_matLightViewProj;\n#if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #endif\n#if CC_RECEIVE_SHADOW\n  uniform highp sampler2D cc_shadowMap;\n  uniform highp sampler2D cc_spotShadowMap;\n  #if CC_SUPPORT_CASCADED_SHADOW_MAP\n  #else\n  #endif\n#endif\n#if CC_RECEIVE_SHADOW\n#endif\nattribute vec4 a_color;\n#if HAS_SECOND_UV\n  attribute vec2 a_texCoord1;\n#endif\nvarying vec3 v_position;\nvarying vec3 v_normal;\nvarying vec3 v_tangent;\nvarying vec3 v_bitangent;\nvarying vec2 v_uv;\nvarying vec2 v_uv1;\nvarying vec4 v_color;\nvec4 vert () {\n  StandardVertInput In;\n  CCVertInput(In);\n  mat4 matWorld, matWorldIT;\n  CCGetWorldMatrixFull(matWorld, matWorldIT);\n  vec4 pos = matWorld * In.position;\n  v_position = pos.xyz;\n  v_normal = normalize((matWorldIT * vec4(In.normal, 0.0)).xyz);\n  v_tangent = normalize((matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n  v_bitangent = cross(v_normal, v_tangent) * In.tangent.w;\n  v_uv = a_texCoord;\n  #if HAS_SECOND_UV\n    v_uv1 = a_texCoord1;\n  #endif\n  v_color = a_color;\n  CC_TRANSFER_FOG(pos);\n  v_shadowPos = cc_matLightViewProj * pos;\n  return cc_matProj * (cc_matView * matWorld) * In.position;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nuniform mediump vec4 cc_debug_view_mode;\n  uniform mediump vec4 cc_debug_view_composite_pack_1;\n  uniform mediump vec4 cc_debug_view_composite_pack_2;\n  uniform mediump vec4 cc_debug_view_composite_pack_3;\nuniform highp vec4 cc_cameraPos;\n  uniform mediump vec4 cc_fogColor;\n  uniform mediump vec4 cc_fogBase;\n  uniform mediump vec4 cc_fogAdd;\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL CC_SURFACES_DEBUG_VIEW_VERTEX_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT CC_SURFACES_DEBUG_VIEW_VERTEX_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_WORLD_POS CC_SURFACES_DEBUG_VIEW_VERTEX_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR CC_SURFACES_DEBUG_VIEW_WORLD_POS + 1\n#define CC_SURFACES_DEBUG_VIEW_FACE_SIDE CC_SURFACES_DEBUG_VIEW_VERTEX_MIRROR + 1\n#define CC_SURFACES_DEBUG_VIEW_UV0 CC_SURFACES_DEBUG_VIEW_FACE_SIDE + 1\n#define CC_SURFACES_DEBUG_VIEW_UV1 CC_SURFACES_DEBUG_VIEW_UV0 + 1\n#define CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP CC_SURFACES_DEBUG_VIEW_UV1 + 1\n#define CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH CC_SURFACES_DEBUG_VIEW_UVLIGHTMAP + 1\n#define CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH CC_SURFACES_DEBUG_VIEW_PROJ_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL CC_SURFACES_DEBUG_VIEW_LINEAR_DEPTH + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT CC_SURFACES_DEBUG_VIEW_FRAGMENT_NORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL CC_SURFACES_DEBUG_VIEW_FRAGMENT_TANGENT + 1\n#define CC_SURFACES_DEBUG_VIEW_BASE_COLOR CC_SURFACES_DEBUG_VIEW_FRAGMENT_BINORMAL + 1\n#define CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR CC_SURFACES_DEBUG_VIEW_BASE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR CC_SURFACES_DEBUG_VIEW_DIFFUSE_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_TRANSPARENCY CC_SURFACES_DEBUG_VIEW_SPECULAR_COLOR + 1\n#define CC_SURFACES_DEBUG_VIEW_METALLIC CC_SURFACES_DEBUG_VIEW_TRANSPARENCY + 1\n#define CC_SURFACES_DEBUG_VIEW_ROUGHNESS CC_SURFACES_DEBUG_VIEW_METALLIC + 1\n#define CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY CC_SURFACES_DEBUG_VIEW_ROUGHNESS + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE CC_SURFACES_DEBUG_VIEW_SPECULAR_INTENSITY + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR CC_SURFACES_DEBUG_VIEW_DIRECT_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_DIRECT_ALL CC_SURFACES_DEBUG_VIEW_DIRECT_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE CC_SURFACES_DEBUG_VIEW_DIRECT_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR CC_SURFACES_DEBUG_VIEW_ENV_DIFFUSE + 1\n#define CC_SURFACES_DEBUG_VIEW_ENV_ALL CC_SURFACES_DEBUG_VIEW_ENV_SPECULAR + 1\n#define CC_SURFACES_DEBUG_VIEW_EMISSIVE CC_SURFACES_DEBUG_VIEW_ENV_ALL + 1\n#define CC_SURFACES_DEBUG_VIEW_LIGHT_MAP CC_SURFACES_DEBUG_VIEW_EMISSIVE + 1\n#define CC_SURFACES_DEBUG_VIEW_SHADOW CC_SURFACES_DEBUG_VIEW_LIGHT_MAP + 1\n#define CC_SURFACES_DEBUG_VIEW_AO CC_SURFACES_DEBUG_VIEW_SHADOW + 1\n#define CC_SURFACES_DEBUG_VIEW_FOG CC_SURFACES_DEBUG_VIEW_AO + 1\n#define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#define IS_DEBUG_VIEW_LIGHTING_ENABLE_WITH_ALBEDO (cc_debug_view_mode.y > 0.0)\n#define IS_DEBUG_VIEW_MISC_ENABLE_CSM_LAYER_COLORATION (cc_debug_view_mode.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_DIFFUSE (cc_debug_view_composite_pack_1.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_DIRECT_SPECULAR (cc_debug_view_composite_pack_1.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_DIFFUSE (cc_debug_view_composite_pack_1.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_ENV_SPECULAR (cc_debug_view_composite_pack_1.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_EMISSIVE (cc_debug_view_composite_pack_2.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_LIGHT_MAP (cc_debug_view_composite_pack_2.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_SHADOW (cc_debug_view_composite_pack_2.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_AO (cc_debug_view_composite_pack_2.w > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_NORMAL_MAP (cc_debug_view_composite_pack_3.x > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_FOG (cc_debug_view_composite_pack_3.y > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_TONE_MAPPING (cc_debug_view_composite_pack_3.z > 0.0)\n#define IS_DEBUG_VIEW_COMPOSITE_ENABLE_GAMMA_CORRECTION (cc_debug_view_composite_pack_3.w > 0.0)\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\n#if CC_USE_FOG != 4\n  float LinearFog(vec4 pos, vec3 cameraPos, float fogStart, float fogEnd) {\n      vec4 wPos = pos;\n      float cam_dis = distance(cameraPos, wPos.xyz);\n      return clamp((fogEnd - cam_dis) / (fogEnd - fogStart), 0., 1.);\n  }\n  float ExpFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * fogDensity);\n      return f;\n  }\n  float ExpSquaredFog(vec4 pos, vec3 cameraPos, float fogStart, float fogDensity, float fogAtten) {\n      vec4 wPos = pos;\n      float cam_dis = max(distance(cameraPos, wPos.xyz) - fogStart, 0.0) / fogAtten * 4.;\n      float f = exp(-cam_dis * cam_dis * fogDensity * fogDensity);\n      return f;\n  }\n  float LayeredFog(vec4 pos, vec3 cameraPos, float fogTop, float fogRange, float fogAtten) {\n      vec4 wPos = pos;\n      vec3 camWorldProj = cameraPos.xyz;\n      camWorldProj.y = 0.;\n      vec3 worldPosProj = wPos.xyz;\n      worldPosProj.y = 0.;\n      float fDeltaD = distance(worldPosProj, camWorldProj) / fogAtten * 2.0;\n      float fDeltaY, fDensityIntegral;\n      if (cameraPos.y > fogTop) {\n          if (wPos.y < fogTop) {\n              fDeltaY = (fogTop - wPos.y) / fogRange * 2.0;\n              fDensityIntegral = fDeltaY * fDeltaY * 0.5;\n          }\n          else {\n              fDeltaY = 0.;\n              fDensityIntegral = 0.;\n          }\n      }\n      else {\n          if (wPos.y < fogTop) {\n              float fDeltaA = (fogTop - cameraPos.y) / fogRange * 2.;\n              float fDeltaB = (fogTop - wPos.y) / fogRange * 2.;\n              fDeltaY = abs(fDeltaA - fDeltaB);\n              fDensityIntegral = abs((fDeltaA * fDeltaA * 0.5) - (fDeltaB * fDeltaB * 0.5));\n          }\n          else {\n              fDeltaY = abs(fogTop - cameraPos.y) / fogRange * 2.;\n              fDensityIntegral = abs(fDeltaY * fDeltaY * 0.5);\n          }\n      }\n      float fDensity;\n      if (fDeltaY != 0.) {\n          fDensity = (sqrt(1.0 + ((fDeltaD / fDeltaY) * (fDeltaD / fDeltaY)))) * fDensityIntegral;\n      }\n      else {\n          fDensity = 0.;\n      }\n      float f = exp(-fDensity);\n      return f;\n  }\n#endif\nvoid CC_TRANSFER_FOG_BASE(vec4 pos, out float factor)\n{\n#if CC_USE_FOG == 0\n\tfactor = LinearFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.y);\n#elif CC_USE_FOG == 1\n\tfactor = ExpFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 2\n\tfactor = ExpSquaredFog(pos, cc_cameraPos.xyz, cc_fogBase.x, cc_fogBase.z, cc_fogAdd.z);\n#elif CC_USE_FOG == 3\n\tfactor = LayeredFog(pos, cc_cameraPos.xyz, cc_fogAdd.x, cc_fogAdd.y, cc_fogAdd.z);\n#else\n\tfactor = 1.0;\n#endif\n}\nvoid CC_APPLY_FOG_BASE(inout vec4 color, float factor) {\n\tcolor = vec4(mix(cc_fogColor.rgb, color.rgb, factor), color.a);\n}\n#if !CC_USE_ACCURATE_FOG\nvarying float v_fog_factor;\n#endif\nvoid CC_APPLY_FOG(inout vec4 color) {\n#if !CC_USE_ACCURATE_FOG\n    CC_APPLY_FOG_BASE(color, v_fog_factor);\n#endif\n}\nvoid CC_APPLY_FOG(inout vec4 color, vec3 worldPos) {\n#if CC_USE_ACCURATE_FOG\n    float factor;\n    CC_TRANSFER_FOG_BASE(vec4(worldPos, 1.0), factor);\n#else\n    float factor = v_fog_factor;\n#endif\n    CC_APPLY_FOG_BASE(color, factor);\n}\nvarying vec2 v_uv;\nuniform sampler2D mainTexture;\n   uniform vec4 mainColor;\nvec4 frag () {\n  vec4 col = mainColor * texture2D(mainTexture, v_uv);\n  CC_APPLY_FOG(col);\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]},{"name":"CCShadow","defines":[]},{"name":"CCCSM","defines":["CC_SUPPORT_CASCADED_SHADOW_MAP"]}],"samplerTextures":[{"name":"cc_shadowMap","defines":["CC_RECEIVE_SHADOW"]},{"name":"cc_spotShadowMap","defines":["CC_RECEIVE_SHADOW"]}],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocalBatched","defines":["!USE_INSTANCING","USE_BATCHING"]},{"name":"CCLocal","defines":["!USE_INSTANCING","!USE_BATCHING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":169,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":45}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"USE_BATCHING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"},{"name":"CC_MORPH_TARGET_COUNT","type":"number","range":[2,8]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean"},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean"},{"name":"CC_USE_REAL_TIME_JOINT_TEXTURE","type":"boolean"},{"name":"CC_USE_FOG","type":"number","range":[0,4]},{"name":"CC_USE_ACCURATE_FOG","type":"boolean"},{"name":"CC_SUPPORT_CASCADED_SHADOW_MAP","type":"boolean"},{"name":"HAS_SECOND_UV","type":"boolean"}]}],[{"name":"opaque","passes":[{"program":"../videoPlayRes/effect_res/videogl_effect|legacy/main-functions/general-vs:vert|unlit-fs:frag","properties":{"mainTexture":{"value":"white","type":28},"mainColor":{"type":16,"value":[1,1,1,1]}}}]},{"name":"transparent","passes":[{"program":"../videoPlayRes/effect_res/videogl_effect|legacy/main-functions/general-vs:vert|unlit-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":2,"blendDstAlpha":4}]},"properties":{"mainTexture":{"value":"white","type":28},"mainColor":{"type":16,"value":[1,1,1,1]}}}]}]]],0,0,[],[],[]],[[{"name":"default_radio_button_off","rect":{"x":3,"y":3,"width":26,"height":26},"offset":{"x":0,"y":0},"originalSize":{"width":32,"height":32},"rotated":false,"capInsets":[13,13,13,13],"vertices":{"rawPosition":[-13,-13,0,13,-13,0,-13,13,0,13,13,0],"indexes":[0,1,2,2,1,3],"uv":[3,29,29,29,3,3,29,3],"nuv":[0.09375,0.09375,0.90625,0.09375,0.09375,0.90625,0.90625,0.90625],"minPos":{"x":-13,"y":-13,"z":0},"maxPos":{"x":13,"y":13,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[5],0,[0],[11],[112]],[[[26,"Cannon"],[51,"Cannon",[-6,-7],[[204,4,-5,[5,"79UvwdIxhIhZUjNo34nYzc"],-4,-3,-2,24]],[4,"04NJEohgBAgqq3wbHUvO/H",-1,0]],[70,"Components",512,[-8,-9,-10,-11,-12],[4,"8e/9t4Rm5OM6EKrAr+mnZh",1,0]],[71,"Base",8388608,1,[[22,"Cube<ModelComponent>",-13,[5,"95HFNoSUpFQ5/mxxs42NTK"],[0],[6],1],[162,-14,[5,"45qsQKwgNPfr2PX10iHko+"]],[156,333,true,1.6,0,-15,[5,"2fP621bk5FUo9fvPo6J5T0"]],[157,333,false,true,1.6,0,-16,[5,"7bPr0l/k1HAbjuK6J7N45j"]]],[4,"1egu5hczlOfb6EskRHiqFC",1,0],[1,0,0.1,0],[1,1,0.2,1]],[70,"Components",512,[-17,-18,-19,-20],[4,"a2DRjs4KZMB5jAU31V2MzT",1,0]],[109,"YawAxis",1,[4,-21],[4,"20y2IventHjo/sZ87eGSDk",1,0],[1,0,0.2,0]],[110,"PitchAxis",5,[2,-22],[4,"789ilRHdlNS5HIfnnS0qdv",1,0],[1,0,0.5,0],[3,-0.3826834323650898,0,0,0.9238795325112867],[1,-45,0,0]],[72,"Muzzle",8388608,2,[[22,"Cylinder<ModelComponent>",-23,[5,"836S8rSP9JoIBErZ0A2R6f"],[20],[6],21],[83,233,-24,[5,"8apdJLpslAWZp0MVHRkNO9"]],[83,233,-25,[5,"feovPfYZxBiKZbk3ztArCU"]]],[4,"52F2tBEBJCOarrd9PHhasV",1,0],[1,0,0,0.41],[3,0.7071067811865475,0,0,0.7071067811865476],[1,0.38,0.1,0.38],[1,90,0,0]],[73,"Clamp",512,4,[-27],[[22,"Cube<ModelComponent>",-26,[5,"9fzxfuWtRPRILA+xNPi937"],[6],[6],7]],[4,"3bGzwAqCVI9KNsecP0Rk78",1,0],[1,-0.2,0.32,0],[1,0.05,0.5,0.2]],[73,"Clamp",512,4,[-29],[[22,"Cube<ModelComponent>",-28,[5,"e19OJiDK5FY5ii5OrHD2+8"],[10],[6],11]],[4,"0bDG3rbLlP5LkPx4CzjpTV",1,0],[1,0.2,0.32,0],[1,0.05,0.5,0.2]],[74,"Turnplate",512,4,[[22,"Cylinder<ModelComponent>",-30,[5,"2chsdeERNFj5MeNZJbN14R"],[2],[6],3]],[4,"0fEZgeClVE1atvvEO9MwZ7",1,0],[1,0,0.04999999999999999,0],[1,0.7,0.05,0.7]],[27,"Round",8,[[22,"Cylinder<ModelComponent>",-31,[5,"58ZbbQG35AQ6vglvq9IDfY"],[4],[6],5]],[4,"e8UMeGF91BLo1VRmR6RFlv",1,0],[1,0,0.5000000000000002,0],[3,0,0,0.7071067811864665,0.7071067811866285],[1,0.4,0.4999999999999999,0.9999999999999998],[1,0,0,90]],[27,"Round",9,[[22,"Cylinder<ModelComponent>",-32,[5,"b4Sp44GhdFWaJ02MdzbZEE"],[8],[6],9]],[4,"68F+lYF4VAM6hCiW87kFif",1,0],[1,-4.440892098500626e-16,0.5,0],[3,0,0,0.7071067811864665,0.7071067811866285],[1,0.4,0.49999999999999994,0.9999999999999999],[1,0,0,90]],[38,"Roller",512,4,[[22,"Cylinder<ModelComponent>",-33,[5,"1aZuqXNadNqZf5bE5qGWWQ"],[12],[6],13]],[4,"7cAkiVKrxLiLwtgA9FsZh1",1,0],[1,0,0.5,0],[3,0,0,0.7071067811865475,0.7071067811865476],[1,0.08,0.2,0.08],[1,0,0,90]],[74,"Tail",512,2,[[22,"Sphere<ModelComponent>",-34,[5,"50wEbj3HxGraYoDZ37ynmp"],[14],[6],15]],[4,"41YhDGNo1OI4wu/0hQnlR/",1,0],[1,0,0,-0.2],[1,0.3,0.3,0.3]],[38,"Body",512,2,[[22,"Cylinder<ModelComponent>",-35,[5,"2fA8JQxqNMB4zGP7sUS3xa"],[16],[6],17]],[4,"78R3Jq6pRLopZQ+B2MX1CZ",1,0],[1,0,0,0.15],[3,0.7071067811865475,0,0,0.7071067811865476],[1,0.3,0.35,0.3],[1,89.99999999999999,0,0]],[38,"Expansion",512,2,[[22,"Cone<ModelComponent>",-36,[5,"60XMYofvFLVYs6RPFBId6/"],[18],[6],19]],[4,"19uIW6tsBKMIFD1DTRHS6G",1,0],[1,0,0,0.12],[3,-0.7071067811865475,0,0,0.7071067811865476],[1,0.38,0.38,0.38],[1,-89.99999999999999,0,0]],[38,"Hole",512,2,[[22,"Cylinder<ModelComponent>",-37,[5,"dfh98eUqFGLqzksChOZk+Z"],[22],[6],23]],[4,"93raYMC6RF2KH/LIbNS9ZL",1,0],[1,0,0,0.411],[3,0.7071067811865475,0,0,0.7071067811865476],[1,0.26,0.1,0.26],[1,89.99999999999999,0,0]],[111,"FirePoint",6,[4,"22TkR06QZB/bHEs+DNyNQ2",1,0],[1,0,0,0.4]]],0,[0,1,1,0,31,18,0,32,6,0,33,5,0,0,1,0,-1,3,0,-2,5,0,-1,14,0,-2,15,0,-3,16,0,-4,7,0,-5,17,0,0,3,0,0,3,0,0,3,0,0,3,0,-1,10,0,-2,8,0,-3,9,0,-4,13,0,-2,6,0,-2,18,0,0,7,0,0,7,0,0,7,0,0,8,0,-1,11,0,0,9,0,-1,12,0,0,10,0,0,11,0,0,12,0,0,13,0,0,14,0,0,15,0,0,16,0,0,17,0,6,1,2,8,6,4,8,5,37],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,2,-1,2,-1,2,-1,2,-1,2,-1,2,-1,2,-1,2,-1,2,-1,2,-1,2,-1,2,34],[2,9,113,4,15,4,15,9,15,4,15,9,114,4,19,35,19,4,19,10,2,4,115,4,116]],[[[19],[15,"statue_block",[-2],[4,"356QVp4N1UHLDFAVd+oJ8S",-1,0]],[21,"statue_block",1,[[16,-3,[5,"6c7x2kdGNbHbIJ/kXxZN++"],[0,1],[6],2]],[4,"b96bu3CB9dIrQmK9ylvw8W",1,0],[1,0,-0.05000000074505806,0]]],0,[0,1,1,0,-1,2,0,0,2,0,6,1,3],[0,0,0],[-1,-2,2],[117,118,119]],[[[8,"stone",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.7215685844421387,0.886274516582489,0.9098039269447327]]],11]]],0,0,[0],[3],[0]],[[[8,"stoneDark",[{"rasterizerState":{},"blendState":{"targets":[{}]},"depthStencilState":{}}],[{}],[[[{"metallic":0.4000000059604645,"roughness":0.30151134729385376},"albedoScale",8,[1,0.6039215922355652,0.7098038792610168,0.729411780834198]]],11]]],0,0,[0],[3],[0]],[[[12,".bin",79203913,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":7680,"length":1248,"count":312,"stride":4}},{"primitiveMode":7,"vertexBundelIndices":[1],"indexView":{"offset":12768,"length":432,"count":108,"stride":4}}],"vertexBundles":[{"view":{"offset":0,"length":7680,"count":160,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]},{"view":{"offset":8928,"length":3840,"count":80,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.20000000298023224,-4.104127045265367e-14,-0.20000000298023224],"maxPosition",8,[1,0.20000000298023224,0.4000000059604645,0.20000000298023224]]],-1],0,0,[],[],[]],[[[26,"Arrow"],[112,"Arrow",[-3,-4],[[60,true,-2,[5,"d5RCohwmtJmps2MYsPZf75"],[4],5]],[4,"ce2picvZZNy4YzSfrgsXZj",-1,0],[1,0,0.2,0]],[72,"Head",8388608,1,[[24,"Cone<ModelComponent>",0,-5,[5,"85WJLEZtVL/rCFtnv0hE1Z"],[0],[6],1],[84,true,0,-6,[5,"2f+eW8yXdHZbGVvG5/eQaW"]]],[4,"c0yyoJKZRJO47eQBbtPgV5",1,0],[1,0,0.1,0],[3,1,0,0,6.123233995736766e-17],[1,0.2,0.2,0.2],[1,180,0,0]],[71,"Body",8388608,1,[[24,"Cylinder<ModelComponent>",0,-7,[5,"9dvK4XuCRHZ7gaukAL3xRj"],[2],[6],3],[84,true,0,-8,[5,"b5kz0xstpC3ICjnZ6oTJY0"]]],[4,"cbbSJVs5BPHqYSiK+9vrui",1,0],[1,0,0.29,0],[1,0.08,0.1,0.08]]],0,[0,1,1,0,0,1,0,-1,2,0,-2,3,0,0,2,0,0,2,0,0,3,0,0,3,0,6,1,8],[0,0,0,0,0,0],[-1,2,-1,2,-1,19],[2,10,2,4,36,36]]]]
