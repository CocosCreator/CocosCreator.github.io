[1,["f4U3/jI0dHT675nJAHaofZ@f9941","11vcSwZKhOt6Knn7niM+l3@f9941","f5GvINUidFUpTiNF1JfBzf","33+mOUN+VNqLGufu5CvZym@f9941","19AoXXUxRI1oP/c/oqzMDn","11vcSwZKhOt6Knn7niM+l3@6c48a","43PgnLPutKC4GfGTc75u7y@f9941","37S8s90NBDRa4YueRv4JUN@f9941","45gWBCYldKy6FatJcMrFUQ","98zpUF40FMjqq07nl8yMlM@6c48a","0d5lrdJZZKz6QhQW4u3YWk@f9941","14vEQ5f4JPM50VyVatXNzT@f9941","fcJIG5kNtKGYp1euLzW6I/","03YR0q7iNI6KVTuRGsqCs2","59j67kw3ZEn5QZQlMy3QZ7@f9941","6c/HBr90hLZpQ2IziJmkxC@f9941","e2JmxKQJpOvqO41ugfU4b/","f4U3/jI0dHT675nJAHaofZ@6c48a","842Di9nHxFh65EnhnNAF1U@6c48a","173rzDCmtLirAL3Fi4hVge"],["node","_spriteFrame","_target","_normalSprite","_parent","_particleSystem","root","_cameraComponent","_checkMark","_placeholderLabel","_textLabel","data","_backgroundImage","_textureSource","bg0closeBtn","closeBtn","btnClickBackUp","cocos_scroll_listNode","fps_infoLabel","scene_root_node","effectManager","customerManager","mapManager","fightLoading","scene","followCamera","loadingUI","_mainTexture","_defaultClip","prefab","code_debug_prefab","imgShare","imgVideo","pfTailLine","mainTexture","_effectAsset"],[["cc.Node",["_name","_layer","_active","_id","_components","_parent","_prefab","_children","_lpos","_lscale","_lrot","_euler"],-1,9,1,4,2,5,5,5,5],["cc.Widget",["_alignFlags","_top","_bottom","_right","_left","_originalWidth","_originalHeight","_name","_alignMode","node","__prefab","_target"],-6,1,4,1],["cc.Label",["_actualFontSize","_fontSize","_string","_lineHeight","_horizontalAlign","_overflow","_verticalAlign","node","__prefab","_color"],-4,1,4,5],["cc.Node",["_name","_layer","_active","_id","_components","_parent","_lpos","_prefab","_children","_lrot","_euler"],-1,12,1,5,4,2,5,5],["cc.Sprite",["_sizeMode","_type","_name","_isTrimmedMode","node","__prefab","_spriteFrame","_color"],-1,1,4,6,5],["cc.UITransform",["_name","node","_contentSize","__prefab","_anchorPoint"],2,1,5,4,5],["cc.Node",["_name","_layer","_id","_parent","_components","_lpos","_prefab"],0,1,2,5,4],["cc.PrefabInfo",["fileId","targetOverrides","instance","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.LabelOutline",["_width","node","__prefab","_color"],2,1,4,5],["cc.Camera",["_priority","_far","_clearFlags","_visibility","_projection","_orthoHeight","_name","node","_color","__prefab"],-4,1,5,4],["cc.CurveRange",["constant","mode","constantMin","constantMax"],-1],"cc.SpriteFrame",["cc.Canvas",["_name","node","_cameraComponent","__prefab"],2,1,1,4],["cc.Button",["_transition","node","__prefab","_target","_normalSprite","_normalColor","_hoverColor","_pressedColor","_disabledColor"],2,1,4,1,6,5,5,5,5],["cc.Toggle",["_isChecked","node","__prefab","_normalColor","_target","_checkMark","_normalSprite"],2,1,4,5,1,1,6],["cc.GradientRange",["_mode","colorMin","colorMax"],2,5,5],["cc.ColorOvertimeModule",["_enable","color"],2,4],["cc.ShapeModule",["arcSpread","length","_shapeType","_enable","arcSpeed"],-1,4],["cc.TrailModule",["_enable","existWithParticles","widthFromParticle","lifeTime","widthRatio","colorOverTrail","colorOvertime","_particleSystem"],0,4,4,4,4,1],["cc.ParticleSystemRenderer",["_renderMode","_mainTexture"],2,6],["cc.Prefab",["_name"],2],["cc.CompPrefabInfo",["fileId"],2],["6dca9B+LIJHwYLx9D7OsvSd",["load_persistent_bool","node","__prefab"],2,1,4],["b8e967LD+JGwLn1ibxPjZI0",["node","__prefab","closeBtn","bg0closeBtn"],3,1,4,1,1],["cf25eocY7ZG9b2oppgp3ZW2",["node","__prefab"],3,1,4],["9a6189m3rlP+rdx/hB8rrYI",["theItemNums","node","__prefab","fps_infoLabel","ShowCtimePopup","clickShowCtimePopup","cocos_scroll_listNode","evenCellNode","oddCellNode","btnClickUpdate","btnClickRefresh","btnClickBackUp","btnClearData","toTopBotBtn","toggleShowMenu"],2,1,4,1,1,1,1,1,1,1,1,1,1,1,1],["cc.LabelShadow",["_blur","node","__prefab","_color","_offset"],2,1,4,5,5],["cc.EditBox",["_maxLength","node","__prefab","_textLabel","_placeholderLabel","_backgroundImage"],2,1,4,1,1,6],["cc.Mask",["node","__prefab"],3,1,4],["cc.Graphics",["node","__prefab","_fillColor"],3,1,4,5],["34d6fEbPGZJ4oDfUBRxE1Tb",["spacing","headPadding","node","__prefab"],1,1,4],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.ParticleSystem",["duration","node","__prefab","_materials","startColor","startSizeX","startSizeY","startSizeZ","startSpeed","startRotationX","startRotationY","startRotationZ","startDelay","startLifetime","gravityModifier","rateOverTime","rateOverDistance","bursts","_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_trailModule","renderer"],2,1,4,12,4,4,4,4,4,4,4,4,4,4,4,4,4,9,4,4,4,4,4,4,4,4,4,4],["cc.ParticleSystem",["_name","simulationSpeed","_capacity","node","__prefab","_materials","startColor","startSizeX","startSizeY","startSizeZ","startSpeed","startRotationX","startRotationY","startRotationZ","startDelay","startLifetime","gravityModifier","rateOverTime","rateOverDistance","bursts","_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_trailModule","renderer"],0,1,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,9,4,4,4,4,4,4,4,4,4,4],["cc.Burst",["count"],3,4],["cc.SizeOvertimeModule",["size","x","y","z"],3,4,4,4,4],["cc.VelocityOvertimeModule",["x","y","z","speedModifier"],3,4,4,4,4],["cc.ForceOvertimeModule",["x","y","z"],3,4,4,4],["cc.LimitVelocityOvertimeModule",["limitX","limitY","limitZ","limit"],3,4,4,4,4],["cc.RotationOvertimeModule",["x","y","z"],3,4,4,4],["cc.TextureAnimationModule",["frameOverTime","startFrame"],3,4,4],["cc.SceneAsset",["_name"],2],["2045bRl/LZB/KqEEi6tHsub",["node","scene_root_node","code_debug_prefab"],3,1,1,6],["cc.Scene",["_name","_children","_prefab","_globals"],2,2,4,4],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree"],3,4,4,4,4,4],["cc.AmbientInfo",["_skyIllumHDR","_skyIllumLDR","_skyColorHDR","_groundAlbedoHDR","_skyColorLDR","_groundAlbedoLDR"],1,5,5,5,5],["cc.ShadowsInfo",["_enabled","_bias","_near","_far","_shadowDistance","_saturation"],-3],["cc.SkyboxInfo",["_useHDR"],2],["cc.FogInfo",["_fogColor"],3,5],["cc.OctreeInfo",[],3],["cc.PrefabLink",["node","prefab"],3,1,6],["cc.BlockInputEvents",["node"],3,1],["cc.Animation",["_name","playOnLoad","node","__prefab","_clips","_defaultClip"],1,1,4,3,6],["cc.Layout",["_resizeMode","_layoutType","node","__prefab"],1,1,4],["cc.UIMeshRenderer",["node","__prefab"],3,1,4],["0ab97H51jJALJr6aO9gzNGg",["_name"],2],["cc.BoxCollider",["node","_size"],3,1,5],["f3d36qkNslPB4TIGcZlp8vd",["node","fightLoading","mapManager","customerManager","carManager","effectManager","nodeGround"],3,1,1,1,1,1,1,1],["daea1EBoy1Ms6PBdAupQWnn",["node","carManager","tip"],3,1,1,1],["4b7cfRS5bdP8qo8rorNgln5",["node","__prefab"],3,1,4],["99c5fx0klFHq52oGPdZL7Z5",["_name","node","__prefab","lbProgress","lbTips"],2,1,4,1,1],["ff8ee6OQldPNLrgLpXROotm",["_name","isFollowRotation","node","offset"],1,1,5],["273adkVLRhECoDje+nCdBuE",[],3],["586a8tdaBhPQprl2rcvzztA",["_name"],2],["cf371ivOc1Ae64t3ScAzqjv",["carManager"],3,1],["cc.DirectionalLight",["_name","_useColorTemperature","_colorTemperature","_illuminanceHDR","_illuminanceLDR","node","_color","_staticSettings"],-2,1,5,4],["cc.StaticLightSettings",[],3],["cc.Material",["_techIdx","_states","_defines","_props"],0,12]],[[21,0,2],[10,1],[5,1,3,2,1],[7,0,2,1,3,4,5,5],[10,0,2],[2,2,0,1,7,8,4],[5,1,3,2,4,1],[7,0,4,5,2],[4,1,0,4,5,7,6,3],[26,0,1,2,3,4,2],[8,0,1,2,2],[0,0,1,5,7,4,6,8,3],[15,1],[0,0,1,5,4,6,3],[13,0,1,2,5,6,7,8,3,4,2],[24,0,1,1],[0,0,1,5,4,8,3],[1,0,4,3,1,5,9,10,11,6],[4,0,4,5,7,6,2],[0,0,1,5,4,6,8,3],[0,0,2,1,5,7,4,6,8,4],[0,0,1,4,6,3],[3,0,1,5,4,7,6,3],[6,0,2,3,4,3],[1,0,3,1,9,10,11,4],[1,0,4,1,9,10,11,4],[8,1,2,1],[0,0,2,1,5,4,6,8,4],[0,0,2,1,5,4,6,4],[5,0,1,3,2,2],[34,0,1],[35,0,1,2,3,1],[36,0,1,2,3,1],[37,0,1,2,1],[38,0,1,2,3,1],[39,0,1,2,1],[40,0,1,1],[20,0,2],[0,0,1,7,4,6,8,3],[0,0,1,5,7,4,6,3],[0,0,1,5,7,4,8,3],[3,0,2,1,5,4,7,6,4],[3,0,1,5,4,6,3],[6,0,3,4,6,5,2],[5,1,3,1],[5,0,1,2,2],[1,0,3,2,9,10,11,4],[1,0,4,3,1,2,5,6,9,10,11,8],[1,0,4,3,2,5,9,10,11,6],[4,1,0,4,5,7,3],[4,2,0,4,5,6,3],[4,0,3,4,5,6,3],[4,0,4,5,6,2],[8,1,2,3,1],[27,0,1,2,3,4,5,2],[2,2,4,6,0,1,3,5,7,8,8],[2,2,4,0,1,3,5,7,8,9,7],[2,2,0,7,8,3],[32,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,2],[16,1,1],[17,2,0,1,4,4],[18,0,1,2,3,4,5,6,7,4],[19,0,2],[0,0,2,1,7,4,6,4],[0,0,7,6,2],[0,0,1,5,7,4,3],[0,0,1,5,4,3],[0,0,3,5,4,9,3],[0,0,3,5,4,3],[0,0,3,5,4,8,10,11,3],[3,0,2,1,5,8,4,7,4],[3,0,1,5,8,4,7,3],[3,0,1,3,8,4,6,4],[3,0,1,5,8,4,3],[3,0,1,5,4,6,9,10,3],[3,0,3,5,4,6,9,10,3],[6,0,1,3,4,6,5,3],[6,0,1,3,4,5,3],[5,1,2,1],[12,1,3,2,1],[12,0,1,2,2],[1,0,1,2,9,10,4],[1,0,5,6,9,10,4],[1,0,9,2],[1,7,0,5,6,8,9,10,11,6],[1,0,2,9,3],[1,7,0,4,1,8,9,11,6],[22,0,1,2,2],[7,0,1,4,5,3],[7,0,2],[23,0,1,2,3,1],[4,2,3,4,5,3],[13,1,2,3,4,1],[14,0,1,2,3,4,5,6,2],[14,1,2,3,4,5,6,1],[25,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,2],[8,0,1,2,3,2],[28,0,1,1],[29,0,1,2,1],[2,0,7,8,2],[2,0,1,3,7,8,4],[2,0,7,8,9,2],[2,0,1,3,7,8,9,4],[2,2,0,1,7,8,9,4],[2,2,0,1,3,7,8,5],[2,2,0,1,7,4],[9,4,0,5,1,2,3,7,9,8,7],[9,6,0,1,2,3,7,8,6],[9,4,0,5,1,2,3,7,8,7],[30,0,1,2,3,3],[31,0,1,2,4],[33,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,4],[15,0,1,2,2],[10,1,2,3,4],[16,0,1,2],[17,3,0,1,4,4],[18,3,4,5,6,7,1],[19,1,1],[41,0,2],[42,0,1,2,1],[43,0,1,2,3,2],[44,0,1,2,3,4,1],[45,0,1,2,3,4,5,3],[46,0,1,2,3,4,5,7],[47,0,2],[48,0,1],[49,1],[50,0,1,1],[51,0,1],[52,0,1,2,3,4,5,3],[53,0,1,2,3,3],[54,0,1,1],[55,0,2],[56,0,1,1],[57,0,1,2,3,4,5,6,1],[58,0,1,2,1],[59,0,1,1],[60,0,1,2,3,4,2],[61,0,1,2,3,3],[62,1],[63,0,2],[64,0,1],[65,0,1,2,3,4,5,6,7,6],[66,1],[67,0,1,2,3,4]],[[[[37,"CodeCanvasNodePrefab"],[38,"CodeCanvasNodePrefab",1,[-7,-8],[[2,-2,[0,"5bWTIUlR5Her8lrLQyhKTO"],[5,720,1280]],[79,-4,[0,"2dczuCEgxOWLQMws7/7PHz"],-3],[81,45,1.1368683772161603e-13,1.1368683772161603e-13,-5,[0,"385wC4hQ1GT4RSis5zShi+"]],[87,true,-6,[0,"00hWjydmFGj5f2ITjmhF/r"]]],[88,"64NLMXEyxH+abwyHeKRXN/",null,-1,0],[1,360,640.0000000000001,0]],[63,"codeDebugPopup",false,1,[-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24],[[44,-9,[0,"9ajXfbN+dKXI4kNN0NloqZ"]],[90,-12,[0,"5bbga58sJF4Zz6DmeKr7aQ"],-11,-10]],[3,"caFKlNMLJNjrA3aic/CqJH",null,null,null,1,0]],[11,"EventCell_ITEM",1,2,[-27,-28,-29,-30,-31],[[6,-25,[0,"fe9p+eAcNJsKWabd44aukT"],[5,500,270],[0,0,1]],[18,0,-26,[0,"06ZrkoTtNIk4re5R5F3oiC"],[4,4286216917],11]],[3,"8fyaBHXGtKxKGLcSYIoHeW",null,null,null,1,0],[1,-1378.711,-1520.803,0]],[11,"OddCell_ITEM",1,2,[-34,-35,-36,-37,-38],[[6,-32,[0,"d02eI4I1BFT5TpnE9GZYgO"],[5,500,270],[0,0,1]],[18,0,-33,[0,"61pjmbPqxKS5bYfUIGPjxm"],[4,4284726887],16]],[3,"ebN9iek8JNebMwvDEIIK68",null,null,null,1,0],[1,-737.581,-1520.803,0]],[38,"CodeDebugSpriteSplashButton",1,[-45,-46],[[2,-39,[0,"7ciFN8ao5DyLEd8hOe8wpQ"],[5,150,50]],[8,1,0,-40,[0,"47zdvnn/VAzrc5V48rW1gI"],[4,4294949384],3],[14,1,-42,[0,"f4kgnJEbRHj4w+k9LEl/sG"],[4,4294949384],[4,4294955356],[4,4287916800],[4,4281871893],-41,4],[46,34,10,579.564,-43,[0,"cbIC64rlpK9YTtGHyTvazZ"],1],[15,-44,[0,"59ERQDwttI4JbnbILWhod0"]]],[3,"2fu2+icr1D7bt9ClJKE8OQ",null,null,null,1,0],[1,275,50.416,0]],[20,"UpdateBTN",false,1,2,[-53],[[2,-47,[0,"ed2+7s0zlJD7bGgo2kpUKz"],[5,160,70]],[8,1,0,-48,[0,"faR9ozzUdH07BUrJ4x41uD"],[4,4294949384],20],[14,1,-50,[0,"48NuucF3dPkJluRNLK1ATT"],[4,4294949384],[4,4294955356],[4,4287916800],[4,4281871893],-49,21],[17,9,56.31,863.69,208.3139999999999,160,-51,[0,"5bIMHF1BdATICdZTy3nw+Y"],1],[15,-52,[0,"20Omwj1itN/6Y5pFKr03dJ"]]],[3,"99FcP0LnlEUaRI+tzBcbjk",null,null,null,1,0],[1,-403.69,767.1020000000001,0]],[20,"ClearDataBtn",false,1,2,[-60],[[2,-54,[0,"4amG+qMrJNAJCZ5tD4tpK+"],[5,160,70]],[8,1,0,-55,[0,"8bbsaIxDNOMpKD4M2kRQdk"],[4,4281663634],22],[14,1,-57,[0,"15kvFghJ5FP6LxgToYgnZw"],[4,4281663634],[4,4294955356],[4,4287916800],[4,4281871893],-56,23],[17,9,56.31,863.69,756.603,160,-58,[0,"ebI7bNaNZM5p1UnPRhAx9k"],1],[15,-59,[0,"b1+IpW0OZFIr48V8i3Xc53"]]],[7,"14LcAfMJBJN6PIJmkQqpy8",1,0],[1,-403.69,218.81300000000005,0]],[20,"ToggleBotTop",false,1,2,[-67,-68],[[2,-61,[0,"098lK+StdEiacX+DwvjNH8"],[5,160,70]],[93,false,-64,[0,"f57xHX9aNEM68tOYTh198x"],[4,4292269782],-63,-62,25],[17,9,37.99400000000003,411.065,340.88199999999995,160,-65,[0,"bcbtiESkVPubNHtwcAKhwh"],1],[15,-66,[0,"93jY/EQKxOtI/AICE0+Nfn"]]],[3,"44m+wVUw9PZISw4SQqRWp4",null,null,null,1,0],[1,-422.006,634.5340000000001,0]],[20,"RefreshBTN",false,1,2,[-75],[[2,-69,[0,"edwClLSadGLqE6Xr7qW/QC"],[5,160,70]],[8,1,0,-70,[0,"87ecu79mJNV7gAOAP937mM"],[4,4294949384],26],[14,1,-72,[0,"e6PPfULYdJiYcNh2J/AlSZ"],[4,4294949384],[4,4294955356],[4,4287916800],[4,4281871893],-71,27],[17,9,-2284.115,372.18899999999996,429.59099999999995,160,-73,[0,"5aoaCIPflExZYTAJ31Tb/t"],1],[15,-74,[0,"10DRf4d/xJo5zwlciVC5TO"]]],[3,"d2U7ldbR5K9YxYEC7vnAmP",null,null,null,1,0],[1,-2744.115,545.825,0]],[11,"ToggleMenu",1,2,[-82,-83],[[2,-76,[0,"a8KKcpprlENa7sr1CPQzxh"],[5,160,70]],[94,-79,[0,"fd2EGlOrFHjYkPvp/B9LXH"],[4,4292269782],-78,-77,29],[17,9,148.935,411.065,24.220000000000027,160,-80,[0,"1cQvYT1iVJLLiEQk3P0xSs"],1],[15,-81,[0,"b5CprO2HFLVY0xEeEV6SUu"]]],[3,"d26K83NQRLHprVRru9REzc",null,null,null,1,0],[1,-311.065,951.1959999999999,0]],[11,"CodeDebugTimeNode",1,1,[-89,-90,-91,5,2],[[2,-84,[0,"3dG1ZCrANGhJpbC//sCCTI"],[5,0,0]],[95,123,-88,[0,"5aUA7QUZZGBKIvL/XegPa5"],-87,2,5,-86,3,4,6,9,-85,7,8,10]],[3,"82b6KsbKZI07unuExs/5TU",null,null,null,1,0],[1,0,-50.416,0]],[11,"closeBtn",1,2,[-97],[[2,-92,[0,"b1VpQ8JHNBXbt6MPtA9kgQ"],[5,110,50]],[8,1,0,-93,[0,"b2pq+x8tFEi62Iauu6xIDX"],[4,4294949384],17],[14,1,-95,[0,"0e7MPFzhRMnbvyrsJzzJrO"],[4,4294949384],[4,4294955356],[4,4287916800],[4,4281871893],-94,18],[24,33,28.805000000000007,29.060999999999922,-96,[0,"9cq05nWQpHlaKBjT2OPFRN"],1]],[3,"3cgBS/NiJG1alNglXgYCOZ",null,null,null,1,0],[1,456.195,956.355,0]],[11,"backupBtn",1,2,[-103],[[2,-98,[0,"8b04HVC4ZGOKvXNjtu3mCo"],[5,110,50]],[8,1,0,-99,[0,"da4zUlTn5JZ4usep6PDGkk"],[4,4294949384],30],[14,1,-101,[0,"66nwDfhZZC8oMFysWh9AeG"],[4,4294949384],[4,4294955356],[4,4287916800],[4,4281871893],-100,31],[17,9,20.748000000000047,589.252,29.060999999999922,110,-102,[0,"dfwdki+ItN3pTZmdslog1/"],1]],[3,"54vIF/hmFL37RiBtL/HH8A",null,null,null,1,0],[1,-464.25199999999995,956.355,0]],[22,"fps_infoLabel",1,2,[[[6,-104,[0,"4cgWqYhpNK1IB75OtHqXpN"],[5,189.51,144.1],[0,0,0.5]],-105,[96,5,-106,[0,"93PltIWyFFraKtFr4HZRQE"],[4,4280624421]],[9,10,-107,[0,"8ePfnk+gpDaastmdyrVeKt"],[4,4284612607],[0,0,0]],[24,33,194.666,0.05499999999986471,-108,[0,"7cC3NVMl1J57LpNV/YBD2A"],1],[15,-109,[0,"f1yOkfCrBOtqF8/drOb0uU"]],[15,-110,[0,"80D43RBMFCYoAzIBiTTm2K"]]],4,1,4,4,4,4,4],[3,"22dtFwSxlDKqHM8iJVkRkl",null,null,null,1,0],[1,155.824,938.3110000000001,0]],[19,"bg0",1,2,[[2,-111,[0,"00yNeoPeBE859jF9QSSOeT"],[5,2900,3740]],[18,0,-112,[0,"35UE/DIP9BSruUjzEjcEv/"],[4,2902458368],5],[92,-114,[0,"22td1/nsJPXpf980NelGHa"],-113,6],[47,45,-910,-910,-910,-910,1920,1920,-115,[0,"56B59eYb9Kkp/msoNIynkR"],1]],[3,"b5gOCXCtFL2rWk1pZ7Jv9A",null,null,null,1,0],[1,0,50.41599999999994,0]],[11,"viewDetail",1,3,[-121],[[2,-116,[0,"99AMZp4FBN8qfUyLUmF8Ab"],[5,110,50]],[8,1,0,-117,[0,"88tS8yk2xP8I7zuUz0y3Yr"],[4,4294949384],7],[14,1,-119,[0,"a6qUk1M21NlJumFTubmouu"],[4,4294949384],[4,4294955356],[4,4287916800],[4,4281871893],-118,8],[24,34,15.931000000000026,-25,-120,[0,"d0An1B37FNCaKmWpRIRipt"],3]],[3,"0bLKnwDrdFEpa24gfSaV5E",null,null,null,1,0],[1,429.06899999999996,-135,0]],[11,"detailEditBox",1,3,[-128,-129],[[2,-122,[0,"9a2We1hh5AyoqQvuRL3nSq"],[5,450,180]],[8,1,0,-123,[0,"c8EhTgkiJHnJVEbLe9DjeR"],[4,4281348144],9],[54,1024,-126,[0,"27U3AvISVFZq0/2+yDcLVU"],-125,-124,10],[48,44,25,25,-104.34100000000001,450,-127,[0,"ec5XOv7RJMrLLoLBD4s0nE"],3]],[7,"54opaZEq5O+IIjlV/LpjDm",1,0],[1,250,-284.341,0]],[11,"viewDetail",1,4,[-135],[[2,-130,[0,"91Pjtx0SlJXbN9ko8EoV15"],[5,110,50]],[8,1,0,-131,[0,"3dGQ04sdxFgq763GL34bP+"],[4,4294949384],12],[14,1,-133,[0,"eb8qzlZa9HnoPRyPyFm0s6"],[4,4294949384],[4,4294955356],[4,4287916800],[4,4281871893],-132,13],[24,34,15.931000000000026,-25,-134,[0,"b9qwyqpCZBbaJh0NgONWsc"],4]],[3,"b5Jz4EwNRLiaHeh63qG/sc",null,null,null,1,0],[1,429.06899999999996,-135,0]],[11,"detailEditBox",1,4,[-142,-143],[[2,-136,[0,"43nTLO3zROwLRsqKQmoao2"],[5,450,180]],[8,1,0,-137,[0,"21p+h4h19O67MzhmWXBcLe"],[4,4281348144],14],[54,1024,-140,[0,"ec5L+5YuZC8LeILXyoQ6Vj"],-139,-138,15],[48,44,25,25,-101.35500000000002,450,-141,[0,"feItqgX2xEp6NZgmJNd7Ci"],4]],[7,"0dD8wd/FtEM6j2GJdOQaR6",1,0],[1,250,-281.355,0]],[11,"DataListMask",1,2,[-148],[[2,-144,[0,"73LJvPef5E05qjMh0VZJg7"],[5,901.107,1711.1839999999997]],[97,-145,[0,"21/s5u8EpMQ7spPoRr3tXT"]],[98,-146,[0,"6f1KYn6AROqbEwwevpwI/t"],[4,16777215]],[47,45,95.08800000000001,83.80499999999996,127.89200000000021,80.92400000000019,650,1150,-147,[0,"825RYHyRRKPpqef/hV3miU"],1]],[3,"36ETCPdSpCwqxzm5YREY9A",null,null,null,1,0],[1,5.641500000000008,26.932000000000016,0]],[13,"ShowLabel-001",1,5,[[2,-149,[0,"44Y2Ea7v1BH5c0WGV/a0rG"],[5,152.33,68.4]],[5,"代码✍耗时",25,25,-150,[0,"683knWVMdITqjK38ZOqMRP"]],[10,4,-151,[0,"b4rvQqUSZBA4Gl++L1XtVj"]],[9,5,-152,[0,"26//sCHElLyp7Tk3JM3gGI"],[4,4282532607],[0,0,0]]],[3,"43Wofq4WBP3qKNBpg2lrB7",null,null,null,1,0]],[19,"func_name_text",1,3,[[6,-153,[0,"c68UOAlNhN171Umca6yVvF"],[5,88.51,54.4],[0,0,0.5]],[99,40,-154,[0,"2frm37uaJHQr0AEEaYyM82"]],[26,-155,[0,"3f7wRfpaNGT6xELpi49KS8"]],[25,9,39.577,46.851,-156,[0,"a7SFrdqUtOR70fu8BLGTqc"],3]],[3,"e65tmYNN5HcJL+Op5rhJWq",null,null,null,1,0],[1,39.577,-74.051,0]],[13,"ShowLabel-001",1,16,[[2,-157,[0,"32E1YOxNtMlaY0Libtd5z5"],[5,91.37,68.4]],[5,"👆 查看",22,22,-158,[0,"a1OPd3oyFGaKfaB7LCgPwF"]],[10,4,-159,[0,"09NzK2euBK+b2hl6B6w582"]],[9,5,-160,[0,"d79OxWWNxJTqkvWOwJuDmX"],[4,4282532607],[0,0,0]]],[3,"96iTeCatxDF7YL/JpJLP72",null,null,null,1,0]],[19,"func_exectime_text",1,3,[[6,-161,[0,"91UCF7PKFN1LULdo425e74"],[5,67.38,41.8],[0,0,0.5]],[100,30,30,30,-162,[0,"c1BvGh3Q5PL4ADg/b00JRw"]],[26,-163,[0,"64vZIa0bdLSLYs7WVH6y2t"]],[25,9,39.577,123.654,-164,[0,"9dnSpK37JAIpx7cw/p7vEn"],3]],[7,"4cVx48YGtMMriww6PNGic4",1,0],[1,39.577,-144.554,0]],[19,"func_name_text",1,4,[[6,-165,[0,"c68UOAlNhN171Umca6yVvF"],[5,88.51,54.4],[0,0,0.5]],[101,40,-166,[0,"2frm37uaJHQr0AEEaYyM82"],[4,3690987519]],[26,-167,[0,"69VqfE6TVCFbuKo4kdLt6T"]],[25,9,39.577,46.851,-168,[0,"bbmgGTldpKGKFeKqkvbPd9"],4]],[3,"a5yNuXgsVMaY91OKqigkV2",null,null,null,1,0],[1,39.577,-74.051,0]],[13,"ShowLabel-001",1,18,[[2,-169,[0,"0fItVCVuZE0rzZ3f9HAPVx"],[5,91.37,68.4]],[5,"👆 查看",22,22,-170,[0,"8bnOfiyNhKOIBxPCUp9uwN"]],[10,4,-171,[0,"19lVE/G81NF7ybMYbaPvzB"]],[9,5,-172,[0,"05cG01CoZGB4ozKtJgJkRy"],[4,4282532607],[0,0,0]]],[3,"16uGkj/iBArLw+8eSmoWXy",null,null,null,1,0]],[19,"func_exectime_text",1,4,[[6,-173,[0,"ceIJottX9OYadiZqzxvP4y"],[5,67.38,41.8],[0,0,0.5]],[102,30,30,30,-174,[0,"b751ZWVrNHOp4smTh8m+ON"],[4,3690987519]],[26,-175,[0,"e1CZIBwmNNlLqYbpZivju8"]],[25,9,39.577,123.654,-176,[0,"d0qnRtZiFBPoo5FUsAB/K8"],4]],[7,"cf95omjkBNNKxZcLdHx/4l",1,0],[1,39.577,-144.554,0]],[13,"ShowLabel-001",1,12,[[2,-177,[0,"57QZ4hIURC+6xA1i1/0VRX"],[5,98.32,68.4]],[5,"❌ 关闭",22,22,-178,[0,"9a4odVq11Pn7fNzQlJE0MM"]],[10,4,-179,[0,"d0ggcQrCFOjpZk+N3IOx+T"]],[9,5,-180,[0,"2aEJ2ydj9IgJiQety/Ysgh"],[4,4282532607],[0,0,0]]],[3,"5cYhDBADtJjIkli1PRg9FI",null,null,null,1,0]],[22,"ListShowArea",1,20,[[[6,-181,[0,"33O+/iIMxIeb4P/micxWut"],[5,901.107,1711.1839999999997],[0,0,1]],[18,0,-182,[0,"d92cb+P+NA4IOZ5SwwILD0"],[4,3594798080],19],-183,[82,45,650,1150,-184,[0,"ecB2WmXhpMQIjH4qtfU0DD"]]],4,4,1,4],[3,"73g/7nV7JCVa8rrlPXn+ex",null,null,null,1,0],[1,-450.5535,855.5919999999999,0]],[13,"ShowLabel-001",1,6,[[2,-185,[0,"c23nUVRrNCILY8cp1AOn4S"],[5,138,68.4]],[5,"立即刷新",30,30,-186,[0,"5eCrGicj1Np5a863N+TDr0"]],[10,4,-187,[0,"a1WwDNMudMK6Z7B35u2Hap"]],[9,5,-188,[0,"b9caZagFlLnInxtdky5hrm"],[4,4282532607],[0,0,0]]],[3,"b2kFHZ335LqLyKvVyIgEtD",null,null,null,1,0]],[13,"ShowLabel-001",1,7,[[2,-189,[0,"a2wQhJ+blN5ISszXtkztsX"],[5,138,68.4]],[5,"清空数据",30,30,-190,[0,"1aOJh5+ZBCqo3OmJxL1xH5"]],[10,4,-191,[0,"a2Fzy8/PpIEJsajhYBHKk7"]],[9,5,-192,[0,"ef+JRdALNKzqqRYGbKLPYR"],[4,4282532607],[0,0,0]]],[7,"286Cas02ZOTIR7gkCTB84k",1,0]],[21,"ShowLabel-001",1,[[2,-193,[0,"76cMNVGhVBcYong3vUm0/D"],[5,138,68.4]],[5,"直达底部",30,30,-194,[0,"d1+aLhQ8ZPbK8UFJ7qrUzm"]],[10,4,-195,[0,"0afE/YWmJEeIJ7TZAk0x5a"]],[9,5,-196,[0,"c85fxSzbRDrrQebiNcXCAh"],[4,4282532607],[0,0,0]]],[3,"4fA33vJ8JFgb7aC3seqBvP",null,null,null,1,0]],[21,"ShowLabel-001",1,[[2,-197,[0,"82eAOhmwVGkr2CHHUu8z3Q"],[5,138,68.4]],[5,"返回顶部",30,30,-198,[0,"c3D7m824pEQY0ebTMiSJnJ"]],[10,4,-199,[0,"1dPWJv42VBKJjZJZm7ptes"]],[9,5,-200,[0,"1crcVUic1Bbq+Io5pvZ45q"],[4,4282532607],[0,0,0]]],[3,"eczMkZ6FhN9pOahFiXCs4L",null,null,null,1,0]],[13,"ShowLabel-001",1,9,[[2,-201,[0,"6bzVNoSRVNo440nAz3TT2H"],[5,138,68.4]],[5,"部分刷新",30,30,-202,[0,"d9Y5o6rlJEBKj5oylmkfu5"]],[10,4,-203,[0,"dff+CZKvtFV5WcBtyGtdiy"]],[9,5,-204,[0,"f9C4j/TxpER4SMZ8/gSnWB"],[4,4282532607],[0,0,0]]],[3,"17scLSeKpM54BusSV6VDU4",null,null,null,1,0]],[21,"ShowLabel-001",1,[[2,-205,[0,"e0Dl3tltVFxZ+bJeM3ycM5"],[5,138,68.4]],[5,"隐藏菜单",30,30,-206,[0,"29n2+RRVFH4JXDUW0ILHoj"]],[10,4,-207,[0,"07QdRnkYFFtZYMT3hQbFGU"]],[9,5,-208,[0,"dfSAFw5kRLjq6gHis0VgCt"],[4,4282532607],[0,0,0]]],[3,"6dZuR5j0BJsYj5XA1xrfrg",null,null,null,1,0]],[21,"ShowLabel-001",1,[[2,-209,[0,"4bZyGlyIdKhL62Syk2vXgQ"],[5,138,68.4]],[5,"更多菜单",30,30,-210,[0,"727neY+5BDGYz2o2VsGngR"]],[10,4,-211,[0,"53aywhT2pCW7hwB2jWTK/i"]],[9,5,-212,[0,"b6JhWozO5DsouTzRvL9QG3"],[4,4282532607],[0,0,0]]],[3,"6bWdAXxgVEqqqGsRMMZ53o",null,null,null,1,0]],[13,"ShowLabel-001",1,13,[[2,-213,[0,"6axQdBBa1MFpX/zTARHns6"],[5,62,68.4]],[5,"返回",22,22,-214,[0,"88hMvCzJxCaqWRfkqJos6Z"]],[10,4,-215,[0,"40Htx6VapJCqRH/789ZRB5"]],[9,5,-216,[0,"446Vvfa4BOJYknwWE03tCM"],[4,4282532607],[0,0,0]]],[3,"43w8ceoftMNIsziJIf497M",null,null,null,1,0]],[27,"CodeDebugSpriteSplashBg",false,1,11,[[2,-217,[0,"1666v4omhEpYFR6Zqcrvey"],[5,120,60]],[18,0,-218,[0,"ceQvHHLhtLE5Xgrz6y1z1e"],[4,4282001920],1],[46,34,25.435000000000002,579.564,-219,[0,"bdY/3dRBNBgqLH22QVfmp+"],1]],[3,"85U4Cz/W1MnKSyuKi1MzZU",null,null,null,1,0],[1,274.565,50.416,0]],[41,"TEXT_LABEL",false,1,17,[[[6,-220,[0,"caLbVR5HxD4rDpQw6F+XHO"],[5,448,180],[0,0,1]],-221,[53,-222,[0,"28MQXicORBBoY+G0utwpPs"],[4,4284638720]]],4,1,4],[7,"40mQubGXtDfJbFrjpUX/GP",1,0],[1,-223,90,0]],[41,"TEXT_LABEL",false,1,19,[[[6,-223,[0,"d5o7Zw7qVJtq6FSffkcTus"],[5,448,180],[0,0,1]],-224,[53,-225,[0,"67N922bdxC6pqzQSbjOHQf"],[4,4284638720]]],4,1,4],[7,"d8IbI2IEFB3pAFdG5ANTPc",1,0],[1,-223,90,0]],[39,"bg",1,8,[32],[[2,-226,[0,"39K4LeRopE2IFZxSwb7XeM"],[5,160,70]],[8,1,0,-227,[0,"cbTmJx4S1NnptYq5zd2fMq"],[4,4294949384],24]],[3,"e3rG2sNYlBOK7IS9lEtSOV",null,null,null,1,0]],[70,"check",false,1,8,[33],[[[2,-228,[0,"a5YH9YeUxI0KAY7+Hkzb20"],[5,160,70]],-229],4,1],[3,"fe300R+9lA0aQce9MWl9Sc",null,null,null,1,0]],[39,"bg",1,10,[35],[[2,-230,[0,"95zkzTrO9MLbBOhVy5zYhR"],[5,160,70]],[8,1,0,-231,[0,"42UYNgNUZM44pCv1wCKhVZ"],[4,4294949384],28]],[3,"f3jGVFluFI8pbk8tyJl3fZ",null,null,null,1,0]],[71,"check",1,10,[36],[[[2,-232,[0,"7eDhtG76VJ0rtNRS+vGCon"],[5,160,70]],-233],4,1],[3,"28VY0H0ahBN7+Fa0vqHEYU",null,null,null,1,0]],[28,"CodeDebugSpriteSplash",false,1,11,[[2,-234,[0,"e79Lj/O6lC2JTjk6FZnW2T"],[5,110,50]],[18,0,-235,[0,"2cXDBEdQZCra+D+a97zjBR"],[4,4294949384],0]],[3,"b9IzAzg+FBGoD7KKCk4ilu",null,null,null,1,0]],[28,"ShowLabel",false,1,11,[[2,-236,[0,"6fhbhyGV9F6p1VrjUnQsUu"],[5,88.61,50.4]],[5,"cTime",33,33,-237,[0,"23Hon39yFLroR1FPO6xp7d"]]],[3,"3fXCxseWZGzKgExJG5SFSa",null,null,null,1,0]],[28,"bg2",false,1,5,[[2,-238,[0,"69YQ2xQu9GALUUedAJR6ex"],[5,110,50]],[8,1,0,-239,[0,"23LfcoAHhKl4CP6S9WyTbH"],[4,4294949384],2]],[3,"24D/ztgx9JpZmvJyi08+uk",null,null,null,1,0]],[27,"Label",false,1,3,[[6,-240,[0,"c68UOAlNhN171Umca6yVvF"],[5,20,50.4],[0,1,0.5]],[5,"偶",20,20,-241,[0,"2frm37uaJHQr0AEEaYyM82"]]],[3,"6cLgLSAi1GUoWE2BQ8AGsY",null,null,null,1,0],[1,187.816,-17,0]],[22,"PLACEHOLDER_LABEL",1,17,[[[6,-242,[0,"e3K5drbhVFt5nhBhwOQs6f"],[5,448,180],[0,0,1]],-243],4,1],[7,"0eAjb787FOLrWbrNEmPxRu",1,0],[1,-223,90,0]],[27,"Label",false,1,4,[[6,-244,[0,"c68UOAlNhN171Umca6yVvF"],[5,20,50.4],[0,1,0.5]],[103,"奇",20,20,-245,[0,"2frm37uaJHQr0AEEaYyM82"],[4,4278190080]]],[3,"c8HYPj6KRBvIAXMGKfG70e",null,null,null,1,0],[1,193.816,-19,0]],[22,"PLACEHOLDER_LABEL",1,19,[[[6,-246,[0,"0cCcjObWpO7Y6UOb4IrqY0"],[5,448,180],[0,0,1]],-247],4,1],[7,"f6/xNtvShOfKwQDL6iV82c",1,0],[1,-223,90,0]],[76,"CocosCodeDebug",1,1,[-248],[3,"f6AQdpTjBMFIOo7/UoR5L3",null,null,null,1,0],[1,0,0,1000]],[106,0,233,640,2000,6,1,52,[0,"69k4Qlb6lD6JQZm7aha+yX"],[4,4278190080]],[55,"",0,0,30,45,45,1,39,[0,"3c7TTPqkJO7Y2wvEeLQpoF"]],[56," 可复制👉代码耗时的👆数据",0,35,35,180,1,49,[0,"dct+rkeN5HdrA8aJf2vXex"],[4,4290493371]],[55,"",0,0,30,45,45,1,40,[0,"c4zjRg08lGzKskBxWaGLc+"]],[56," 可复制👉代码耗时的👆数据",0,35,35,180,1,51,[0,"14eJJJPB9DrLaBUuPfjQU0"],[4,4290493371]],[109,22,20,29,[0,"0bl3Nin0xGcZsbNI5iIS+y"]],[49,1,0,42,[0,"0fn8Pn2khPWo7JIMNcN/X9"],[4,4294949384]],[49,1,0,44,[0,"51oyEGvYJHYLjZ/zA7Anq1"],[4,4294949384]],[104,"FPS: 60.33\nFrame: 0.11\nLogic: 0.23",30,30,35,14,[0,"fcb/72I/ZOHK07HIWjfVjy"]]],0,[0,6,1,0,0,1,0,7,53,0,0,1,0,0,1,0,0,1,0,-1,52,0,-2,11,0,0,2,0,14,15,0,15,12,0,0,2,0,-1,15,0,-2,3,0,-3,4,0,-4,12,0,-5,20,0,-6,6,0,-7,7,0,-8,8,0,-9,9,0,-10,10,0,-11,13,0,-12,14,0,0,3,0,0,3,0,-1,22,0,-2,48,0,-3,16,0,-4,24,0,-5,17,0,0,4,0,0,4,0,-1,25,0,-2,50,0,-3,18,0,-4,27,0,-5,19,0,0,5,0,0,5,0,2,5,0,0,5,0,0,5,0,0,5,0,-1,47,0,-2,21,0,0,6,0,0,6,0,2,6,0,0,6,0,0,6,0,0,6,0,-1,30,0,0,7,0,0,7,0,2,7,0,0,7,0,0,7,0,0,7,0,-1,31,0,0,8,0,8,59,0,2,8,0,0,8,0,0,8,0,0,8,0,-1,41,0,-2,42,0,0,9,0,0,9,0,2,9,0,0,9,0,0,9,0,0,9,0,-1,34,0,0,10,0,8,60,0,2,10,0,0,10,0,0,10,0,0,10,0,-1,43,0,-2,44,0,0,11,0,16,13,0,17,58,0,18,61,0,0,11,0,-1,45,0,-2,46,0,-3,38,0,0,12,0,0,12,0,2,12,0,0,12,0,0,12,0,-1,28,0,0,13,0,0,13,0,2,13,0,0,13,0,0,13,0,-1,37,0,0,14,0,-2,61,0,0,14,0,0,14,0,0,14,0,0,14,0,0,14,0,0,15,0,0,15,0,2,15,0,0,15,0,0,15,0,0,16,0,0,16,0,2,16,0,0,16,0,0,16,0,-1,23,0,0,17,0,0,17,0,9,55,0,10,54,0,0,17,0,0,17,0,-1,39,0,-2,49,0,0,18,0,0,18,0,2,18,0,0,18,0,0,18,0,-1,26,0,0,19,0,0,19,0,9,57,0,10,56,0,0,19,0,0,19,0,-1,40,0,-2,51,0,0,20,0,0,20,0,0,20,0,0,20,0,-1,29,0,0,21,0,0,21,0,0,21,0,0,21,0,0,22,0,0,22,0,0,22,0,0,22,0,0,23,0,0,23,0,0,23,0,0,23,0,0,24,0,0,24,0,0,24,0,0,24,0,0,25,0,0,25,0,0,25,0,0,25,0,0,26,0,0,26,0,0,26,0,0,26,0,0,27,0,0,27,0,0,27,0,0,27,0,0,28,0,0,28,0,0,28,0,0,28,0,0,29,0,0,29,0,-3,58,0,0,29,0,0,30,0,0,30,0,0,30,0,0,30,0,0,31,0,0,31,0,0,31,0,0,31,0,0,32,0,0,32,0,0,32,0,0,32,0,0,33,0,0,33,0,0,33,0,0,33,0,0,34,0,0,34,0,0,34,0,0,34,0,0,35,0,0,35,0,0,35,0,0,35,0,0,36,0,0,36,0,0,36,0,0,36,0,0,37,0,0,37,0,0,37,0,0,37,0,0,38,0,0,38,0,0,38,0,0,39,0,-2,54,0,0,39,0,0,40,0,-2,56,0,0,40,0,0,41,0,0,41,0,0,42,0,-2,59,0,0,43,0,0,43,0,0,44,0,-2,60,0,0,45,0,0,45,0,0,46,0,0,46,0,0,47,0,0,47,0,0,48,0,0,48,0,0,49,0,-2,55,0,0,50,0,0,50,0,0,51,0,-2,57,0,-1,53,0,11,1,2,4,11,5,4,11,32,4,41,33,4,42,35,4,43,36,4,44,248],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,60],[1,1,1,1,3,1,3,1,3,1,12,1,1,3,1,12,1,1,3,1,1,3,1,3,1,3,1,3,1,3,1,3,1,1],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0]],[[{"name":"default_toggle_normal","rect":{"x":0,"y":0,"width":28,"height":28},"offset":{"x":0,"y":0},"originalSize":{"width":28,"height":28},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[11],0,[0],[13],[5]],[[[110,"builtin-particle-trail",[{"hash":1437790364,"name":"builtin-particle-trail|particle-trail:vs_main|tinted-fs:add","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1},{"name":"nodeRotation","type":16,"count":1}],"defines":[]},{"name":"FragConstants","stageFlags":16,"binding":1,"members":[{"name":"tintColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":44,"location":1,"defines":[]},{"name":"a_texCoord1","format":32,"location":2,"defines":[]},{"name":"a_texCoord2","format":32,"location":3,"defines":[]},{"name":"a_color","format":44,"location":4,"defines":[]}],"varyings":[{"name":"uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"color","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]},{"name":"vBarycentric","type":15,"count":1,"stageFlags":17,"location":2,"defines":["CC_DRAW_WIRE_FRAME"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision mediump float;\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  layout(location = 2) out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\n  precision mediump float;\n  layout(set = 0, binding = 0) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n  };\n  layout(set = 0, binding = 1) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  vec4 CCFragOutput (vec4 color) {\n    return color;\n  }\n  layout(location = 0) in vec2 uv;\n  layout(location = 1) in vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    layout(location = 2) in vec3 vBarycentric;\n  #endif\n  layout(set = 1, binding = 2) uniform sampler2D mainTexture;\n  layout(set = 1, binding = 1) uniform FragConstants {\n    vec4 tintColor;\n  };\n  vec4 add () {\n    vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., 1.);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"},"glsl3":{"vert":"\nprecision mediump float;\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\n  precision mediump float;\n  layout(std140) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n  };\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  vec4 CCFragOutput (vec4 color) {\n    return color;\n  }\n  in vec2 uv;\n  in vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    in vec3 vBarycentric;\n  #endif\n  uniform sampler2D mainTexture;\n  layout(std140) uniform FragConstants {\n    vec4 tintColor;\n  };\n  vec4 add () {\n    vec4 col = 2.0 * color * tintColor * texture(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., 1.);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = add(); }"},"glsl1":{"vert":"\nprecision mediump float;\n   uniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  varying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\n  precision mediump float;\n  vec4 CCFragOutput (vec4 color) {\n    return color;\n  }\n  varying vec2 uv;\n  varying vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    varying vec3 vBarycentric;\n  #endif\n  uniform sampler2D mainTexture;\n      uniform vec4 tintColor;\n  vec4 add () {\n    vec4 col = 2.0 * color * tintColor * texture2D(mainTexture, uv);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., 1.);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nvoid main() { gl_FragColor = add(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":52,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":40}},"defines":[{"name":"CC_RENDER_MODE","type":"number","defines":[],"range":[0,4]},{"name":"CC_DRAW_WIRE_FRAME","type":"boolean","defines":[]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]}]},{"hash":1577621763,"name":"builtin-particle-trail|particle-trail:vs_main|tinted-fs:multiply","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1},{"name":"nodeRotation","type":16,"count":1}],"defines":[]},{"name":"FragConstants","stageFlags":16,"binding":1,"members":[{"name":"tintColor","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":2,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":44,"location":1,"defines":[]},{"name":"a_texCoord1","format":32,"location":2,"defines":[]},{"name":"a_texCoord2","format":32,"location":3,"defines":[]},{"name":"a_color","format":44,"location":4,"defines":[]}],"varyings":[{"name":"uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"color","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]},{"name":"vBarycentric","type":15,"count":1,"stageFlags":17,"location":2,"defines":["CC_DRAW_WIRE_FRAME"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision mediump float;\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  layout(location = 2) out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\n  precision mediump float;\n  layout(set = 0, binding = 0) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n  };\n  layout(set = 0, binding = 1) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  vec4 CCFragOutput (vec4 color) {\n    return color;\n  }\n  layout(location = 0) in vec2 uv;\n  layout(location = 1) in vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    layout(location = 2) in vec3 vBarycentric;\n  #endif\n  layout(set = 1, binding = 2) uniform sampler2D mainTexture;\n  layout(set = 1, binding = 1) uniform FragConstants {\n    vec4 tintColor;\n  };\n  vec4 multiply () {\n    vec4 col;\n    vec4 texColor = texture(mainTexture, uv);\n    col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n    col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., col.a);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = multiply(); }"},"glsl3":{"vert":"\nprecision mediump float;\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\n  precision mediump float;\n  layout(std140) uniform CCGlobal {\n    highp   vec4 cc_time;\n    mediump vec4 cc_screenSize;\n    mediump vec4 cc_nativeSize;\n  };\n  layout(std140) uniform CCCamera {\n    highp   mat4 cc_matView;\n    highp   mat4 cc_matViewInv;\n    highp   mat4 cc_matProj;\n    highp   mat4 cc_matProjInv;\n    highp   mat4 cc_matViewProj;\n    highp   mat4 cc_matViewProjInv;\n    highp   vec4 cc_cameraPos;\n    mediump vec4 cc_screenScale;\n    mediump vec4 cc_exposure;\n    mediump vec4 cc_mainLitDir;\n    mediump vec4 cc_mainLitColor;\n    mediump vec4 cc_ambientSky;\n    mediump vec4 cc_ambientGround;\n    mediump vec4 cc_fogColor;\n    mediump vec4 cc_fogBase;\n    mediump vec4 cc_fogAdd;\n    mediump vec4 cc_nearFar;\n    mediump vec4 cc_viewPort;\n  };\n  vec4 CCFragOutput (vec4 color) {\n    return color;\n  }\n  in vec2 uv;\n  in vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    in vec3 vBarycentric;\n  #endif\n  uniform sampler2D mainTexture;\n  layout(std140) uniform FragConstants {\n    vec4 tintColor;\n  };\n  vec4 multiply () {\n    vec4 col;\n    vec4 texColor = texture(mainTexture, uv);\n    col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n    col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., col.a);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = multiply(); }"},"glsl1":{"vert":"\nprecision mediump float;\n   uniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  varying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\n  precision mediump float;\n  vec4 CCFragOutput (vec4 color) {\n    return color;\n  }\n  varying vec2 uv;\n  varying vec4 color;\n  #if CC_DRAW_WIRE_FRAME\n    varying vec3 vBarycentric;\n  #endif\n  uniform sampler2D mainTexture;\n      uniform vec4 tintColor;\n  vec4 multiply () {\n    vec4 col;\n    vec4 texColor = texture2D(mainTexture, uv);\n    col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);\n    col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);\n#if CC_DRAW_WIRE_FRAME\n    if (any(lessThan(vBarycentric, vec3(0.02)))) {\n        col = vec4(0., 1., 1., col.a);\n    }\n#endif\n    return CCFragOutput(col);\n  }\nvoid main() { gl_FragColor = multiply(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":52,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":40}},"defines":[{"name":"CC_RENDER_MODE","type":"number","defines":[],"range":[0,4]},{"name":"CC_DRAW_WIRE_FRAME","type":"boolean","defines":[]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]}]},{"hash":1428325067,"name":"builtin-particle-trail|particle-trail:vs_main|no-tint-fs:addSmooth","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1},{"name":"nodeRotation","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":44,"location":1,"defines":[]},{"name":"a_texCoord1","format":32,"location":2,"defines":[]},{"name":"a_texCoord2","format":32,"location":3,"defines":[]},{"name":"a_color","format":44,"location":4,"defines":[]}],"varyings":[{"name":"uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"color","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]},{"name":"vBarycentric","type":15,"count":1,"stageFlags":1,"location":2,"defines":["CC_DRAW_WIRE_FRAME"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision mediump float;\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  layout(location = 2) out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 1) uniform sampler2D mainTexture;\nvec4 addSmooth () {\n  vec4 col = color * texture(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = addSmooth(); }"},"glsl3":{"vert":"\nprecision mediump float;\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nvec4 addSmooth () {\n  vec4 col = color * texture(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = addSmooth(); }"},"glsl1":{"vert":"\nprecision mediump float;\n   uniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  varying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nvec4 addSmooth () {\n  vec4 col = color * texture2D(mainTexture, uv);\n  col.rgb *= col.a;\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = addSmooth(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":52,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":39}},"defines":[{"name":"CC_RENDER_MODE","type":"number","defines":[],"range":[0,4]},{"name":"CC_DRAW_WIRE_FRAME","type":"boolean","defines":[]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]}]},{"hash":1371359874,"name":"builtin-particle-trail|particle-trail:vs_main|no-tint-fs:premultiplied","blocks":[{"name":"Constants","stageFlags":1,"binding":0,"members":[{"name":"mainTiling_Offset","type":16,"count":1},{"name":"frameTile_velLenScale","type":16,"count":1},{"name":"scale","type":16,"count":1},{"name":"nodeRotation","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":44,"location":1,"defines":[]},{"name":"a_texCoord1","format":32,"location":2,"defines":[]},{"name":"a_texCoord2","format":32,"location":3,"defines":[]},{"name":"a_color","format":44,"location":4,"defines":[]}],"varyings":[{"name":"uv","type":14,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"color","type":16,"count":1,"stageFlags":17,"location":1,"defines":[]},{"name":"vBarycentric","type":15,"count":1,"stageFlags":1,"location":2,"defines":["CC_DRAW_WIRE_FRAME"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision mediump float;\nlayout(set = 1, binding = 0) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(set = 2, binding = 0) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nlayout(location = 0) out mediump vec2 uv;\nlayout(location = 1) out mediump vec4 color;\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec4 a_texCoord;\nlayout(location = 2) in vec3 a_texCoord1;\nlayout(location = 3) in vec3 a_texCoord2;\nlayout(location = 4) in vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  layout(location = 2) out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\nprecision mediump float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nlayout(location = 0) in vec2 uv;\nlayout(location = 1) in vec4 color;\nlayout(set = 1, binding = 1) uniform sampler2D mainTexture;\nvec4 premultiplied () {\n  vec4 col = color * texture(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = premultiplied(); }"},"glsl3":{"vert":"\nprecision mediump float;\nlayout(std140) uniform Constants {\n  vec4 mainTiling_Offset;\n  vec4 frameTile_velLenScale;\n  vec4 scale;\n  vec4 nodeRotation;\n};\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nlayout(std140) uniform CCLocal {\n  highp mat4 cc_matWorld;\n  highp mat4 cc_matWorldIT;\n  highp vec4 cc_lightingMapUVParam;\n};\nout mediump vec2 uv;\nout mediump vec4 color;\nin vec3 a_position;\nin vec4 a_texCoord;\nin vec3 a_texCoord1;\nin vec3 a_texCoord2;\nin vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  out vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nin vec2 uv;\nin vec4 color;\nuniform sampler2D mainTexture;\nvec4 premultiplied () {\n  vec4 col = color * texture(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = premultiplied(); }"},"glsl1":{"vert":"\nprecision mediump float;\n   uniform vec4 mainTiling_Offset;\nuniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\nuniform highp mat4 cc_matWorld;\nvarying mediump vec2 uv;\nvarying mediump vec4 color;\nattribute vec3 a_position;\nattribute vec4 a_texCoord;\nattribute vec3 a_texCoord1;\nattribute vec3 a_texCoord2;\nattribute vec4 a_color;\n#if CC_DRAW_WIRE_FRAME\n  varying vec3 vBarycentric;\n#endif\nvec4 vs_main() {\n  highp vec4 pos = vec4(a_position, 1);\n  vec4 velocity = vec4(a_texCoord1.xyz, 0);\n  #if !CC_USE_WORLD_SPACE\n    pos = cc_matWorld * pos;\n    velocity = cc_matWorld * velocity;\n  #endif\n  float vertOffset = (a_texCoord.x - 0.5) * a_texCoord.y;\n  vec3 camUp = normalize(cross(pos.xyz - cc_cameraPos.xyz, velocity.xyz));\n  pos.xyz += camUp * vertOffset;\n  pos = cc_matViewProj * pos;\n  uv = a_texCoord.zw * mainTiling_Offset.xy + mainTiling_Offset.zw;;\n  color = a_color;\n  #if CC_DRAW_WIRE_FRAME\n    vBarycentric = a_texCoord2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vs_main(); }","frag":"\nprecision mediump float;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nvarying vec2 uv;\nvarying vec4 color;\nuniform sampler2D mainTexture;\nvec4 premultiplied () {\n  vec4 col = color * texture2D(mainTexture, uv) * color.a;\n  return CCFragOutput(col);\n}\nvoid main() { gl_FragColor = premultiplied(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":52,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":39}},"defines":[{"name":"CC_RENDER_MODE","type":"number","defines":[],"range":[0,4]},{"name":"CC_DRAW_WIRE_FRAME","type":"boolean","defines":[]},{"name":"CC_USE_WORLD_SPACE","type":"boolean","defines":[]}]}],[{"name":"add","passes":[{"program":"builtin-particle-trail|particle-trail:vs_main|tinted-fs:add","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":1,"blendSrcAlpha":2,"blendDstAlpha":1}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"frameTile_velLenScale":{"type":16,"value":[1,1,0,0]},"tintColor":{"type":16,"value":[0.5,0.5,0.5,0.5],"editor":{"type":"color"}}}}]},{"name":"alpha-blend","passes":[{"program":"builtin-particle-trail|particle-trail:vs_main|tinted-fs:add","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":4,"blendSrcAlpha":1,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"frameTile_velLenScale":{"type":16,"value":[1,1,0,0]},"tintColor":{"type":16,"value":[0.5,0.5,0.5,0.5],"editor":{"type":"color"}}}}]},{"name":"add-multiply","passes":[{"program":"builtin-particle-trail|particle-trail:vs_main|tinted-fs:multiply","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":4,"blendSrcAlpha":1,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"frameTile_velLenScale":{"type":16,"value":[1,1,0,0]},"tintColor":{"type":16,"value":[0.5,0.5,0.5,0.5],"editor":{"type":"color"}}}}]},{"name":"add-smooth","passes":[{"program":"builtin-particle-trail|particle-trail:vs_main|no-tint-fs:addSmooth","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":4,"blendSrcAlpha":1,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"frameTile_velLenScale":{"type":16,"value":[1,1,0,0]}}}]},{"name":"premultiply-blend","passes":[{"program":"builtin-particle-trail|particle-trail:vs_main|no-tint-fs:premultiplied","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":1,"blendDst":4,"blendSrcAlpha":1,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"mainTexture":{"value":"grey","type":28},"mainTiling_Offset":{"type":16,"value":[1,1,0,0]},"frameTile_velLenScale":{"type":16,"value":[1,1,0,0]}}}]}]]],0,0,[],[],[]],[[[37,"TrailModule02"],[64,"TrailModule02",[-2,-3],[7,"a8KUcggipAHoIZ9qqfYejW",-1,0]],[43,"TrailModule02",1,[-4],[7,"fcn7yiztNOVIH1tYt/9vS+",1,0],[1,0.18,0.1,0.5]],[58,1,2,[0,"02nluIw+hC9rc888NqDZWd"],[[null,0],0,6],[12],[1],[1],[1],[1],[1],[1],[1],[1],[4,2],[1],[1],[1],[[30,[4,1]]],[59,[12]],[60,0,8,0,[1]],[31,[1],[1],[1],[1]],[32,[1],[1],[1],[4,1]],[33,[1],[1],[1]],[34,[1],[1],[1],[1]],[35,[1],[1],[1]],[36,[1],[1]],[61,true,false,false,[4,0.8],[4,0.1],[12],[12],-5],[62,2]],[43,"TrailModule02",1,[-6],[7,"eemNW/m6NBJ5wfYnvnhePh",1,0],[1,-0.18,0.1,0.5]],[58,1,4,[0,"78L5giq1tJNqQ/RGrHOkzG"],[[null,1],0,6],[12],[1],[1],[1],[1],[1],[1],[1],[1],[4,2],[1],[1],[1],[[30,[4,1]]],[59,[12]],[60,0,8,0,[1]],[31,[1],[1],[1],[1]],[32,[1],[1],[1],[4,1]],[33,[1],[1],[1]],[34,[1],[1],[1],[1]],[35,[1],[1],[1]],[36,[1],[1]],[61,true,false,false,[4,0.8],[4,0.1],[12],[12],-7],[62,2]]],0,[0,6,1,0,-1,2,0,-2,4,0,-1,3,0,5,3,0,-1,5,0,5,5,0,11,1,7],[0,0],[-2,-2],[2,2]],[[[118,"main"],[72,"Canvas",33554432,"6fBTKAM9BJipWBL6z8kjmb",[-8,-9,-10,-11],[[[45,"Canvas<UITransform>",-1,[5,720,1280]],[80,"Canvas<Canvas>",-3,-2],-4,[83,45,-5],[119,-7,-6,11]],4,4,1,4,4],[1,360,640,0]],[120,"main",[-12,-13,-14,-15,-16,-17,-18,-19,1],[89,"e96d6ae0-6179-4ac3-8969-a9b662fb0e9c"],[121,[122,90000,3.515625,[2,0.8392156862745098,0.9647058823529412,1,2.3437490625],[2,1,1,1,1],[2,0.8392156862745098,0.9647058823529412,1,3.515625],[2,1,1,1,1]],[123,true,0.1,1,30,3.4641016151377544,0.2980392156862745],[124,false],[125,[4,4292993505]],[126]]],[73,"loading",33554432,1,[-26,-27,-28,-29],[[[29,"loading<UITransform>",-20,[0,"6egT/BrSlKg405gNCkflT7"],[5,720,1280]],[84,"loading<Widget>",45,100,100,1,-21,[0,"dbJsmv7ctEA4aorcjMmHdW"],1],-22,[91,"loading<Sprite>",false,-23,[0,"a8wJ9TALNCKLzrB8a1mLCr"]],[127,-24,10],[128,-25]],4,4,1,4,4,4]],[65,"loadingCar03",33554432,3,[-33,-34,-35],[[29,"loadingCar03<UITransform>",-30,[0,"a7WcN0fq9J7IWgUDveOVhh"],[5,144,26]],[50,"loadingCar03<Sprite>",0,-31,[0,"58if+HdgxAWotkP6c7jCW6"],7],[129,"loadingCar03<Animation>",true,-32,[0,"b4jN3SeUtIfq/2eCrd4Uxl"],[8],9]]],[40,"loadingCar01",33554432,4,[-38,-39],[[29,"loadingCar01<UITransform>",-36,[0,"baY4XPA1FHxKHorQo3zI2H"],[5,195,95]],[50,"loadingCar01<Sprite>",0,-37,[0,"30DA+hF0pIb6JxD4ix8pjh"],6]],[1,0,31.452999999999975,0]],[40,"progress",33554432,3,[-42,-43],[[2,-40,[0,"d9wzpk1Y1CMqurgnVCSvNF"],[5,57.82,40]],[130,1,1,-41,[0,"63QhzOb/5O3JnDQ5aawoBR"]]],[1,0,-130,0]],[16,"tip",33554432,1,[[78,-44,[5,253.37,50.4]],[105,"小提示：请用 login 场景运行",20,20,-45],[85,4,20,-46]],[1,0,-594.8,0]],[74,"car",33554432,4,[[-47,[131,-48,[0,"63uYVc5l5GWqZRWQthO5uW"]],[44,-49,[0,"85PiOe/atC2Z2BnFUO6mVA"]]],1,4,4],[1,97.689,-2.848,0],[3,0,-0.7071067811865475,0,0.7071067811865476],[1,0,-90,0]],[42,"progress",33554432,6,[[[2,-50,[0,"f1w+ZC3W9Kvoh057L4uTBX"],[5,22.25,50.4]],-51,[57,"0",40,-52,[0,"0a+q0IDYJIEZGVSmveekMQ"]]],4,1,4],[1,-17.785,0,0]],[132,"carManager<carManager>"],[16,"goldPos",33554432,1,[[45,"goldPos<UITransform>",-53,[5,50,50]],[86,"goldPos<Widget>",9,20,50,1,-54,1]],[1,-315,565,0]],[66,"bg",33554432,3,[[2,-55,[0,"8e3urAe8RKW7Ho4tDUzZZs"],[5,720,1600]],[51,2,false,-56,[0,"a3SFmkhdZERJkAKLx3XeW4"],0]]],[16,"shadow",33554432,4,[[2,-57,[0,"73JYvH2F1KG7G9jc2dWPUC"],[5,278,92]],[51,2,false,-58,[0,"f2STupipNAdalPambEYOIx"],1]],[1,0,-16.76,0]],[16,"loadingCar02",33554432,5,[[2,-59,[0,"5cWRCVuvBC36YNPQW3wTsA"],[5,32,32]],[52,0,-60,[0,"fd5ZZqgHtN8Kd9ih6KMnuN"],4]],[1,-49.023,-40.548,0]],[16,"loadingCar03",33554432,5,[[2,-61,[0,"0fVPFJU95G/KYlIfETIWAb"],[5,32,32]],[52,0,-62,[0,"d9QyOiAXVKlqj6KvNb6X8J"],5]],[1,44.1,-41.744,0]],[16,"percent",33554432,6,[[2,-63,[0,"2aBFG3oQhOgpO3xToxICCe"],[5,35.57,50.4]],[57,"%",40,-64,[0,"5a46w4sO1P8ayyjtb+k2gu"]]],[1,11.125,0,0]],[42,"tips",33554432,3,[[[2,-65,[0,"64daaEp6ZN9ZvTcZ+We0nx"],[5,186.67,50.4]],-66],4,1],[1,0,-200,0]],[75,"Camera","c9DMICJLFO5IeO07EPon7U",2,[[[107,"Camera<Camera>",1,200,0,1083179008,-67,[4,4278190080]],-68],4,1],[1,2,1,45],[3,0.5,0.5,-0.4999999999999999,0.5000000000000001],[1,90,90,0]],[67,"ground","74Ik+C9nFKIaaIMYem97us",2,[[133,-69,[1,10,0.00001,10]]],[1,100,1,100]],[68,"core","61pedcRJZHlZoG2orKlqVN",2,[[134,-74,-73,-72,-71,10,-70,19]]],[135,1,10,7],[77,"UICamera_Canvas",33554432,1,[-75],[1,0,0,1000]],[108,0,2,640,2000,0,42467328,22,[4,0]],[111,"car<ParticleSystem>",1.2,30,8,[0,"b9x5A9ScBESaNmhvaAKrTB"],[2],[12],[4,15],[1],[1],[4,80],[1],[1],[4,45],[1],[4,0.5],[4,-5],[4,15],[1],[[30,[1]]],[114,true,[112,2,[4,4278650644],[4,4291026400]]],[115,true,8,0,[1]],[31,[113,3,20,5],[1],[1],[1]],[32,[1],[1],[1],[4,1]],[33,[1],[1],[1]],[34,[1],[1],[1],[1]],[35,[1],[1],[1]],[36,[1],[1]],[116,[1],[1],[12],[12],-76],[117,3]],[136,9,[0,"de4wdygStLtoBc0oB68x1j"]],[5,"正在加载中...",32,32,17,[0,"b1Dxx9oIFAfZ9DqvrGhziM"]],[137,"loading<loading>",3,[0,"0cNHwSQu5A97T6Qyqw3yRC"],25,26],[23,"carManager","41X1KWCiVAHKJosV8PvWHs",2,[10]],[138,"Camera<follow>",false,18,[1,0,8,8]],[139],[23,"map","da7mwPtl9Ng6We4DEm0Pdr",2,[30]],[140,"customerManager<customerManager>"],[23,"customerManager","b44AnqOxBAlZ82meUtOH7S",2,[32]],[141,10],[23,"effectManager","d5+yEjVkBNb7NGfRFMLdUX",2,[34]],[69,"Main Light","c0y6F5f+pAvI805TdmxIjx",2,[[142,"Main Light<DirectionalLight>",true,5264,20000,0.5208333333333334,-77,[4,4294833823],[143]]],[1,8.88,27.902,9.736],[3,-0.8197396846350875,0.11414891268284719,-0.03675812290240226,0.5600408159843199],[1,-110.858,3.981,-13.198]]],0,[0,0,1,0,7,23,0,0,1,0,-3,21,0,0,1,0,19,2,0,0,1,0,-1,11,0,-2,22,0,-3,3,0,-4,7,0,-1,20,0,-2,36,0,-3,18,0,-4,19,0,-5,31,0,-6,33,0,-7,35,0,-8,28,0,0,3,0,0,3,0,-3,27,0,0,3,0,0,3,0,0,3,0,-1,12,0,-2,4,0,-3,6,0,-4,17,0,0,4,0,0,4,0,0,4,0,-1,13,0,-2,8,0,-3,5,0,0,5,0,0,5,0,-1,14,0,-2,15,0,0,6,0,0,6,0,-1,9,0,-2,16,0,0,7,0,0,7,0,0,7,0,-1,24,0,0,8,0,0,8,0,0,9,0,-2,25,0,0,9,0,0,11,0,0,11,0,0,12,0,0,12,0,0,13,0,0,13,0,0,14,0,0,14,0,0,15,0,0,15,0,0,16,0,0,16,0,0,17,0,-2,26,0,0,18,0,-2,29,0,0,19,0,20,34,0,21,32,0,22,30,0,23,21,0,0,20,0,-1,23,0,5,24,0,0,36,0,24,2,1,4,2,10,25,29,10,0,28,21,26,27,30,0,31,32,0,33,34,0,35,77],[0,0,0,0,0,0,0,0,0,0,0,0,21,21,34],[1,1,-1,27,1,1,1,1,-1,28,29,30,31,32,33],[6,7,8,9,3,3,10,11,4,4,12,13,14,15,16]],[[{"name":"codeDebugBg","rect":{"x":0,"y":1,"width":268,"height":209},"offset":{"x":0,"y":-0.5},"originalSize":{"width":268,"height":210},"rotated":false,"capInsets":[0,0,0,0],"packable":true}],[11],0,[0],[13],[17]],[[[144,"1",[{"blendState":{"targets":[{}]},"depthStencilState":{},"rasterizerState":{}}],[{}],[[[{},"tintColor",8,[4,1180984420],"mainTexture",6,0]],11]]],0,0,[0,0],[34,35],[18,19]]]]
